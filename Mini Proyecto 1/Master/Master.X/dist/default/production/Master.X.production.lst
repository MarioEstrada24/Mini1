

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 23:12:14 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    52                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    53                           	dabs	1,0x7E,2
    54  0000                     
    55                           ; Version 2.20
    56                           ; Generated 12/02/2020 GMT
    57                           ; 
    58                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC16F887 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     	;# 
    90  0001                     	;# 
    91  0002                     	;# 
    92  0003                     	;# 
    93  0004                     	;# 
    94  0005                     	;# 
    95  0006                     	;# 
    96  0007                     	;# 
    97  0008                     	;# 
    98  0009                     	;# 
    99  000A                     	;# 
   100  000B                     	;# 
   101  000C                     	;# 
   102  000D                     	;# 
   103  000E                     	;# 
   104  000E                     	;# 
   105  000F                     	;# 
   106  0010                     	;# 
   107  0011                     	;# 
   108  0012                     	;# 
   109  0013                     	;# 
   110  0014                     	;# 
   111  0015                     	;# 
   112  0015                     	;# 
   113  0016                     	;# 
   114  0017                     	;# 
   115  0018                     	;# 
   116  0019                     	;# 
   117  001A                     	;# 
   118  001B                     	;# 
   119  001B                     	;# 
   120  001C                     	;# 
   121  001D                     	;# 
   122  001E                     	;# 
   123  001F                     	;# 
   124  0081                     	;# 
   125  0085                     	;# 
   126  0086                     	;# 
   127  0087                     	;# 
   128  0088                     	;# 
   129  0089                     	;# 
   130  008C                     	;# 
   131  008D                     	;# 
   132  008E                     	;# 
   133  008F                     	;# 
   134  0090                     	;# 
   135  0091                     	;# 
   136  0092                     	;# 
   137  0093                     	;# 
   138  0093                     	;# 
   139  0093                     	;# 
   140  0094                     	;# 
   141  0095                     	;# 
   142  0096                     	;# 
   143  0097                     	;# 
   144  0098                     	;# 
   145  0099                     	;# 
   146  009A                     	;# 
   147  009B                     	;# 
   148  009C                     	;# 
   149  009D                     	;# 
   150  009E                     	;# 
   151  009F                     	;# 
   152  0105                     	;# 
   153  0107                     	;# 
   154  0108                     	;# 
   155  0109                     	;# 
   156  010C                     	;# 
   157  010C                     	;# 
   158  010D                     	;# 
   159  010E                     	;# 
   160  010F                     	;# 
   161  0185                     	;# 
   162  0187                     	;# 
   163  0188                     	;# 
   164  0189                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167  0000                     	;# 
   168  0001                     	;# 
   169  0002                     	;# 
   170  0003                     	;# 
   171  0004                     	;# 
   172  0005                     	;# 
   173  0006                     	;# 
   174  0007                     	;# 
   175  0008                     	;# 
   176  0009                     	;# 
   177  000A                     	;# 
   178  000B                     	;# 
   179  000C                     	;# 
   180  000D                     	;# 
   181  000E                     	;# 
   182  000E                     	;# 
   183  000F                     	;# 
   184  0010                     	;# 
   185  0011                     	;# 
   186  0012                     	;# 
   187  0013                     	;# 
   188  0014                     	;# 
   189  0015                     	;# 
   190  0015                     	;# 
   191  0016                     	;# 
   192  0017                     	;# 
   193  0018                     	;# 
   194  0019                     	;# 
   195  001A                     	;# 
   196  001B                     	;# 
   197  001B                     	;# 
   198  001C                     	;# 
   199  001D                     	;# 
   200  001E                     	;# 
   201  001F                     	;# 
   202  0081                     	;# 
   203  0085                     	;# 
   204  0086                     	;# 
   205  0087                     	;# 
   206  0088                     	;# 
   207  0089                     	;# 
   208  008C                     	;# 
   209  008D                     	;# 
   210  008E                     	;# 
   211  008F                     	;# 
   212  0090                     	;# 
   213  0091                     	;# 
   214  0092                     	;# 
   215  0093                     	;# 
   216  0093                     	;# 
   217  0093                     	;# 
   218  0094                     	;# 
   219  0095                     	;# 
   220  0096                     	;# 
   221  0097                     	;# 
   222  0098                     	;# 
   223  0099                     	;# 
   224  009A                     	;# 
   225  009B                     	;# 
   226  009C                     	;# 
   227  009D                     	;# 
   228  009E                     	;# 
   229  009F                     	;# 
   230  0105                     	;# 
   231  0107                     	;# 
   232  0108                     	;# 
   233  0109                     	;# 
   234  010C                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  010E                     	;# 
   238  010F                     	;# 
   239  0185                     	;# 
   240  0187                     	;# 
   241  0188                     	;# 
   242  0189                     	;# 
   243  018C                     	;# 
   244  018D                     	;# 
   245  0000                     	;# 
   246  0001                     	;# 
   247  0002                     	;# 
   248  0003                     	;# 
   249  0004                     	;# 
   250  0005                     	;# 
   251  0006                     	;# 
   252  0007                     	;# 
   253  0008                     	;# 
   254  0009                     	;# 
   255  000A                     	;# 
   256  000B                     	;# 
   257  000C                     	;# 
   258  000D                     	;# 
   259  000E                     	;# 
   260  000E                     	;# 
   261  000F                     	;# 
   262  0010                     	;# 
   263  0011                     	;# 
   264  0012                     	;# 
   265  0013                     	;# 
   266  0014                     	;# 
   267  0015                     	;# 
   268  0015                     	;# 
   269  0016                     	;# 
   270  0017                     	;# 
   271  0018                     	;# 
   272  0019                     	;# 
   273  001A                     	;# 
   274  001B                     	;# 
   275  001B                     	;# 
   276  001C                     	;# 
   277  001D                     	;# 
   278  001E                     	;# 
   279  001F                     	;# 
   280  0081                     	;# 
   281  0085                     	;# 
   282  0086                     	;# 
   283  0087                     	;# 
   284  0088                     	;# 
   285  0089                     	;# 
   286  008C                     	;# 
   287  008D                     	;# 
   288  008E                     	;# 
   289  008F                     	;# 
   290  0090                     	;# 
   291  0091                     	;# 
   292  0092                     	;# 
   293  0093                     	;# 
   294  0093                     	;# 
   295  0093                     	;# 
   296  0094                     	;# 
   297  0095                     	;# 
   298  0096                     	;# 
   299  0097                     	;# 
   300  0098                     	;# 
   301  0099                     	;# 
   302  009A                     	;# 
   303  009B                     	;# 
   304  009C                     	;# 
   305  009D                     	;# 
   306  009E                     	;# 
   307  009F                     	;# 
   308  0105                     	;# 
   309  0107                     	;# 
   310  0108                     	;# 
   311  0109                     	;# 
   312  010C                     	;# 
   313  010C                     	;# 
   314  010D                     	;# 
   315  010E                     	;# 
   316  010F                     	;# 
   317  0185                     	;# 
   318  0187                     	;# 
   319  0188                     	;# 
   320  0189                     	;# 
   321  018C                     	;# 
   322  018D                     	;# 
   323  0000                     	;# 
   324  0001                     	;# 
   325  0002                     	;# 
   326  0003                     	;# 
   327  0004                     	;# 
   328  0005                     	;# 
   329  0006                     	;# 
   330  0007                     	;# 
   331  0008                     	;# 
   332  0009                     	;# 
   333  000A                     	;# 
   334  000B                     	;# 
   335  000C                     	;# 
   336  000D                     	;# 
   337  000E                     	;# 
   338  000E                     	;# 
   339  000F                     	;# 
   340  0010                     	;# 
   341  0011                     	;# 
   342  0012                     	;# 
   343  0013                     	;# 
   344  0014                     	;# 
   345  0015                     	;# 
   346  0015                     	;# 
   347  0016                     	;# 
   348  0017                     	;# 
   349  0018                     	;# 
   350  0019                     	;# 
   351  001A                     	;# 
   352  001B                     	;# 
   353  001B                     	;# 
   354  001C                     	;# 
   355  001D                     	;# 
   356  001E                     	;# 
   357  001F                     	;# 
   358  0081                     	;# 
   359  0085                     	;# 
   360  0086                     	;# 
   361  0087                     	;# 
   362  0088                     	;# 
   363  0089                     	;# 
   364  008C                     	;# 
   365  008D                     	;# 
   366  008E                     	;# 
   367  008F                     	;# 
   368  0090                     	;# 
   369  0091                     	;# 
   370  0092                     	;# 
   371  0093                     	;# 
   372  0093                     	;# 
   373  0093                     	;# 
   374  0094                     	;# 
   375  0095                     	;# 
   376  0096                     	;# 
   377  0097                     	;# 
   378  0098                     	;# 
   379  0099                     	;# 
   380  009A                     	;# 
   381  009B                     	;# 
   382  009C                     	;# 
   383  009D                     	;# 
   384  009E                     	;# 
   385  009F                     	;# 
   386  0105                     	;# 
   387  0107                     	;# 
   388  0108                     	;# 
   389  0109                     	;# 
   390  010C                     	;# 
   391  010C                     	;# 
   392  010D                     	;# 
   393  010E                     	;# 
   394  010F                     	;# 
   395  0185                     	;# 
   396  0187                     	;# 
   397  0188                     	;# 
   398  0189                     	;# 
   399  018C                     	;# 
   400  018D                     	;# 
   401  0000                     	;# 
   402  0001                     	;# 
   403  0002                     	;# 
   404  0003                     	;# 
   405  0004                     	;# 
   406  0005                     	;# 
   407  0006                     	;# 
   408  0007                     	;# 
   409  0008                     	;# 
   410  0009                     	;# 
   411  000A                     	;# 
   412  000B                     	;# 
   413  000C                     	;# 
   414  000D                     	;# 
   415  000E                     	;# 
   416  000E                     	;# 
   417  000F                     	;# 
   418  0010                     	;# 
   419  0011                     	;# 
   420  0012                     	;# 
   421  0013                     	;# 
   422  0014                     	;# 
   423  0015                     	;# 
   424  0015                     	;# 
   425  0016                     	;# 
   426  0017                     	;# 
   427  0018                     	;# 
   428  0019                     	;# 
   429  001A                     	;# 
   430  001B                     	;# 
   431  001B                     	;# 
   432  001C                     	;# 
   433  001D                     	;# 
   434  001E                     	;# 
   435  001F                     	;# 
   436  0081                     	;# 
   437  0085                     	;# 
   438  0086                     	;# 
   439  0087                     	;# 
   440  0088                     	;# 
   441  0089                     	;# 
   442  008C                     	;# 
   443  008D                     	;# 
   444  008E                     	;# 
   445  008F                     	;# 
   446  0090                     	;# 
   447  0091                     	;# 
   448  0092                     	;# 
   449  0093                     	;# 
   450  0093                     	;# 
   451  0093                     	;# 
   452  0094                     	;# 
   453  0095                     	;# 
   454  0096                     	;# 
   455  0097                     	;# 
   456  0098                     	;# 
   457  0099                     	;# 
   458  009A                     	;# 
   459  009B                     	;# 
   460  009C                     	;# 
   461  009D                     	;# 
   462  009E                     	;# 
   463  009F                     	;# 
   464  0105                     	;# 
   465  0107                     	;# 
   466  0108                     	;# 
   467  0109                     	;# 
   468  010C                     	;# 
   469  010C                     	;# 
   470  010D                     	;# 
   471  010E                     	;# 
   472  010F                     	;# 
   473  0185                     	;# 
   474  0187                     	;# 
   475  0188                     	;# 
   476  0189                     	;# 
   477  018C                     	;# 
   478  018D                     	;# 
   479                           
   480                           	psect	strings
   481  0003                     __pstrings:
   482  0003                     stringtab:
   483  0003                     __stringtab:
   484                           
   485                           ;	String table - string pointers are 1 byte each
   486  0003  1BFF               	btfsc	btemp+1,7
   487  0004  280D               	ljmp	stringcode
   488  0005  1383               	bcf	3,7
   489  0006  187F               	btfsc	btemp+1,0
   490  0007  1783               	bsf	3,7
   491  0008  0800               	movf	0,w
   492  0009  0A84               	incf	4,f
   493  000A  1903               	skipnz
   494  000B  0AFF               	incf	btemp+1,f
   495  000C  0008               	return
   496  000D                     stringcode:
   497  000D                     stringdir:
   498  000D  3000               	movlw	high stringdir
   499  000E  008A               	movwf	10
   500  000F  0804               	movf	4,w
   501  0010  0A84               	incf	4,f
   502  0011  0782               	addwf	2,f
   503  0012                     __stringbase:
   504  0012  3400               	retlw	0
   505  0013                     __end_of__stringtab:
   506  0013                     __powers_:
   507  0013  3400               	retlw	0
   508  0014  3400               	retlw	0
   509  0015  3480               	retlw	128
   510  0016  343F               	retlw	63
   511  0017  3400               	retlw	0
   512  0018  3400               	retlw	0
   513  0019  3420               	retlw	32
   514  001A  3441               	retlw	65
   515  001B  3400               	retlw	0
   516  001C  3400               	retlw	0
   517  001D  34C8               	retlw	200
   518  001E  3442               	retlw	66
   519  001F  3400               	retlw	0
   520  0020  3400               	retlw	0
   521  0021  347A               	retlw	122
   522  0022  3444               	retlw	68
   523  0023  3400               	retlw	0
   524  0024  3440               	retlw	64
   525  0025  341C               	retlw	28
   526  0026  3446               	retlw	70
   527  0027  3400               	retlw	0
   528  0028  3450               	retlw	80
   529  0029  34C3               	retlw	195
   530  002A  3447               	retlw	71
   531  002B  3400               	retlw	0
   532  002C  3424               	retlw	36
   533  002D  3474               	retlw	116
   534  002E  3449               	retlw	73
   535  002F  3480               	retlw	128
   536  0030  3496               	retlw	150
   537  0031  3418               	retlw	24
   538  0032  344B               	retlw	75
   539  0033  3420               	retlw	32
   540  0034  34BC               	retlw	188
   541  0035  34BE               	retlw	190
   542  0036  344C               	retlw	76
   543  0037  3428               	retlw	40
   544  0038  346B               	retlw	107
   545  0039  346E               	retlw	110
   546  003A  344E               	retlw	78
   547  003B  34F9               	retlw	249
   548  003C  3402               	retlw	2
   549  003D  3415               	retlw	21
   550  003E  3450               	retlw	80
   551  003F  34EC               	retlw	236
   552  0040  3478               	retlw	120
   553  0041  34AD               	retlw	173
   554  0042  3460               	retlw	96
   555  0043  34CA               	retlw	202
   556  0044  34F2               	retlw	242
   557  0045  3449               	retlw	73
   558  0046  3471               	retlw	113
   559  0047                     __end_of__powers_:
   560  0047                     __npowers_:
   561  0047  3400               	retlw	0
   562  0048  3400               	retlw	0
   563  0049  3480               	retlw	128
   564  004A  343F               	retlw	63
   565  004B  34CD               	retlw	205
   566  004C  34CC               	retlw	204
   567  004D  34CC               	retlw	204
   568  004E  343D               	retlw	61
   569  004F  340A               	retlw	10
   570  0050  34D7               	retlw	215
   571  0051  3423               	retlw	35
   572  0052  343C               	retlw	60
   573  0053  346F               	retlw	111
   574  0054  3412               	retlw	18
   575  0055  3483               	retlw	131
   576  0056  343A               	retlw	58
   577  0057  3417               	retlw	23
   578  0058  34B7               	retlw	183
   579  0059  34D1               	retlw	209
   580  005A  3438               	retlw	56
   581  005B  34AC               	retlw	172
   582  005C  34C5               	retlw	197
   583  005D  3427               	retlw	39
   584  005E  3437               	retlw	55
   585  005F  34BD               	retlw	189
   586  0060  3437               	retlw	55
   587  0061  3486               	retlw	134
   588  0062  3435               	retlw	53
   589  0063  3495               	retlw	149
   590  0064  34BF               	retlw	191
   591  0065  34D6               	retlw	214
   592  0066  3433               	retlw	51
   593  0067  3477               	retlw	119
   594  0068  34CC               	retlw	204
   595  0069  342B               	retlw	43
   596  006A  3432               	retlw	50
   597  006B  345F               	retlw	95
   598  006C  3470               	retlw	112
   599  006D  3489               	retlw	137
   600  006E  3430               	retlw	48
   601  006F  34FF               	retlw	255
   602  0070  34E6               	retlw	230
   603  0071  34DB               	retlw	219
   604  0072  342E               	retlw	46
   605  0073  3408               	retlw	8
   606  0074  34E5               	retlw	229
   607  0075  343C               	retlw	60
   608  0076  341E               	retlw	30
   609  0077  3460               	retlw	96
   610  0078  3442               	retlw	66
   611  0079  34A2               	retlw	162
   612  007A  340D               	retlw	13
   613  007B                     __end_of__npowers_:
   614  007B                     _dpowers:
   615  007B  3401               	retlw	1
   616  007C  3400               	retlw	0
   617  007D  3400               	retlw	0
   618  007E  3400               	retlw	0
   619  007F  340A               	retlw	10
   620  0080  3400               	retlw	0
   621  0081  3400               	retlw	0
   622  0082  3400               	retlw	0
   623  0083  3464               	retlw	100
   624  0084  3400               	retlw	0
   625  0085  3400               	retlw	0
   626  0086  3400               	retlw	0
   627  0087  34E8               	retlw	232
   628  0088  3403               	retlw	3
   629  0089  3400               	retlw	0
   630  008A  3400               	retlw	0
   631  008B  3410               	retlw	16
   632  008C  3427               	retlw	39
   633  008D  3400               	retlw	0
   634  008E  3400               	retlw	0
   635  008F  34A0               	retlw	160
   636  0090  3486               	retlw	134
   637  0091  3401               	retlw	1
   638  0092  3400               	retlw	0
   639  0093  3440               	retlw	64
   640  0094  3442               	retlw	66
   641  0095  340F               	retlw	15
   642  0096  3400               	retlw	0
   643  0097  3480               	retlw	128
   644  0098  3496               	retlw	150
   645  0099  3498               	retlw	152
   646  009A  3400               	retlw	0
   647  009B  3400               	retlw	0
   648  009C  34E1               	retlw	225
   649  009D  34F5               	retlw	245
   650  009E  3405               	retlw	5
   651  009F  3400               	retlw	0
   652  00A0  34CA               	retlw	202
   653  00A1  349A               	retlw	154
   654  00A2  343B               	retlw	59
   655  00A3                     __end_of_dpowers:
   656  0013                     _SSPBUF	set	19
   657  0014                     _SSPCON	set	20
   658  0019                     _TXREG	set	25
   659  001A                     _RCREG	set	26
   660  0018                     _RCSTAbits	set	24
   661  000C                     _PIR1bits	set	12
   662  000B                     _INTCONbits	set	11
   663  0007                     _PORTCbits	set	7
   664  0009                     _PORTE	set	9
   665  0008                     _PORTD	set	8
   666  0006                     _PORTB	set	6
   667  0005                     _PORTA	set	5
   668  0065                     _RCIF	set	101
   669  0049                     _RE1	set	73
   670  0048                     _RE0	set	72
   671  0047                     _RD7	set	71
   672  0046                     _RD6	set	70
   673  0045                     _RD5	set	69
   674  0044                     _RD4	set	68
   675  0043                     _RD3	set	67
   676  0042                     _RD2	set	66
   677  0041                     _RD1	set	65
   678  0040                     _RD0	set	64
   679  0094                     _SSPSTATbits	set	148
   680  0094                     _SSPSTAT	set	148
   681  0098                     _TXSTAbits	set	152
   682  008C                     _PIE1bits	set	140
   683  0087                     _TRISC	set	135
   684  0089                     _TRISE	set	137
   685  0088                     _TRISD	set	136
   686  0086                     _TRISB	set	134
   687  0085                     _TRISA	set	133
   688  043B                     _TRISC3	set	1083
   689  043D                     _TRISC5	set	1085
   690  04C1                     _TRMT	set	1217
   691  0189                     _ANSELH	set	393
   692  0188                     _ANSEL	set	392
   693  00A3                     STR_3:
   694  00A3  3425               	retlw	37	;'%'
   695  00A4  3431               	retlw	49	;'1'
   696  00A5  342E               	retlw	46	;'.'
   697  00A6  3430               	retlw	48	;'0'
   698  00A7  3466               	retlw	102	;'f'
   699  00A8  3420               	retlw	32	;' '
   700  00A9  3420               	retlw	32	;' '
   701  00AA  3420               	retlw	32	;' '
   702  00AB  3425               	retlw	37	;'%'
   703  00AC  3464               	retlw	100	;'d'
   704  00AD  3420               	retlw	32	;' '
   705  00AE  3420               	retlw	32	;' '
   706  00AF  3420               	retlw	32	;' '
   707  00B0  3425               	retlw	37	;'%'
   708  00B1  3433               	retlw	51	;'3'
   709  00B2  342E               	retlw	46	;'.'
   710  00B3  3430               	retlw	48	;'0'
   711  00B4  3466               	retlw	102	;'f'
   712  00B5  3400               	retlw	0
   713  00B6                     STR_1:
   714  00B6  3453               	retlw	83	;'S'
   715  00B7  3431               	retlw	49	;'1'
   716  00B8  343A               	retlw	58	;':'
   717  00B9  3420               	retlw	32	;' '
   718  00BA  3420               	retlw	32	;' '
   719  00BB  3420               	retlw	32	;' '
   720  00BC  3420               	retlw	32	;' '
   721  00BD  3453               	retlw	83	;'S'
   722  00BE  3432               	retlw	50	;'2'
   723  00BF  343A               	retlw	58	;':'
   724  00C0  3420               	retlw	32	;' '
   725  00C1  3420               	retlw	32	;' '
   726  00C2  3420               	retlw	32	;' '
   727  00C3  3420               	retlw	32	;' '
   728  00C4  3453               	retlw	83	;'S'
   729  00C5  3433               	retlw	51	;'3'
   730  00C6  343A               	retlw	58	;':'
   731  00C7  3400               	retlw	0
   732  00B6                     
   733                           	psect	cinit
   734  07F0                     start_initialization:	
   735                           ; #config settings
   736                           
   737  07F0                     __initialization:
   738                           
   739                           ; Clear objects allocated to BANK0
   740  07F0  1283               	bcf	3,5	;RP0=0, select bank0
   741  07F1  1303               	bcf	3,6	;RP1=0, select bank0
   742  07F2  01EE               	clrf	__pbssBANK0& (0+127)
   743                           
   744                           ; Clear objects allocated to BANK1
   745  07F3  1383               	bcf	3,7	;select IRP bank0
   746  07F4  30CE               	movlw	low __pbssBANK1
   747  07F5  0084               	movwf	4
   748  07F6  30E8               	movlw	low (__pbssBANK1+26)
   749  07F7  160A  158A  2193  120A  118A  	fcall	clear_ram0
   750  07FC                     end_of_initialization:	
   751                           ;End of C runtime variable initialization code
   752                           
   753  07FC                     __end_of__initialization:
   754  07FC  0183               	clrf	3
   755  07FD  120A  118A  292C   	ljmp	_main	;jump to C main() function
   756                           
   757                           	psect	bssBANK0
   758  006E                     __pbssBANK0:
   759  006E                     _cont0:
   760  006E                     	ds	1
   761                           
   762                           	psect	bssBANK1
   763  00CE                     __pbssBANK1:
   764  00CE                     _TEMP:
   765  00CE                     	ds	4
   766  00D2                     _LEDS:
   767  00D2                     	ds	1
   768  00D3                     _V_ADC:
   769  00D3                     	ds	1
   770  00D4                     _data:
   771  00D4                     	ds	20
   772                           
   773                           	psect	clrtext
   774  1993                     clear_ram0:	
   775                           ;	Called with FSR containing the base address, and
   776                           ;	W with the last address+1
   777                           
   778  1993  0064               	clrwdt	;clear the watchdog before getting into this loop
   779  1994                     clrloop0:
   780  1994  0180               	clrf	0	;clear RAM location pointed to by FSR
   781  1995  0A84               	incf	4,f	;increment pointer
   782  1996  0604               	xorwf	4,w	;XOR with final address
   783  1997  1903               	btfsc	3,2	;have we reached the end yet?
   784  1998  3400               	retlw	0	;all done for this memory range, return
   785  1999  0604               	xorwf	4,w	;XOR again to restore value
   786  199A  2994               	goto	clrloop0	;do the next byte
   787                           
   788                           	psect	cstackBANK1
   789  00A0                     __pcstackBANK1:
   790  00A0                     ?_sprintf:
   791  00A0                     sprintf@f:	
   792                           ; 2 bytes @ 0x0
   793                           
   794                           
   795                           ; 1 bytes @ 0x0
   796  00A0                     	ds	9
   797  00A9                     ??_sprintf:
   798                           
   799                           ; 1 bytes @ 0x9
   800  00A9                     	ds	5
   801  00AE                     _sprintf$1171:
   802                           
   803                           ; 4 bytes @ 0xE
   804  00AE                     	ds	4
   805  00B2                     sprintf@ap:
   806                           
   807                           ; 1 bytes @ 0x12
   808  00B2                     	ds	1
   809  00B3                     sprintf@flag:
   810                           
   811                           ; 2 bytes @ 0x13
   812  00B3                     	ds	2
   813  00B5                     sprintf@width:
   814                           
   815                           ; 2 bytes @ 0x15
   816  00B5                     	ds	2
   817  00B7                     sprintf@tmpval:
   818                           
   819                           ; 4 bytes @ 0x17
   820  00B7                     	ds	4
   821  00BB                     sprintf@val:
   822                           
   823                           ; 4 bytes @ 0x1B
   824  00BB                     	ds	4
   825  00BF                     sprintf@eexp:
   826                           
   827                           ; 2 bytes @ 0x1F
   828  00BF                     	ds	2
   829  00C1                     sprintf@fval:
   830                           
   831                           ; 4 bytes @ 0x21
   832  00C1                     	ds	4
   833  00C5                     sprintf@sp:
   834                           
   835                           ; 1 bytes @ 0x25
   836  00C5                     	ds	1
   837  00C6                     sprintf@prec:
   838                           
   839                           ; 2 bytes @ 0x26
   840  00C6                     	ds	2
   841  00C8                     sprintf@c:
   842                           
   843                           ; 1 bytes @ 0x28
   844  00C8                     	ds	1
   845  00C9                     ??_main:
   846                           
   847                           ; 1 bytes @ 0x29
   848  00C9                     	ds	5
   849                           
   850                           	psect	cstackCOMMON
   851  0070                     __pcstackCOMMON:
   852  0070                     ?_isdigit:
   853  0070                     ?___fleq:	
   854                           ; 1 bit 
   855                           
   856  0070                     ?___flge:	
   857                           ; 1 bit 
   858                           
   859  0070                     ?_spiWrite:	
   860                           ; 1 bit 
   861                           
   862  0070                     ??_spiWrite:	
   863                           ; 1 bytes @ 0x0
   864                           
   865  0070                     ?_spiRead:	
   866                           ; 1 bytes @ 0x0
   867                           
   868  0070                     ??_spiRead:	
   869                           ; 1 bytes @ 0x0
   870                           
   871  0070                     ?_USART_Write:	
   872                           ; 1 bytes @ 0x0
   873                           
   874  0070                     ??_USART_Write:	
   875                           ; 1 bytes @ 0x0
   876                           
   877  0070                     ??_isdigit:	
   878                           ; 1 bytes @ 0x0
   879                           
   880  0070                     ?_Pines:	
   881                           ; 1 bytes @ 0x0
   882                           
   883  0070                     ??_Pines:	
   884                           ; 1 bytes @ 0x0
   885                           
   886  0070                     ?_LCD_Caracter:	
   887                           ; 1 bytes @ 0x0
   888                           
   889  0070                     ?_LCD_Comandos:	
   890                           ; 1 bytes @ 0x0
   891                           
   892  0070                     ?_LCD_clear:	
   893                           ; 1 bytes @ 0x0
   894                           
   895  0070                     ?_LCD_Init:	
   896                           ; 1 bytes @ 0x0
   897                           
   898  0070                     ?_setup:	
   899                           ; 1 bytes @ 0x0
   900                           
   901  0070                     ??_setup:	
   902                           ; 1 bytes @ 0x0
   903                           
   904  0070                     ?_Slave1:	
   905                           ; 1 bytes @ 0x0
   906                           
   907  0070                     ?_Slave2:	
   908                           ; 1 bytes @ 0x0
   909                           
   910  0070                     ?_main:	
   911                           ; 1 bytes @ 0x0
   912                           
   913  0070                     ?_spiReceiveWait:	
   914                           ; 1 bytes @ 0x0
   915                           
   916  0070                     ??_spiReceiveWait:	
   917                           ; 1 bytes @ 0x0
   918                           
   919  0070                     ?__Umul8_16:	
   920                           ; 1 bytes @ 0x0
   921                           
   922  0070                     ?___wmul:	
   923                           ; 2 bytes @ 0x0
   924                           
   925  0070                     ?___awmod:	
   926                           ; 2 bytes @ 0x0
   927                           
   928  0070                     ?___lwmod:	
   929                           ; 2 bytes @ 0x0
   930                           
   931  0070                     ?__tdiv_to_l_:	
   932                           ; 2 bytes @ 0x0
   933                           
   934  0070                     ?__div_to_l_:	
   935                           ; 4 bytes @ 0x0
   936                           
   937  0070                     ?___lldiv:	
   938                           ; 4 bytes @ 0x0
   939                           
   940  0070                     ?___flneg:	
   941                           ; 4 bytes @ 0x0
   942                           
   943  0070                     ?___xxtofl:	
   944                           ; 4 bytes @ 0x0
   945                           
   946  0070                     Pines@x:	
   947                           ; 4 bytes @ 0x0
   948                           
   949  0070                     USART_Write@a:	
   950                           ; 1 bytes @ 0x0
   951                           
   952  0070                     spiWrite@dat:	
   953                           ; 1 bytes @ 0x0
   954                           
   955  0070                     __Umul8_16@multiplicand:	
   956                           ; 1 bytes @ 0x0
   957                           
   958  0070                     _isdigit$969:	
   959                           ; 1 bytes @ 0x0
   960                           
   961  0070                     ___wmul@multiplier:	
   962                           ; 1 bytes @ 0x0
   963                           
   964  0070                     ___awmod@divisor:	
   965                           ; 2 bytes @ 0x0
   966                           
   967  0070                     ___lwmod@divisor:	
   968                           ; 2 bytes @ 0x0
   969                           
   970  0070                     ___lldiv@divisor:	
   971                           ; 2 bytes @ 0x0
   972                           
   973  0070                     __div_to_l_@f1:	
   974                           ; 4 bytes @ 0x0
   975                           
   976  0070                     ___fleq@ff1:	
   977                           ; 4 bytes @ 0x0
   978                           
   979  0070                     ___flge@ff1:	
   980                           ; 4 bytes @ 0x0
   981                           
   982  0070                     ___flneg@f1:	
   983                           ; 4 bytes @ 0x0
   984                           
   985  0070                     __tdiv_to_l_@f1:	
   986                           ; 4 bytes @ 0x0
   987                           
   988  0070                     ___xxtofl@val:	
   989                           ; 4 bytes @ 0x0
   990                           
   991                           
   992                           ; 4 bytes @ 0x0
   993  0070                     	ds	1
   994  0071                     ?_USART_Write_String:
   995  0071                     ??_LCD_Caracter:	
   996                           ; 1 bytes @ 0x1
   997                           
   998  0071                     ??_LCD_Comandos:	
   999                           ; 1 bytes @ 0x1
  1000                           
  1001  0071                     ??_Slave1:	
  1002                           ; 1 bytes @ 0x1
  1003                           
  1004  0071                     ??_Slave2:	
  1005                           ; 1 bytes @ 0x1
  1006                           
  1007  0071                     isdigit@c:	
  1008                           ; 1 bytes @ 0x1
  1009                           
  1010  0071                     USART_Write_String@a:	
  1011                           ; 1 bytes @ 0x1
  1012                           
  1013                           
  1014                           ; 2 bytes @ 0x1
  1015  0071                     	ds	1
  1016  0072                     ??__Umul8_16:
  1017  0072                     LCD_Caracter@a:	
  1018                           ; 1 bytes @ 0x2
  1019                           
  1020  0072                     ___wmul@multiplicand:	
  1021                           ; 1 bytes @ 0x2
  1022                           
  1023  0072                     ___awmod@dividend:	
  1024                           ; 2 bytes @ 0x2
  1025                           
  1026  0072                     ___lwmod@dividend:	
  1027                           ; 2 bytes @ 0x2
  1028                           
  1029                           
  1030                           ; 2 bytes @ 0x2
  1031  0072                     	ds	1
  1032  0073                     ??_USART_Write_String:
  1033  0073                     ?_LCD_Texto:	
  1034                           ; 1 bytes @ 0x3
  1035                           
  1036  0073                     LCD_Comandos@x:	
  1037                           ; 1 bytes @ 0x3
  1038                           
  1039  0073                     LCD_Texto@a:	
  1040                           ; 1 bytes @ 0x3
  1041                           
  1042                           
  1043                           ; 2 bytes @ 0x3
  1044  0073                     	ds	1
  1045  0074                     ??_LCD_clear:
  1046  0074                     ??_LCD_Init:	
  1047                           ; 1 bytes @ 0x4
  1048                           
  1049  0074                     ?_LCD_Cursor:	
  1050                           ; 1 bytes @ 0x4
  1051                           
  1052  0074                     ??___wmul:	
  1053                           ; 1 bytes @ 0x4
  1054                           
  1055  0074                     ??___awmod:	
  1056                           ; 1 bytes @ 0x4
  1057                           
  1058  0074                     ??___flneg:	
  1059                           ; 1 bytes @ 0x4
  1060                           
  1061  0074                     ??___lwmod:	
  1062                           ; 1 bytes @ 0x4
  1063                           
  1064  0074                     ??___xxtofl:	
  1065                           ; 1 bytes @ 0x4
  1066                           
  1067  0074                     LCD_Cursor@y:	
  1068                           ; 1 bytes @ 0x4
  1069                           
  1070  0074                     USART_Write_String@i:	
  1071                           ; 1 bytes @ 0x4
  1072                           
  1073  0074                     ___wmul@product:	
  1074                           ; 1 bytes @ 0x4
  1075                           
  1076  0074                     __Umul8_16@product:	
  1077                           ; 2 bytes @ 0x4
  1078                           
  1079  0074                     ___lldiv@dividend:	
  1080                           ; 2 bytes @ 0x4
  1081                           
  1082  0074                     __div_to_l_@f2:	
  1083                           ; 4 bytes @ 0x4
  1084                           
  1085  0074                     ___fleq@ff2:	
  1086                           ; 4 bytes @ 0x4
  1087                           
  1088  0074                     ___flge@ff2:	
  1089                           ; 4 bytes @ 0x4
  1090                           
  1091  0074                     __tdiv_to_l_@f2:	
  1092                           ; 4 bytes @ 0x4
  1093                           
  1094                           
  1095                           ; 4 bytes @ 0x4
  1096  0074                     	ds	1
  1097  0075                     ??_LCD_Cursor:
  1098  0075                     ??_LCD_Texto:	
  1099                           ; 1 bytes @ 0x5
  1100                           
  1101  0075                     ___awmod@counter:	
  1102                           ; 1 bytes @ 0x5
  1103                           
  1104  0075                     ___lwmod@counter:	
  1105                           ; 1 bytes @ 0x5
  1106                           
  1107                           
  1108                           ; 1 bytes @ 0x5
  1109  0075                     	ds	1
  1110  0076                     ?___lwdiv:
  1111  0076                     LCD_Cursor@x:	
  1112                           ; 2 bytes @ 0x6
  1113                           
  1114  0076                     ___awmod@sign:	
  1115                           ; 1 bytes @ 0x6
  1116                           
  1117  0076                     ___lwdiv@divisor:	
  1118                           ; 1 bytes @ 0x6
  1119                           
  1120  0076                     __Umul8_16@word_mpld:	
  1121                           ; 2 bytes @ 0x6
  1122                           
  1123                           
  1124                           ; 2 bytes @ 0x6
  1125  0076                     	ds	1
  1126  0077                     ?___awdiv:
  1127  0077                     LCD_Cursor@a:	
  1128                           ; 2 bytes @ 0x7
  1129                           
  1130  0077                     ___awdiv@divisor:	
  1131                           ; 1 bytes @ 0x7
  1132                           
  1133                           
  1134                           ; 2 bytes @ 0x7
  1135  0077                     	ds	1
  1136  0078                     ??__tdiv_to_l_:
  1137  0078                     ??__div_to_l_:	
  1138                           ; 1 bytes @ 0x8
  1139                           
  1140  0078                     ??___lldiv:	
  1141                           ; 1 bytes @ 0x8
  1142                           
  1143  0078                     ??___fleq:	
  1144                           ; 1 bytes @ 0x8
  1145                           
  1146  0078                     ??___flge:	
  1147                           ; 1 bytes @ 0x8
  1148                           
  1149  0078                     __Umul8_16@multiplier:	
  1150                           ; 1 bytes @ 0x8
  1151                           
  1152  0078                     ___xxtofl@sign:	
  1153                           ; 1 bytes @ 0x8
  1154                           
  1155  0078                     LCD_Texto@i:	
  1156                           ; 1 bytes @ 0x8
  1157                           
  1158  0078                     ___lwdiv@dividend:	
  1159                           ; 2 bytes @ 0x8
  1160                           
  1161                           
  1162                           ; 2 bytes @ 0x8
  1163  0078                     	ds	1
  1164  0079                     ___xxtofl@exp:
  1165  0079                     ___awdiv@dividend:	
  1166                           ; 1 bytes @ 0x9
  1167                           
  1168  0079                     ___lldiv@quotient:	
  1169                           ; 2 bytes @ 0x9
  1170                           
  1171                           
  1172                           ; 4 bytes @ 0x9
  1173  0079                     	ds	1
  1174  007A                     ??___lwdiv:
  1175  007A                     ___xxtofl@arg:	
  1176                           ; 1 bytes @ 0xA
  1177                           
  1178                           
  1179                           ; 4 bytes @ 0xA
  1180  007A                     	ds	1
  1181  007B                     ??___awdiv:
  1182  007B                     ___lwdiv@quotient:	
  1183                           ; 1 bytes @ 0xB
  1184                           
  1185                           
  1186                           ; 2 bytes @ 0xB
  1187  007B                     	ds	2
  1188  007D                     ___lldiv@counter:
  1189  007D                     ___lwdiv@counter:	
  1190                           ; 1 bytes @ 0xD
  1191                           
  1192                           
  1193                           ; 1 bytes @ 0xD
  1194  007D                     	ds	1
  1195  007E                     ??___flsub:
  1196                           
  1197                           	psect	cstackBANK0
  1198  0020                     __pcstackBANK0:	
  1199                           ; 1 bytes @ 0xE
  1200                           
  1201  0020                     ?_Slave3:
  1202  0020                     ?___llmod:	
  1203                           ; 4 bytes @ 0x0
  1204                           
  1205  0020                     ___awdiv@counter:	
  1206                           ; 4 bytes @ 0x0
  1207                           
  1208  0020                     __div_to_l_@quot:	
  1209                           ; 1 bytes @ 0x0
  1210                           
  1211  0020                     __tdiv_to_l_@quot:	
  1212                           ; 4 bytes @ 0x0
  1213                           
  1214  0020                     ___llmod@divisor:	
  1215                           ; 4 bytes @ 0x0
  1216                           
  1217                           
  1218                           ; 4 bytes @ 0x0
  1219  0020                     	ds	1
  1220  0021                     ___awdiv@sign:
  1221                           
  1222                           ; 1 bytes @ 0x1
  1223  0021                     	ds	1
  1224  0022                     ___awdiv@quotient:
  1225                           
  1226                           ; 2 bytes @ 0x2
  1227  0022                     	ds	2
  1228  0024                     ??_Slave3:
  1229  0024                     ?___flmul:	
  1230                           ; 1 bytes @ 0x4
  1231                           
  1232  0024                     __div_to_l_@cntr:	
  1233                           ; 4 bytes @ 0x4
  1234                           
  1235  0024                     __tdiv_to_l_@cntr:	
  1236                           ; 1 bytes @ 0x4
  1237                           
  1238  0024                     ___llmod@dividend:	
  1239                           ; 1 bytes @ 0x4
  1240                           
  1241  0024                     ___flmul@b:	
  1242                           ; 4 bytes @ 0x4
  1243                           
  1244                           
  1245                           ; 4 bytes @ 0x4
  1246  0024                     	ds	1
  1247  0025                     __div_to_l_@exp1:
  1248  0025                     __tdiv_to_l_@exp1:	
  1249                           ; 1 bytes @ 0x5
  1250                           
  1251                           
  1252                           ; 1 bytes @ 0x5
  1253  0025                     	ds	3
  1254  0028                     ??___llmod:
  1255  0028                     ___flmul@a:	
  1256                           ; 1 bytes @ 0x8
  1257                           
  1258                           
  1259                           ; 4 bytes @ 0x8
  1260  0028                     	ds	1
  1261  0029                     ___llmod@counter:
  1262                           
  1263                           ; 1 bytes @ 0x9
  1264  0029                     	ds	3
  1265  002C                     ??___flmul:
  1266                           
  1267                           ; 1 bytes @ 0xC
  1268  002C                     	ds	5
  1269  0031                     ___flmul@sign:
  1270                           
  1271                           ; 1 bytes @ 0x11
  1272  0031                     	ds	1
  1273  0032                     ___flmul@grs:
  1274                           
  1275                           ; 4 bytes @ 0x12
  1276  0032                     	ds	4
  1277  0036                     ___flmul@aexp:
  1278                           
  1279                           ; 1 bytes @ 0x16
  1280  0036                     	ds	1
  1281  0037                     ___flmul@bexp:
  1282                           
  1283                           ; 1 bytes @ 0x17
  1284  0037                     	ds	1
  1285  0038                     ___flmul@prod:
  1286                           
  1287                           ; 4 bytes @ 0x18
  1288  0038                     	ds	4
  1289  003C                     ___flmul@temp:
  1290                           
  1291                           ; 2 bytes @ 0x1C
  1292  003C                     	ds	2
  1293  003E                     ?_fround:
  1294  003E                     ?_scale:	
  1295                           ; 4 bytes @ 0x1E
  1296                           
  1297                           
  1298                           ; 4 bytes @ 0x1E
  1299  003E                     	ds	4
  1300  0042                     ??_fround:
  1301  0042                     ??_scale:	
  1302                           ; 1 bytes @ 0x22
  1303                           
  1304                           
  1305                           ; 1 bytes @ 0x22
  1306  0042                     	ds	7
  1307  0049                     _fround$1169:
  1308                           
  1309                           ; 4 bytes @ 0x29
  1310  0049                     	ds	3
  1311  004C                     _scale$1170:
  1312                           
  1313                           ; 4 bytes @ 0x2C
  1314  004C                     	ds	1
  1315  004D                     _fround$1168:
  1316                           
  1317                           ; 4 bytes @ 0x2D
  1318  004D                     	ds	3
  1319  0050                     scale@scl:
  1320                           
  1321                           ; 1 bytes @ 0x30
  1322  0050                     	ds	1
  1323  0051                     ?___fltol:
  1324  0051                     fround@prec:	
  1325                           ; 4 bytes @ 0x31
  1326                           
  1327  0051                     ___fltol@f1:	
  1328                           ; 1 bytes @ 0x31
  1329                           
  1330                           
  1331                           ; 4 bytes @ 0x31
  1332  0051                     	ds	1
  1333  0052                     ?___fladd:
  1334  0052                     ___fladd@b:	
  1335                           ; 4 bytes @ 0x32
  1336                           
  1337                           
  1338                           ; 4 bytes @ 0x32
  1339  0052                     	ds	3
  1340  0055                     ??___fltol:
  1341                           
  1342                           ; 1 bytes @ 0x35
  1343  0055                     	ds	1
  1344  0056                     ___fladd@a:
  1345                           
  1346                           ; 4 bytes @ 0x36
  1347  0056                     	ds	4
  1348  005A                     ??___fladd:
  1349  005A                     ___fltol@sign1:	
  1350                           ; 1 bytes @ 0x3A
  1351                           
  1352                           
  1353                           ; 1 bytes @ 0x3A
  1354  005A                     	ds	1
  1355  005B                     ___fltol@exp1:
  1356                           
  1357                           ; 1 bytes @ 0x3B
  1358  005B                     	ds	7
  1359  0062                     ___fladd@signs:
  1360                           
  1361                           ; 1 bytes @ 0x42
  1362  0062                     	ds	1
  1363  0063                     ___fladd@aexp:
  1364                           
  1365                           ; 1 bytes @ 0x43
  1366  0063                     	ds	1
  1367  0064                     ___fladd@bexp:
  1368                           
  1369                           ; 1 bytes @ 0x44
  1370  0064                     	ds	1
  1371  0065                     ___fladd@grs:
  1372                           
  1373                           ; 1 bytes @ 0x45
  1374  0065                     	ds	1
  1375  0066                     ?___flsub:
  1376  0066                     ___flsub@a:	
  1377                           ; 4 bytes @ 0x46
  1378                           
  1379                           
  1380                           ; 4 bytes @ 0x46
  1381  0066                     	ds	4
  1382  006A                     ___flsub@b:
  1383                           
  1384                           ; 4 bytes @ 0x4A
  1385  006A                     	ds	4
  1386                           
  1387                           	psect	maintext
  1388  012C                     __pmaintext:	
  1389 ;;
  1390 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  1391 ;;
  1392 ;; *************** function _main *****************
  1393 ;; Defined at:
  1394 ;;		line 115 in file "main_master.c"
  1395 ;; Parameters:    Size  Location     Type
  1396 ;;		None
  1397 ;; Auto vars:     Size  Location     Type
  1398 ;;		None
  1399 ;; Return value:  Size  Location     Type
  1400 ;;                  1    wreg      void 
  1401 ;; Registers used:
  1402 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1403 ;; Tracked objects:
  1404 ;;		On entry : B00/0
  1405 ;;		On exit  : 0/0
  1406 ;;		Unchanged: 0/0
  1407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1408 ;;      Params:         0       0       0       0       0
  1409 ;;      Locals:         0       0       0       0       0
  1410 ;;      Temps:          0       0       5       0       0
  1411 ;;      Totals:         0       0       5       0       0
  1412 ;;Total ram usage:        5 bytes
  1413 ;; Hardware stack levels required when called:    4
  1414 ;; This function calls:
  1415 ;;		_LCD_Cursor
  1416 ;;		_LCD_Init
  1417 ;;		_LCD_Texto
  1418 ;;		_LCD_clear
  1419 ;;		_Slave1
  1420 ;;		_Slave2
  1421 ;;		_Slave3
  1422 ;;		_USART_Write
  1423 ;;		_USART_Write_String
  1424 ;;		_setup
  1425 ;;		_sprintf
  1426 ;; This function is called by:
  1427 ;;		Startup code after reset
  1428 ;; This function uses a non-reentrant model
  1429 ;;
  1430                           
  1431                           
  1432                           ;psect for function _main
  1433  012C                     _main:
  1434  012C                     l3719:	
  1435                           ;incstack = 0
  1436                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1437                           
  1438                           
  1439                           ;main_master.c: 116:     setup();
  1440  012C  160A  158A  2327  120A  118A  	fcall	_setup
  1441  0131                     l3721:
  1442                           
  1443                           ;main_master.c: 117:     LCD_Init();
  1444  0131  160A  158A  261F  120A  118A  	fcall	_LCD_Init
  1445  0136                     l3723:
  1446                           
  1447                           ;main_master.c: 118:     LCD_clear();
  1448  0136  160A  158A  21B2  120A  118A  	fcall	_LCD_clear
  1449  013B                     l3725:
  1450                           
  1451                           ;main_master.c: 120:         Slave1();
  1452  013B  160A  158A  22CF  120A  118A  	fcall	_Slave1
  1453  0140                     l3727:
  1454                           
  1455                           ;main_master.c: 121:         Slave2();
  1456  0140  160A  158A  22FB  120A  118A  	fcall	_Slave2
  1457  0145                     l3729:
  1458                           
  1459                           ;main_master.c: 122:         Slave3();
  1460  0145  120A  118A  20CC  120A  118A  	fcall	_Slave3
  1461  014A                     l3731:
  1462                           
  1463                           ;main_master.c: 124:         USART_Write_String("S1:    S2:    S3:");
  1464  014A  30A4               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1465  014B  00F1               	movwf	USART_Write_String@a
  1466  014C  3080               	movlw	128
  1467  014D  00F2               	movwf	USART_Write_String@a+1
  1468  014E  160A  158A  22A4  120A  118A  	fcall	_USART_Write_String
  1469  0153                     l3733:
  1470                           
  1471                           ;main_master.c: 125:         USART_Write(13);
  1472  0153  300D               	movlw	13
  1473  0154  160A  158A  21A6  120A  118A  	fcall	_USART_Write
  1474  0159                     l3735:
  1475                           
  1476                           ;main_master.c: 126:         USART_Write(10);
  1477  0159  300A               	movlw	10
  1478  015A  160A  158A  21A6  120A  118A  	fcall	_USART_Write
  1479  015F                     l3737:
  1480                           
  1481                           ;main_master.c: 127:         USART_Write_String(data);
  1482  015F  30D4               	movlw	(low (_data| 0))& (0+255)
  1483  0160  00F1               	movwf	USART_Write_String@a
  1484  0161  3000               	movlw	0
  1485  0162  00F2               	movwf	USART_Write_String@a+1
  1486  0163  160A  158A  22A4  120A  118A  	fcall	_USART_Write_String
  1487  0168                     l3739:
  1488                           
  1489                           ;main_master.c: 128:         USART_Write(13);
  1490  0168  300D               	movlw	13
  1491  0169  160A  158A  21A6  120A  118A  	fcall	_USART_Write
  1492  016E                     l3741:
  1493                           
  1494                           ;main_master.c: 129:         USART_Write(10);
  1495  016E  300A               	movlw	10
  1496  016F  160A  158A  21A6  120A  118A  	fcall	_USART_Write
  1497                           
  1498                           ;main_master.c: 130:         _delay((unsigned long)((500)*(4000000/4000.0)));
  1499  0174  3003               	movlw	3
  1500  0175  1683               	bsf	3,5	;RP0=1, select bank1
  1501  0176  1303               	bcf	3,6	;RP1=0, select bank1
  1502  0177  00CB               	movwf	(??_main^(0+128)+2)
  1503  0178  308A               	movlw	138
  1504  0179  00CA               	movwf	(??_main^(0+128)+1)
  1505  017A  3055               	movlw	85
  1506  017B  00C9               	movwf	??_main^(0+128)
  1507  017C                     u5877:
  1508  017C  0BC9               	decfsz	??_main^(0+128),f
  1509  017D  297C               	goto	u5877
  1510  017E  0BCA               	decfsz	(??_main^(0+128)+1),f
  1511  017F  297C               	goto	u5877
  1512  0180  0BCB               	decfsz	(??_main^(0+128)+2),f
  1513  0181  297C               	goto	u5877
  1514  0182                     l3743:
  1515                           
  1516                           ;main_master.c: 132:         LCD_clear();
  1517  0182  160A  158A  21B2  120A  118A  	fcall	_LCD_clear
  1518  0187                     l3745:
  1519                           
  1520                           ;main_master.c: 133:         LCD_Cursor(1,1);
  1521  0187  01F4               	clrf	LCD_Cursor@y
  1522  0188  0AF4               	incf	LCD_Cursor@y,f
  1523  0189  3001               	movlw	1
  1524  018A  160A  158A  2210  120A  118A  	fcall	_LCD_Cursor
  1525  018F                     l3747:
  1526                           
  1527                           ;main_master.c: 134:         LCD_Texto("S1:    S2:    S3:");
  1528  018F  30A4               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1529  0190  00F3               	movwf	LCD_Texto@a
  1530  0191  3080               	movlw	128
  1531  0192  00F4               	movwf	LCD_Texto@a+1
  1532  0193  160A  158A  23CD  120A  118A  	fcall	_LCD_Texto
  1533  0198                     l3749:
  1534                           
  1535                           ;main_master.c: 135:         TEMP = Slave3();
  1536  0198  120A  118A  20CC  120A  118A  	fcall	_Slave3
  1537  019D  1283               	bcf	3,5	;RP0=0, select bank0
  1538  019E  1303               	bcf	3,6	;RP1=0, select bank0
  1539  019F  0823               	movf	?_Slave3+3,w
  1540  01A0  1683               	bsf	3,5	;RP0=1, select bank1
  1541  01A1  1303               	bcf	3,6	;RP1=0, select bank1
  1542  01A2  00D1               	movwf	(_TEMP+3)^(0+128)
  1543  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  1544  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  1545  01A5  0822               	movf	?_Slave3+2,w
  1546  01A6  1683               	bsf	3,5	;RP0=1, select bank1
  1547  01A7  1303               	bcf	3,6	;RP1=0, select bank1
  1548  01A8  00D0               	movwf	(_TEMP+2)^(0+128)
  1549  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  1550  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  1551  01AB  0821               	movf	?_Slave3+1,w
  1552  01AC  1683               	bsf	3,5	;RP0=1, select bank1
  1553  01AD  1303               	bcf	3,6	;RP1=0, select bank1
  1554  01AE  00CF               	movwf	(_TEMP+1)^(0+128)
  1555  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  1556  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  1557  01B1  0820               	movf	?_Slave3,w
  1558  01B2  1683               	bsf	3,5	;RP0=1, select bank1
  1559  01B3  1303               	bcf	3,6	;RP1=0, select bank1
  1560  01B4  00CE               	movwf	_TEMP^(0+128)
  1561  01B5                     l3751:
  1562                           
  1563                           ;main_master.c: 136:         sprintf(data, "%1.0f   %d   %3.0f" ,V_ADC,LEDS,TEMP);
  1564  01B5  3091               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1565  01B6  00C9               	movwf	??_main^(0+128)
  1566  01B7  0849               	movf	??_main^(0+128),w
  1567  01B8  00A0               	movwf	sprintf@f^(0+128)
  1568  01B9  0853               	movf	_V_ADC^(0+128),w
  1569  01BA  00CA               	movwf	(??_main+1)^(0+128)
  1570  01BB  01CB               	clrf	((??_main+1)^(0+128)+1)
  1571  01BC  084A               	movf	(??_main+1)^(0+128),w
  1572  01BD  00A1               	movwf	(?_sprintf^(0+128)+1)
  1573  01BE  084B               	movf	(??_main+2)^(0+128),w
  1574  01BF  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1575  01C0  0852               	movf	_LEDS^(0+128),w
  1576  01C1  00CC               	movwf	(??_main+3)^(0+128)
  1577  01C2  01CD               	clrf	((??_main+3)^(0+128)+1)
  1578  01C3  084C               	movf	(??_main+3)^(0+128),w
  1579  01C4  00A3               	movwf	(?_sprintf^(0+128)+3)
  1580  01C5  084D               	movf	(??_main+4)^(0+128),w
  1581  01C6  00A4               	movwf	((?_sprintf+1)^(0+128)+3)
  1582  01C7  0851               	movf	(_TEMP+3)^(0+128),w
  1583  01C8  00A8               	movwf	((?_sprintf+3)^(0+128)+5)
  1584  01C9  0850               	movf	(_TEMP+2)^(0+128),w
  1585  01CA  00A7               	movwf	((?_sprintf+2)^(0+128)+5)
  1586  01CB  084F               	movf	(_TEMP+1)^(0+128),w
  1587  01CC  00A6               	movwf	((?_sprintf+1)^(0+128)+5)
  1588  01CD  084E               	movf	_TEMP^(0+128),w
  1589  01CE  00A5               	movwf	(?_sprintf^(0+128)+5)
  1590  01CF  30D4               	movlw	(low (_data| 0))& (0+255)
  1591  01D0  160A  118A  253E  120A  118A  	fcall	_sprintf
  1592  01D5                     l3753:
  1593                           
  1594                           ;main_master.c: 137:         LCD_Cursor(2,1);
  1595  01D5  01F4               	clrf	LCD_Cursor@y
  1596  01D6  0AF4               	incf	LCD_Cursor@y,f
  1597  01D7  3002               	movlw	2
  1598  01D8  160A  158A  2210  120A  118A  	fcall	_LCD_Cursor
  1599  01DD                     l3755:
  1600                           
  1601                           ;main_master.c: 138:         LCD_Texto(data);
  1602  01DD  30D4               	movlw	(low (_data| 0))& (0+255)
  1603  01DE  00F3               	movwf	LCD_Texto@a
  1604  01DF  3000               	movlw	0
  1605  01E0  00F4               	movwf	LCD_Texto@a+1
  1606  01E1  160A  158A  23CD  120A  118A  	fcall	_LCD_Texto
  1607  01E6  293B               	goto	l3725
  1608  01E7  120A  118A  2800   	ljmp	start
  1609  01EA                     __end_of_main:
  1610                           
  1611                           	psect	text1
  1612  153E                     __ptext1:	
  1613 ;; *************** function _sprintf *****************
  1614 ;; Defined at:
  1615 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1616 ;; Parameters:    Size  Location     Type
  1617 ;;  sp              1    wreg     PTR unsigned char 
  1618 ;;		 -> data(20), 
  1619 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1620 ;;		 -> STR_3(19), 
  1621 ;; Auto vars:     Size  Location     Type
  1622 ;;  sp              1   37[BANK1 ] PTR unsigned char 
  1623 ;;		 -> data(20), 
  1624 ;;  fval            4   33[BANK1 ] PTR unsigned char 
  1625 ;;  val             4   27[BANK1 ] unsigned long 
  1626 ;;  tmpval          4   23[BANK1 ] struct .
  1627 ;;  prec            2   38[BANK1 ] int 
  1628 ;;  eexp            2   31[BANK1 ] int 
  1629 ;;  width           2   21[BANK1 ] int 
  1630 ;;  flag            2   19[BANK1 ] unsigned short 
  1631 ;;  cp              2    0        PTR const unsigned char 
  1632 ;;  len             2    0        unsigned int 
  1633 ;;  c               1   40[BANK1 ] unsigned char 
  1634 ;;  ap              1   18[BANK1 ] PTR void [1]
  1635 ;;		 -> ?_sprintf(2), 
  1636 ;;  d               1    0        unsigned char 
  1637 ;; Return value:  Size  Location     Type
  1638 ;;                  2    0[BANK1 ] int 
  1639 ;; Registers used:
  1640 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1641 ;; Tracked objects:
  1642 ;;		On entry : 0/0
  1643 ;;		On exit  : 0/0
  1644 ;;		Unchanged: 0/0
  1645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1646 ;;      Params:         0       0       9       0       0
  1647 ;;      Locals:         0       0      27       0       0
  1648 ;;      Temps:          0       0       5       0       0
  1649 ;;      Totals:         0       0      41       0       0
  1650 ;;Total ram usage:       41 bytes
  1651 ;; Hardware stack levels used:    1
  1652 ;; Hardware stack levels required when called:    3
  1653 ;; This function calls:
  1654 ;;		___awdiv
  1655 ;;		___fladd
  1656 ;;		___fleq
  1657 ;;		___flge
  1658 ;;		___flmul
  1659 ;;		___flneg
  1660 ;;		___flsub
  1661 ;;		___fltol
  1662 ;;		___lldiv
  1663 ;;		___llmod
  1664 ;;		___wmul
  1665 ;;		___xxtofl
  1666 ;;		__div_to_l_
  1667 ;;		__tdiv_to_l_
  1668 ;;		_fround
  1669 ;;		_isdigit
  1670 ;;		_scale
  1671 ;; This function is called by:
  1672 ;;		_main
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           
  1676                           
  1677                           ;psect for function _sprintf
  1678  153E                     _sprintf:
  1679                           
  1680                           ;incstack = 0
  1681                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1682                           ;sprintf@sp stored from wreg
  1683  153E  1683               	bsf	3,5	;RP0=1, select bank1
  1684  153F  1303               	bcf	3,6	;RP1=0, select bank1
  1685  1540  00C5               	movwf	sprintf@sp^(0+128)
  1686  1541                     l3425:
  1687                           
  1688                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1689  1541  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1690  1542  00A9               	movwf	??_sprintf^(0+128)
  1691  1543  0829               	movf	??_sprintf^(0+128),w
  1692  1544  00B2               	movwf	sprintf@ap^(0+128)
  1693  1545                     L1:
  1694                           
  1695                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1696  1545  120A  118A  2FD7   	goto	l3707
  1697  1548                     l3427:
  1698                           
  1699                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1700  1548  3025               	movlw	37
  1701  1549  0648               	xorwf	sprintf@c^(0+128),w
  1702  154A  1903               	btfsc	3,2
  1703  154B  2D4D               	goto	u5341
  1704  154C  2D4E               	goto	u5340
  1705  154D                     u5341:
  1706  154D  2D5A               	goto	l3433
  1707  154E                     u5340:
  1708  154E                     l3429:
  1709                           
  1710                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1711  154E  0848               	movf	sprintf@c^(0+128),w
  1712  154F  00A9               	movwf	??_sprintf^(0+128)
  1713  1550  0845               	movf	sprintf@sp^(0+128),w
  1714  1551  0084               	movwf	4
  1715  1552  0829               	movf	??_sprintf^(0+128),w
  1716  1553  1383               	bcf	3,7	;select IRP bank0
  1717  1554  0080               	movwf	0
  1718  1555                     l3431:
  1719  1555  3001               	movlw	1
  1720  1556  00A9               	movwf	??_sprintf^(0+128)
  1721  1557  0829               	movf	??_sprintf^(0+128),w
  1722  1558  07C5               	addwf	sprintf@sp^(0+128),f
  1723                           
  1724                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1725  1559  2D45               	goto	L1
  1726  155A                     l3433:
  1727                           
  1728                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1729  155A  01B5               	clrf	sprintf@width^(0+128)
  1730  155B  01B6               	clrf	(sprintf@width+1)^(0+128)
  1731                           
  1732                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1733  155C  01B3               	clrf	sprintf@flag^(0+128)
  1734  155D  01B4               	clrf	(sprintf@flag+1)^(0+128)
  1735  155E                     l3435:
  1736                           
  1737                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1738  155E  0820               	movf	sprintf@f^(0+128),w
  1739  155F  0084               	movwf	4
  1740  1560  120A  118A  200D  160A  118A  	fcall	stringdir
  1741  1565  160A  158A  21BF  160A  118A  	fcall	_isdigit
  1742  156A  1C03               	btfss	3,0
  1743  156B  2D6D               	goto	u5351
  1744  156C  2D6E               	goto	u5350
  1745  156D                     u5351:
  1746  156D  2DAE               	goto	l3447
  1747  156E                     u5350:
  1748  156E                     l3437:
  1749                           
  1750                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1751  156E  1683               	bsf	3,5	;RP0=1, select bank1
  1752  156F  1303               	bcf	3,6	;RP1=0, select bank1
  1753  1570  01B5               	clrf	sprintf@width^(0+128)
  1754  1571  01B6               	clrf	(sprintf@width+1)^(0+128)
  1755  1572                     l3439:
  1756                           
  1757                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1758  1572  300A               	movlw	10
  1759  1573  00F0               	movwf	___wmul@multiplier
  1760  1574  3000               	movlw	0
  1761  1575  00F1               	movwf	___wmul@multiplier+1
  1762  1576  1683               	bsf	3,5	;RP0=1, select bank1
  1763  1577  1303               	bcf	3,6	;RP1=0, select bank1
  1764  1578  0836               	movf	(sprintf@width+1)^(0+128),w
  1765  1579  00F3               	movwf	___wmul@multiplicand+1
  1766  157A  0835               	movf	sprintf@width^(0+128),w
  1767  157B  00F2               	movwf	___wmul@multiplicand
  1768  157C  160A  158A  2258  160A  118A  	fcall	___wmul
  1769  1581  0871               	movf	?___wmul+1,w
  1770  1582  1683               	bsf	3,5	;RP0=1, select bank1
  1771  1583  1303               	bcf	3,6	;RP1=0, select bank1
  1772  1584  00B6               	movwf	(sprintf@width+1)^(0+128)
  1773  1585  0870               	movf	?___wmul,w
  1774  1586  00B5               	movwf	sprintf@width^(0+128)
  1775  1587                     l3441:
  1776                           
  1777                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1778  1587  0820               	movf	sprintf@f^(0+128),w
  1779  1588  0084               	movwf	4
  1780  1589  120A  118A  200D  160A  118A  	fcall	stringdir
  1781  158E  3ED0               	addlw	208
  1782  158F  00A9               	movwf	??_sprintf^(0+128)
  1783  1590  30FF               	movlw	255
  1784  1591  1803               	skipnc
  1785  1592  3000               	movlw	0
  1786  1593  00AA               	movwf	(??_sprintf^(0+128)+1)
  1787  1594  0829               	movf	??_sprintf^(0+128),w
  1788  1595  07B5               	addwf	sprintf@width^(0+128),f
  1789  1596  1803               	skipnc
  1790  1597  0AB6               	incf	(sprintf@width+1)^(0+128),f
  1791  1598  082A               	movf	(??_sprintf+1)^(0+128),w
  1792  1599  07B6               	addwf	(sprintf@width+1)^(0+128),f
  1793  159A                     l3443:
  1794  159A  3001               	movlw	1
  1795  159B  00A9               	movwf	??_sprintf^(0+128)
  1796  159C  0829               	movf	??_sprintf^(0+128),w
  1797  159D  07A0               	addwf	sprintf@f^(0+128),f
  1798  159E                     l3445:
  1799                           
  1800                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1801  159E  0820               	movf	sprintf@f^(0+128),w
  1802  159F  0084               	movwf	4
  1803  15A0  120A  118A  200D  160A  118A  	fcall	stringdir
  1804  15A5  160A  158A  21BF  160A  118A  	fcall	_isdigit
  1805  15AA  1803               	btfsc	3,0
  1806  15AB  2DAD               	goto	u5361
  1807  15AC  2DAE               	goto	u5360
  1808  15AD                     u5361:
  1809  15AD  2D72               	goto	l3439
  1810  15AE                     u5360:
  1811  15AE                     l3447:
  1812                           
  1813                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1814  15AE  1683               	bsf	3,5	;RP0=1, select bank1
  1815  15AF  1303               	bcf	3,6	;RP1=0, select bank1
  1816  15B0  0820               	movf	sprintf@f^(0+128),w
  1817  15B1  0084               	movwf	4
  1818  15B2  120A  118A  200D  160A  118A  	fcall	stringdir
  1819  15B7  3A2E               	xorlw	46
  1820  15B8  1D03               	skipz
  1821  15B9  2DBB               	goto	u5371
  1822  15BA  2DBC               	goto	u5370
  1823  15BB                     u5371:
  1824  15BB  2E01               	goto	l3463
  1825  15BC                     u5370:
  1826  15BC                     l3449:
  1827                           
  1828                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1829  15BC  1734               	bsf	(sprintf@flag^(0+128)+1),6
  1830  15BD                     l3451:
  1831                           
  1832                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1833  15BD  3001               	movlw	1
  1834  15BE  00A9               	movwf	??_sprintf^(0+128)
  1835  15BF  0829               	movf	??_sprintf^(0+128),w
  1836  15C0  07A0               	addwf	sprintf@f^(0+128),f
  1837  15C1                     l3453:
  1838                           
  1839                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1840  15C1  01C6               	clrf	sprintf@prec^(0+128)
  1841  15C2  01C7               	clrf	(sprintf@prec+1)^(0+128)
  1842                           
  1843                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1844  15C3  2DF0               	goto	l3461
  1845  15C4                     l3455:
  1846                           
  1847                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1848  15C4  300A               	movlw	10
  1849  15C5  00F0               	movwf	___wmul@multiplier
  1850  15C6  3000               	movlw	0
  1851  15C7  00F1               	movwf	___wmul@multiplier+1
  1852  15C8  1683               	bsf	3,5	;RP0=1, select bank1
  1853  15C9  1303               	bcf	3,6	;RP1=0, select bank1
  1854  15CA  0847               	movf	(sprintf@prec+1)^(0+128),w
  1855  15CB  00F3               	movwf	___wmul@multiplicand+1
  1856  15CC  0846               	movf	sprintf@prec^(0+128),w
  1857  15CD  00F2               	movwf	___wmul@multiplicand
  1858  15CE  160A  158A  2258  160A  118A  	fcall	___wmul
  1859  15D3  0871               	movf	?___wmul+1,w
  1860  15D4  1683               	bsf	3,5	;RP0=1, select bank1
  1861  15D5  1303               	bcf	3,6	;RP1=0, select bank1
  1862  15D6  00C7               	movwf	(sprintf@prec+1)^(0+128)
  1863  15D7  0870               	movf	?___wmul,w
  1864  15D8  00C6               	movwf	sprintf@prec^(0+128)
  1865  15D9                     l3457:
  1866                           
  1867                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1868  15D9  0820               	movf	sprintf@f^(0+128),w
  1869  15DA  0084               	movwf	4
  1870  15DB  120A  118A  200D  160A  118A  	fcall	stringdir
  1871  15E0  3ED0               	addlw	208
  1872  15E1  00A9               	movwf	??_sprintf^(0+128)
  1873  15E2  30FF               	movlw	255
  1874  15E3  1803               	skipnc
  1875  15E4  3000               	movlw	0
  1876  15E5  00AA               	movwf	(??_sprintf^(0+128)+1)
  1877  15E6  0829               	movf	??_sprintf^(0+128),w
  1878  15E7  07C6               	addwf	sprintf@prec^(0+128),f
  1879  15E8  1803               	skipnc
  1880  15E9  0AC7               	incf	(sprintf@prec+1)^(0+128),f
  1881  15EA  082A               	movf	(??_sprintf+1)^(0+128),w
  1882  15EB  07C7               	addwf	(sprintf@prec+1)^(0+128),f
  1883  15EC                     l3459:
  1884  15EC  3001               	movlw	1
  1885  15ED  00A9               	movwf	??_sprintf^(0+128)
  1886  15EE  0829               	movf	??_sprintf^(0+128),w
  1887  15EF  07A0               	addwf	sprintf@f^(0+128),f
  1888  15F0                     l3461:
  1889                           
  1890                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1891  15F0  0820               	movf	sprintf@f^(0+128),w
  1892  15F1  0084               	movwf	4
  1893  15F2  120A  118A  200D  160A  118A  	fcall	stringdir
  1894  15F7  160A  158A  21BF  160A  118A  	fcall	_isdigit
  1895  15FC  1803               	btfsc	3,0
  1896  15FD  2DFF               	goto	u5381
  1897  15FE  2E00               	goto	u5380
  1898  15FF                     u5381:
  1899  15FF  2DC4               	goto	l3455
  1900  1600                     u5380:
  1901  1600  2E07               	goto	l3469
  1902  1601                     l3463:
  1903                           
  1904                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1905  1601  01C6               	clrf	sprintf@prec^(0+128)
  1906  1602  01C7               	clrf	(sprintf@prec+1)^(0+128)
  1907  1603                     l3465:
  1908                           
  1909                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1910  1603  1634               	bsf	(sprintf@flag^(0+128)+1),4
  1911  1604  2E07               	goto	l3469
  1912  1605                     l342:	
  1913                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1914                           
  1915                           
  1916                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1917  1605  1534               	bsf	(sprintf@flag^(0+128)+1),2
  1918                           
  1919                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  1920  1606  2E29               	goto	l3471
  1921  1607                     l3469:
  1922  1607  3001               	movlw	1
  1923  1608  1683               	bsf	3,5	;RP0=1, select bank1
  1924  1609  1303               	bcf	3,6	;RP1=0, select bank1
  1925  160A  07A0               	addwf	sprintf@f^(0+128),f
  1926  160B  30FF               	movlw	-1
  1927  160C  0720               	addwf	sprintf@f^(0+128),w
  1928  160D  0084               	movwf	4
  1929  160E  120A  118A  200D  160A  118A  	fcall	stringdir
  1930  1613  00C8               	movwf	sprintf@c^(0+128)
  1931  1614  00A9               	movwf	??_sprintf^(0+128)
  1932  1615  01AA               	clrf	(??_sprintf^(0+128)+1)
  1933                           
  1934                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1935                           ; Switch size 1, requested type "simple"
  1936                           ; Number of cases is 1, Range of values is 0 to 0
  1937                           ; switch strategies available:
  1938                           ; Name         Instructions Cycles
  1939                           ; simple_byte            4     3 (average)
  1940                           ; direct_byte           11     8 (fixed)
  1941                           ; jumptable            260     6 (fixed)
  1942                           ;	Chosen strategy is simple_byte
  1943  1616  082A               	movf	(??_sprintf+1)^(0+128),w
  1944  1617  3A00               	xorlw	0	; case 0
  1945  1618  1903               	skipnz
  1946  1619  2E1B               	goto	l3787
  1947  161A  2D45               	goto	L1
  1948  161B                     l3787:
  1949                           
  1950                           ; Switch size 1, requested type "simple"
  1951                           ; Number of cases is 4, Range of values is 0 to 105
  1952                           ; switch strategies available:
  1953                           ; Name         Instructions Cycles
  1954                           ; simple_byte           13     7 (average)
  1955                           ; jumptable            260     6 (fixed)
  1956                           ;	Chosen strategy is simple_byte
  1957  161B  0829               	movf	??_sprintf^(0+128),w
  1958  161C  3A00               	xorlw	0	; case 0
  1959  161D  1903               	skipnz
  1960  161E  2FFD               	goto	L3
  1961  161F  3A64               	xorlw	100	; case 100
  1962  1620  1903               	skipnz
  1963  1621  2E29               	goto	l3471
  1964  1622  3A02               	xorlw	2	; case 102
  1965  1623  1903               	skipnz
  1966  1624  2E05               	goto	l342
  1967  1625  3A0F               	xorlw	15	; case 105
  1968  1626  1903               	skipnz
  1969  1627  2E29               	goto	l3471
  1970  1628  2D45               	goto	L1
  1971  1629                     l3471:
  1972                           
  1973                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1974  1629  3000               	movlw	0
  1975  162A  0533               	andwf	sprintf@flag^(0+128),w
  1976  162B  00A9               	movwf	??_sprintf^(0+128)
  1977  162C  3007               	movlw	7
  1978  162D  0534               	andwf	(sprintf@flag+1)^(0+128),w
  1979  162E  00AA               	movwf	(??_sprintf+1)^(0+128)
  1980  162F  0829               	movf	??_sprintf^(0+128),w
  1981  1630  042A               	iorwf	(??_sprintf^(0+128)+1),w
  1982  1631  1903               	btfsc	3,2
  1983  1632  2E34               	goto	u5391
  1984  1633  2E37               	goto	u5390
  1985  1634                     u5391:
  1986  1634  120A  118A  2E3A   	goto	l3629
  1987  1637                     u5390:
  1988  1637                     l3473:
  1989                           
  1990                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  1991  1637  1E34               	btfss	(sprintf@flag+1)^(0+128),4
  1992  1638  2E3A               	goto	u5401
  1993  1639  2E3B               	goto	u5400
  1994  163A                     u5401:
  1995  163A  2E3F               	goto	l3477
  1996  163B                     u5400:
  1997  163B                     l3475:
  1998                           
  1999                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2000  163B  3006               	movlw	6
  2001  163C  00C6               	movwf	sprintf@prec^(0+128)
  2002  163D  3000               	movlw	0
  2003  163E  00C7               	movwf	(sprintf@prec^(0+128)+1)
  2004  163F                     l3477:
  2005                           
  2006                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2007  163F  0832               	movf	sprintf@ap^(0+128),w
  2008  1640  0084               	movwf	4
  2009  1641  1383               	bcf	3,7	;select IRP bank0
  2010  1642  0800               	movf	0,w
  2011  1643  00C1               	movwf	sprintf@fval^(0+128)
  2012  1644  0A84               	incf	4,f
  2013  1645  0800               	movf	0,w
  2014  1646  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2015  1647  0A84               	incf	4,f
  2016  1648  0800               	movf	0,w
  2017  1649  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2018  164A  0A84               	incf	4,f
  2019  164B  0800               	movf	0,w
  2020  164C  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2021  164D                     l3479:
  2022  164D  3004               	movlw	4
  2023  164E  00A9               	movwf	??_sprintf^(0+128)
  2024  164F  0829               	movf	??_sprintf^(0+128),w
  2025  1650  07B2               	addwf	sprintf@ap^(0+128),f
  2026  1651                     l3481:
  2027                           
  2028                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2029  1651  0844               	movf	(sprintf@fval+3)^(0+128),w
  2030  1652  00F3               	movwf	___flge@ff1+3
  2031  1653  0843               	movf	(sprintf@fval+2)^(0+128),w
  2032  1654  00F2               	movwf	___flge@ff1+2
  2033  1655  0842               	movf	(sprintf@fval+1)^(0+128),w
  2034  1656  00F1               	movwf	___flge@ff1+1
  2035  1657  0841               	movf	sprintf@fval^(0+128),w
  2036  1658  00F0               	movwf	___flge@ff1
  2037  1659  3000               	movlw	0
  2038  165A  00F7               	movwf	___flge@ff2+3
  2039  165B  3000               	movlw	0
  2040  165C  00F6               	movwf	___flge@ff2+2
  2041  165D  3000               	movlw	0
  2042  165E  00F5               	movwf	___flge@ff2+1
  2043  165F  3000               	movlw	0
  2044  1660  00F4               	movwf	___flge@ff2
  2045  1661  160A  118A  2009  160A  118A  	fcall	___flge
  2046  1666  1803               	btfsc	3,0
  2047  1667  2E69               	goto	u5411
  2048  1668  2E6A               	goto	u5410
  2049  1669                     u5411:
  2050  1669  2E87               	goto	l3487
  2051  166A                     u5410:
  2052  166A                     l3483:
  2053                           
  2054                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2055  166A  1683               	bsf	3,5	;RP0=1, select bank1
  2056  166B  1303               	bcf	3,6	;RP1=0, select bank1
  2057  166C  0844               	movf	(sprintf@fval+3)^(0+128),w
  2058  166D  00F3               	movwf	___flneg@f1+3
  2059  166E  0843               	movf	(sprintf@fval+2)^(0+128),w
  2060  166F  00F2               	movwf	___flneg@f1+2
  2061  1670  0842               	movf	(sprintf@fval+1)^(0+128),w
  2062  1671  00F1               	movwf	___flneg@f1+1
  2063  1672  0841               	movf	sprintf@fval^(0+128),w
  2064  1673  00F0               	movwf	___flneg@f1
  2065  1674  160A  158A  219B  160A  118A  	fcall	___flneg
  2066  1679  0873               	movf	?___flneg+3,w
  2067  167A  1683               	bsf	3,5	;RP0=1, select bank1
  2068  167B  1303               	bcf	3,6	;RP1=0, select bank1
  2069  167C  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2070  167D  0872               	movf	?___flneg+2,w
  2071  167E  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2072  167F  0871               	movf	?___flneg+1,w
  2073  1680  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2074  1681  0870               	movf	?___flneg,w
  2075  1682  00C1               	movwf	sprintf@fval^(0+128)
  2076  1683                     l3485:
  2077                           
  2078                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2079  1683  3003               	movlw	3
  2080  1684  04B3               	iorwf	sprintf@flag^(0+128),f
  2081  1685  3000               	movlw	0
  2082  1686  04B4               	iorwf	(sprintf@flag+1)^(0+128),f
  2083  1687                     l3487:
  2084                           
  2085                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2086  1687  1683               	bsf	3,5	;RP0=1, select bank1
  2087  1688  1303               	bcf	3,6	;RP1=0, select bank1
  2088  1689  01BF               	clrf	sprintf@eexp^(0+128)
  2089  168A  01C0               	clrf	(sprintf@eexp+1)^(0+128)
  2090  168B                     l3489:
  2091                           
  2092                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2093  168B  0844               	movf	(sprintf@fval+3)^(0+128),w
  2094  168C  00F3               	movwf	___fleq@ff1+3
  2095  168D  0843               	movf	(sprintf@fval+2)^(0+128),w
  2096  168E  00F2               	movwf	___fleq@ff1+2
  2097  168F  0842               	movf	(sprintf@fval+1)^(0+128),w
  2098  1690  00F1               	movwf	___fleq@ff1+1
  2099  1691  0841               	movf	sprintf@fval^(0+128),w
  2100  1692  00F0               	movwf	___fleq@ff1
  2101  1693  3000               	movlw	0
  2102  1694  00F7               	movwf	___fleq@ff2+3
  2103  1695  3000               	movlw	0
  2104  1696  00F6               	movwf	___fleq@ff2+2
  2105  1697  3000               	movlw	0
  2106  1698  00F5               	movwf	___fleq@ff2+1
  2107  1699  3000               	movlw	0
  2108  169A  00F4               	movwf	___fleq@ff2
  2109  169B  160A  158A  2453  160A  118A  	fcall	___fleq
  2110  16A0  1803               	btfsc	3,0
  2111  16A1  2EA3               	goto	u5421
  2112  16A2  2EA4               	goto	u5420
  2113  16A3                     u5421:
  2114  16A3  2F94               	goto	l3515
  2115  16A4                     u5420:
  2116  16A4                     l3491:
  2117                           
  2118                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2119  16A4  1003               	clrc
  2120  16A5  1683               	bsf	3,5	;RP0=1, select bank1
  2121  16A6  1303               	bcf	3,6	;RP1=0, select bank1
  2122  16A7  0D43               	rlf	(sprintf@fval+2)^(0+128),w
  2123  16A8  0D44               	rlf	(sprintf@fval+3)^(0+128),w
  2124  16A9  3E82               	addlw	130
  2125  16AA  00BF               	movwf	sprintf@eexp^(0+128)
  2126  16AB  30FF               	movlw	255
  2127  16AC  1803               	skipnc
  2128  16AD  3000               	movlw	0
  2129  16AE  00C0               	movwf	(sprintf@eexp^(0+128)+1)
  2130  16AF                     l3493:
  2131                           
  2132                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2133  16AF  30FF               	movlw	255
  2134  16B0  07BF               	addwf	sprintf@eexp^(0+128),f
  2135  16B1  1803               	skipnc
  2136  16B2  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  2137  16B3  30FF               	movlw	255
  2138  16B4  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  2139  16B5                     l3495:
  2140                           
  2141                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2142  16B5  3003               	movlw	3
  2143  16B6  00F0               	movwf	___wmul@multiplier
  2144  16B7  3000               	movlw	0
  2145  16B8  00F1               	movwf	___wmul@multiplier+1
  2146  16B9  0840               	movf	(sprintf@eexp+1)^(0+128),w
  2147  16BA  00F3               	movwf	___wmul@multiplicand+1
  2148  16BB  083F               	movf	sprintf@eexp^(0+128),w
  2149  16BC  00F2               	movwf	___wmul@multiplicand
  2150  16BD  160A  158A  2258  160A  118A  	fcall	___wmul
  2151  16C2  0871               	movf	?___wmul+1,w
  2152  16C3  1683               	bsf	3,5	;RP0=1, select bank1
  2153  16C4  1303               	bcf	3,6	;RP1=0, select bank1
  2154  16C5  00C0               	movwf	(sprintf@eexp+1)^(0+128)
  2155  16C6  0870               	movf	?___wmul,w
  2156  16C7  00BF               	movwf	sprintf@eexp^(0+128)
  2157  16C8                     l3497:
  2158                           
  2159                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2160  16C8  300A               	movlw	10
  2161  16C9  00F7               	movwf	___awdiv@divisor
  2162  16CA  3000               	movlw	0
  2163  16CB  00F8               	movwf	___awdiv@divisor+1
  2164  16CC  0840               	movf	(sprintf@eexp+1)^(0+128),w
  2165  16CD  00FA               	movwf	___awdiv@dividend+1
  2166  16CE  083F               	movf	sprintf@eexp^(0+128),w
  2167  16CF  00F9               	movwf	___awdiv@dividend
  2168  16D0  160A  158A  25B6  160A  118A  	fcall	___awdiv
  2169  16D5  0878               	movf	?___awdiv+1,w
  2170  16D6  1683               	bsf	3,5	;RP0=1, select bank1
  2171  16D7  1303               	bcf	3,6	;RP1=0, select bank1
  2172  16D8  00C0               	movwf	(sprintf@eexp+1)^(0+128)
  2173  16D9  0877               	movf	?___awdiv,w
  2174  16DA  00BF               	movwf	sprintf@eexp^(0+128)
  2175  16DB                     l3499:
  2176                           
  2177                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2178  16DB  1FC0               	btfss	(sprintf@eexp+1)^(0+128),7
  2179  16DC  2EDE               	goto	u5431
  2180  16DD  2EDF               	goto	u5430
  2181  16DE                     u5431:
  2182  16DE  2EE5               	goto	l3503
  2183  16DF                     u5430:
  2184  16DF                     l3501:
  2185                           
  2186                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2187  16DF  30FF               	movlw	255
  2188  16E0  07BF               	addwf	sprintf@eexp^(0+128),f
  2189  16E1  1803               	skipnc
  2190  16E2  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  2191  16E3  30FF               	movlw	255
  2192  16E4  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  2193  16E5                     l3503:
  2194                           
  2195                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2196  16E5  033F               	decf	sprintf@eexp^(0+128),w
  2197  16E6  3AFF               	xorlw	255
  2198  16E7  120A  158A  2140  160A  118A  	fcall	_scale
  2199  16EC  1283               	bcf	3,5	;RP0=0, select bank0
  2200  16ED  1303               	bcf	3,6	;RP1=0, select bank0
  2201  16EE  0841               	movf	?_scale+3,w
  2202  16EF  1683               	bsf	3,5	;RP0=1, select bank1
  2203  16F0  1303               	bcf	3,6	;RP1=0, select bank1
  2204  16F1  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2205  16F2  1283               	bcf	3,5	;RP0=0, select bank0
  2206  16F3  1303               	bcf	3,6	;RP1=0, select bank0
  2207  16F4  0840               	movf	?_scale+2,w
  2208  16F5  1683               	bsf	3,5	;RP0=1, select bank1
  2209  16F6  1303               	bcf	3,6	;RP1=0, select bank1
  2210  16F7  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2211  16F8  1283               	bcf	3,5	;RP0=0, select bank0
  2212  16F9  1303               	bcf	3,6	;RP1=0, select bank0
  2213  16FA  083F               	movf	?_scale+1,w
  2214  16FB  1683               	bsf	3,5	;RP0=1, select bank1
  2215  16FC  1303               	bcf	3,6	;RP1=0, select bank1
  2216  16FD  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2217  16FE  1283               	bcf	3,5	;RP0=0, select bank0
  2218  16FF  1303               	bcf	3,6	;RP1=0, select bank0
  2219  1700  083E               	movf	?_scale,w
  2220  1701  1683               	bsf	3,5	;RP0=1, select bank1
  2221  1702  1303               	bcf	3,6	;RP1=0, select bank1
  2222  1703  00B7               	movwf	sprintf@tmpval^(0+128)
  2223  1704                     l3505:
  2224                           
  2225                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2226  1704  0844               	movf	(sprintf@fval+3)^(0+128),w
  2227  1705  1283               	bcf	3,5	;RP0=0, select bank0
  2228  1706  1303               	bcf	3,6	;RP1=0, select bank0
  2229  1707  00A7               	movwf	___flmul@b+3
  2230  1708  1683               	bsf	3,5	;RP0=1, select bank1
  2231  1709  1303               	bcf	3,6	;RP1=0, select bank1
  2232  170A  0843               	movf	(sprintf@fval+2)^(0+128),w
  2233  170B  1283               	bcf	3,5	;RP0=0, select bank0
  2234  170C  1303               	bcf	3,6	;RP1=0, select bank0
  2235  170D  00A6               	movwf	___flmul@b+2
  2236  170E  1683               	bsf	3,5	;RP0=1, select bank1
  2237  170F  1303               	bcf	3,6	;RP1=0, select bank1
  2238  1710  0842               	movf	(sprintf@fval+1)^(0+128),w
  2239  1711  1283               	bcf	3,5	;RP0=0, select bank0
  2240  1712  1303               	bcf	3,6	;RP1=0, select bank0
  2241  1713  00A5               	movwf	___flmul@b+1
  2242  1714  1683               	bsf	3,5	;RP0=1, select bank1
  2243  1715  1303               	bcf	3,6	;RP1=0, select bank1
  2244  1716  0841               	movf	sprintf@fval^(0+128),w
  2245  1717  1283               	bcf	3,5	;RP0=0, select bank0
  2246  1718  1303               	bcf	3,6	;RP1=0, select bank0
  2247  1719  00A4               	movwf	___flmul@b
  2248  171A  1683               	bsf	3,5	;RP0=1, select bank1
  2249  171B  1303               	bcf	3,6	;RP1=0, select bank1
  2250  171C  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2251  171D  1283               	bcf	3,5	;RP0=0, select bank0
  2252  171E  1303               	bcf	3,6	;RP1=0, select bank0
  2253  171F  00AB               	movwf	___flmul@a+3
  2254  1720  1683               	bsf	3,5	;RP0=1, select bank1
  2255  1721  1303               	bcf	3,6	;RP1=0, select bank1
  2256  1722  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2257  1723  1283               	bcf	3,5	;RP0=0, select bank0
  2258  1724  1303               	bcf	3,6	;RP1=0, select bank0
  2259  1725  00AA               	movwf	___flmul@a+2
  2260  1726  1683               	bsf	3,5	;RP0=1, select bank1
  2261  1727  1303               	bcf	3,6	;RP1=0, select bank1
  2262  1728  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2263  1729  1283               	bcf	3,5	;RP0=0, select bank0
  2264  172A  1303               	bcf	3,6	;RP1=0, select bank0
  2265  172B  00A9               	movwf	___flmul@a+1
  2266  172C  1683               	bsf	3,5	;RP0=1, select bank1
  2267  172D  1303               	bcf	3,6	;RP1=0, select bank1
  2268  172E  0837               	movf	sprintf@tmpval^(0+128),w
  2269  172F  1283               	bcf	3,5	;RP0=0, select bank0
  2270  1730  1303               	bcf	3,6	;RP1=0, select bank0
  2271  1731  00A8               	movwf	___flmul@a
  2272  1732  120A  158A  249F  160A  118A  	fcall	___flmul
  2273  1737  1283               	bcf	3,5	;RP0=0, select bank0
  2274  1738  1303               	bcf	3,6	;RP1=0, select bank0
  2275  1739  0827               	movf	?___flmul+3,w
  2276  173A  1683               	bsf	3,5	;RP0=1, select bank1
  2277  173B  1303               	bcf	3,6	;RP1=0, select bank1
  2278  173C  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2279  173D  1283               	bcf	3,5	;RP0=0, select bank0
  2280  173E  1303               	bcf	3,6	;RP1=0, select bank0
  2281  173F  0826               	movf	?___flmul+2,w
  2282  1740  1683               	bsf	3,5	;RP0=1, select bank1
  2283  1741  1303               	bcf	3,6	;RP1=0, select bank1
  2284  1742  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2285  1743  1283               	bcf	3,5	;RP0=0, select bank0
  2286  1744  1303               	bcf	3,6	;RP1=0, select bank0
  2287  1745  0825               	movf	?___flmul+1,w
  2288  1746  1683               	bsf	3,5	;RP0=1, select bank1
  2289  1747  1303               	bcf	3,6	;RP1=0, select bank1
  2290  1748  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2291  1749  1283               	bcf	3,5	;RP0=0, select bank0
  2292  174A  1303               	bcf	3,6	;RP1=0, select bank0
  2293  174B  0824               	movf	?___flmul,w
  2294  174C  1683               	bsf	3,5	;RP0=1, select bank1
  2295  174D  1303               	bcf	3,6	;RP1=0, select bank1
  2296  174E  00B7               	movwf	sprintf@tmpval^(0+128)
  2297  174F                     l3507:
  2298                           
  2299                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2300  174F  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2301  1750  00F3               	movwf	___flge@ff1+3
  2302  1751  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2303  1752  00F2               	movwf	___flge@ff1+2
  2304  1753  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2305  1754  00F1               	movwf	___flge@ff1+1
  2306  1755  0837               	movf	sprintf@tmpval^(0+128),w
  2307  1756  00F0               	movwf	___flge@ff1
  2308  1757  303F               	movlw	63
  2309  1758  00F7               	movwf	___flge@ff2+3
  2310  1759  3080               	movlw	128
  2311  175A  00F6               	movwf	___flge@ff2+2
  2312  175B  3000               	movlw	0
  2313  175C  00F5               	movwf	___flge@ff2+1
  2314  175D  3000               	movlw	0
  2315  175E  00F4               	movwf	___flge@ff2
  2316  175F  160A  118A  2009  160A  118A  	fcall	___flge
  2317  1764  1803               	btfsc	3,0
  2318  1765  2F67               	goto	u5441
  2319  1766  2F68               	goto	u5440
  2320  1767                     u5441:
  2321  1767  2F71               	goto	l3511
  2322  1768                     u5440:
  2323  1768                     l3509:
  2324                           
  2325                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2326  1768  30FF               	movlw	255
  2327  1769  1683               	bsf	3,5	;RP0=1, select bank1
  2328  176A  1303               	bcf	3,6	;RP1=0, select bank1
  2329  176B  07BF               	addwf	sprintf@eexp^(0+128),f
  2330  176C  1803               	skipnc
  2331  176D  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  2332  176E  30FF               	movlw	255
  2333  176F  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  2334  1770  2F94               	goto	l3515
  2335  1771                     l3511:
  2336  1771  1683               	bsf	3,5	;RP0=1, select bank1
  2337  1772  1303               	bcf	3,6	;RP1=0, select bank1
  2338  1773  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2339  1774  00F3               	movwf	___flge@ff1+3
  2340  1775  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2341  1776  00F2               	movwf	___flge@ff1+2
  2342  1777  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2343  1778  00F1               	movwf	___flge@ff1+1
  2344  1779  0837               	movf	sprintf@tmpval^(0+128),w
  2345  177A  00F0               	movwf	___flge@ff1
  2346  177B  3041               	movlw	65
  2347  177C  00F7               	movwf	___flge@ff2+3
  2348  177D  3020               	movlw	32
  2349  177E  00F6               	movwf	___flge@ff2+2
  2350  177F  3000               	movlw	0
  2351  1780  00F5               	movwf	___flge@ff2+1
  2352  1781  3000               	movlw	0
  2353  1782  00F4               	movwf	___flge@ff2
  2354  1783  160A  118A  2009  160A  118A  	fcall	___flge
  2355  1788  1C03               	btfss	3,0
  2356  1789  2F8B               	goto	u5451
  2357  178A  2F8C               	goto	u5450
  2358  178B                     u5451:
  2359  178B  2F94               	goto	l3515
  2360  178C                     u5450:
  2361  178C                     l3513:
  2362                           
  2363                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2364  178C  3001               	movlw	1
  2365  178D  1683               	bsf	3,5	;RP0=1, select bank1
  2366  178E  1303               	bcf	3,6	;RP1=0, select bank1
  2367  178F  07BF               	addwf	sprintf@eexp^(0+128),f
  2368  1790  1803               	skipnc
  2369  1791  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  2370  1792  3000               	movlw	0
  2371  1793  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  2372  1794                     l3515:
  2373                           
  2374                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2375  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2376  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2377  1796  0847               	movf	(sprintf@prec+1)^(0+128),w
  2378  1797  3A80               	xorlw	128
  2379  1798  00FF               	movwf	btemp+1
  2380  1799  3080               	movlw	128
  2381  179A  027F               	subwf	btemp+1,w
  2382  179B  1D03               	skipz
  2383  179C  2F9F               	goto	u5465
  2384  179D  300D               	movlw	13
  2385  179E  0246               	subwf	sprintf@prec^(0+128),w
  2386  179F                     u5465:
  2387  179F  1803               	skipnc
  2388  17A0  2FA2               	goto	u5461
  2389  17A1  2FA3               	goto	u5460
  2390  17A2                     u5461:
  2391  17A2  2FEA               	goto	l3519
  2392  17A3                     u5460:
  2393  17A3                     l3517:
  2394                           
  2395                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2396  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2397  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2398  17A5  0846               	movf	sprintf@prec^(0+128),w
  2399  17A6  160A  118A  20AB  160A  118A  	fcall	_fround
  2400  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2401  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2402  17AD  0841               	movf	?_fround+3,w
  2403  17AE  00D5               	movwf	___fladd@b+3
  2404  17AF  0840               	movf	?_fround+2,w
  2405  17B0  00D4               	movwf	___fladd@b+2
  2406  17B1  083F               	movf	?_fround+1,w
  2407  17B2  00D3               	movwf	___fladd@b+1
  2408  17B3  083E               	movf	?_fround,w
  2409  17B4  00D2               	movwf	___fladd@b
  2410  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2411  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2412  17B7  0844               	movf	(sprintf@fval+3)^(0+128),w
  2413  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2414  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2415  17BA  00D9               	movwf	___fladd@a+3
  2416  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2417  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2418  17BD  0843               	movf	(sprintf@fval+2)^(0+128),w
  2419  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2420  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2421  17C0  00D8               	movwf	___fladd@a+2
  2422  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2423  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2424  17C3  0842               	movf	(sprintf@fval+1)^(0+128),w
  2425  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2426  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2427  17C6  00D7               	movwf	___fladd@a+1
  2428  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2429  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2430  17C9  0841               	movf	sprintf@fval^(0+128),w
  2431  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2432  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2433  17CC  00D6               	movwf	___fladd@a
  2434  17CD  160A  118A  22B6  160A  118A  	fcall	___fladd
  2435  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2436  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2437  17D4  0855               	movf	?___fladd+3,w
  2438  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2439  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2440  17D7  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2441  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2442  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2443  17DA  0854               	movf	?___fladd+2,w
  2444  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2445  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2446  17DD  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2447  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2448  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2449  17E0  0853               	movf	?___fladd+1,w
  2450  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2451  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2452  17E3  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2453  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2454  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2455  17E6  0852               	movf	?___fladd,w
  2456  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2457  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2458  17E9  00C1               	movwf	sprintf@fval^(0+128)
  2459  17EA                     l3519:
  2460                           
  2461                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2462  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2463  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2464  17EC  0840               	movf	(sprintf@eexp+1)^(0+128),w
  2465  17ED  3A80               	xorlw	128
  2466  17EE  00FF               	movwf	btemp+1
  2467  17EF  3080               	movlw	128
  2468  17F0  027F               	subwf	btemp+1,w
  2469  17F1  1D03               	skipz
  2470  17F2  2FF5               	goto	u5475
  2471  17F3  300A               	movlw	10
  2472  17F4  023F               	subwf	sprintf@eexp^(0+128),w
  2473  17F5                     u5475:
  2474  17F5  1803               	skipnc
  2475  17F6  2FFA               	goto	u5471
  2476  17F7  120A  118A  29EA   	goto	u5470
  2477  17FA                     u5471:
  2478  17FA  120A  118A  2A3B   	goto	l3527
  2479  17FD                     L3:
  2480  17FD                     L2:
  2481  17FD  120A  118A  2FEB   	ljmp	l3709
  2482                           
  2483                           	psect	text2
  2484  0940                     __ptext2:	
  2485 ;; *************** function _scale *****************
  2486 ;; Defined at:
  2487 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2488 ;; Parameters:    Size  Location     Type
  2489 ;;  scl             1    wreg     char 
  2490 ;; Auto vars:     Size  Location     Type
  2491 ;;  scl             1   48[BANK0 ] char 
  2492 ;; Return value:  Size  Location     Type
  2493 ;;                  4   30[BANK0 ] char 
  2494 ;; Registers used:
  2495 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2496 ;; Tracked objects:
  2497 ;;		On entry : 0/0
  2498 ;;		On exit  : 0/0
  2499 ;;		Unchanged: 0/0
  2500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2501 ;;      Params:         0       4       0       0       0
  2502 ;;      Locals:         0       5       0       0       0
  2503 ;;      Temps:          0      10       0       0       0
  2504 ;;      Totals:         0      19       0       0       0
  2505 ;;Total ram usage:       19 bytes
  2506 ;; Hardware stack levels used:    1
  2507 ;; Hardware stack levels required when called:    2
  2508 ;; This function calls:
  2509 ;;		___awdiv
  2510 ;;		___awmod
  2511 ;;		___flmul
  2512 ;; This function is called by:
  2513 ;;		_sprintf
  2514 ;; This function uses a non-reentrant model
  2515 ;;
  2516                           
  2517                           
  2518                           ;psect for function _scale
  2519  0940                     _scale:
  2520                           
  2521                           ;incstack = 0
  2522                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2523                           ;scale@scl stored from wreg
  2524  0940  1283               	bcf	3,5	;RP0=0, select bank0
  2525  0941  1303               	bcf	3,6	;RP1=0, select bank0
  2526  0942  00D0               	movwf	scale@scl
  2527  0943                     l2959:
  2528                           
  2529                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2530  0943  1FD0               	btfss	scale@scl,7
  2531  0944  2946               	goto	u4311
  2532  0945  2947               	goto	u4310
  2533  0946                     u4311:
  2534  0946  2AF4               	goto	l2981
  2535  0947                     u4310:
  2536  0947                     l2961:
  2537                           
  2538                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2539  0947  09D0               	comf	scale@scl,f
  2540  0948  0AD0               	incf	scale@scl,f
  2541  0949                     l2963:
  2542                           
  2543                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2544  0949  0850               	movf	scale@scl,w
  2545  094A  3A80               	xorlw	128
  2546  094B  3E12               	addlw	-238
  2547  094C  1C03               	skipc
  2548  094D  294F               	goto	u4321
  2549  094E  2950               	goto	u4320
  2550  094F                     u4321:
  2551  094F  2A38               	goto	l2971
  2552  0950                     u4320:
  2553  0950                     l2965:
  2554                           
  2555                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2556  0950  300A               	movlw	10
  2557  0951  00F7               	movwf	___awdiv@divisor
  2558  0952  3000               	movlw	0
  2559  0953  00F8               	movwf	___awdiv@divisor+1
  2560  0954  0850               	movf	scale@scl,w
  2561  0955  00F2               	movwf	___awmod@dividend
  2562  0956  01F3               	clrf	___awmod@dividend+1
  2563  0957  1BF2               	btfsc	___awmod@dividend,7
  2564  0958  03F3               	decf	___awmod@dividend+1,f
  2565  0959  3064               	movlw	100
  2566  095A  00F0               	movwf	___awmod@divisor
  2567  095B  3000               	movlw	0
  2568  095C  00F1               	movwf	___awmod@divisor+1
  2569  095D  160A  158A  24F7  120A  158A  	fcall	___awmod
  2570  0962  0871               	movf	?___awmod+1,w
  2571  0963  00FA               	movwf	___awdiv@dividend+1
  2572  0964  0870               	movf	?___awmod,w
  2573  0965  00F9               	movwf	___awdiv@dividend
  2574  0966  160A  158A  25B6  120A  158A  	fcall	___awdiv
  2575  096B  0877               	movf	?___awdiv,w
  2576  096C  1283               	bcf	3,5	;RP0=0, select bank0
  2577  096D  1303               	bcf	3,6	;RP1=0, select bank0
  2578  096E  00C2               	movwf	??_scale
  2579  096F  3001               	movlw	1
  2580  0970                     u4335:
  2581  0970  1003               	clrc
  2582  0971  0DC2               	rlf	??_scale,f
  2583  0972  3EFF               	addlw	-1
  2584  0973  1D03               	skipz
  2585  0974  2970               	goto	u4335
  2586  0975  1003               	clrc
  2587  0976  0D42               	rlf	??_scale,w
  2588  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2589  0978  0084               	movwf	4
  2590  0979  120A  118A  200D  120A  158A  	fcall	stringdir
  2591  097E  00C3               	movwf	??_scale+1
  2592  097F  120A  118A  200D  120A  158A  	fcall	stringdir
  2593  0984  00C4               	movwf	??_scale+2
  2594  0985  120A  118A  200D  120A  158A  	fcall	stringdir
  2595  098A  00C5               	movwf	??_scale+3
  2596  098B  120A  118A  200D  120A  158A  	fcall	stringdir
  2597  0990  00C6               	movwf	??_scale+4
  2598  0991  0846               	movf	??_scale+4,w
  2599  0992  00A7               	movwf	___flmul@b+3
  2600  0993  0845               	movf	??_scale+3,w
  2601  0994  00A6               	movwf	___flmul@b+2
  2602  0995  0844               	movf	??_scale+2,w
  2603  0996  00A5               	movwf	___flmul@b+1
  2604  0997  0843               	movf	??_scale+1,w
  2605  0998  00A4               	movwf	___flmul@b
  2606  0999  3064               	movlw	100
  2607  099A  00F7               	movwf	___awdiv@divisor
  2608  099B  3000               	movlw	0
  2609  099C  00F8               	movwf	___awdiv@divisor+1
  2610  099D  0850               	movf	scale@scl,w
  2611  099E  00F9               	movwf	___awdiv@dividend
  2612  099F  01FA               	clrf	___awdiv@dividend+1
  2613  09A0  1BF9               	btfsc	___awdiv@dividend,7
  2614  09A1  03FA               	decf	___awdiv@dividend+1,f
  2615  09A2  160A  158A  25B6  120A  158A  	fcall	___awdiv
  2616  09A7  0877               	movf	?___awdiv,w
  2617  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  2618  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  2619  09AA  00C7               	movwf	??_scale+5
  2620  09AB  3001               	movlw	1
  2621  09AC                     u4345:
  2622  09AC  1003               	clrc
  2623  09AD  0DC7               	rlf	??_scale+5,f
  2624  09AE  3EFF               	addlw	-1
  2625  09AF  1D03               	skipz
  2626  09B0  29AC               	goto	u4345
  2627  09B1  1003               	clrc
  2628  09B2  0D47               	rlf	??_scale+5,w
  2629  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2630  09B4  0084               	movwf	4
  2631  09B5  120A  118A  200D  120A  158A  	fcall	stringdir
  2632  09BA  00C8               	movwf	??_scale+6
  2633  09BB  120A  118A  200D  120A  158A  	fcall	stringdir
  2634  09C0  00C9               	movwf	??_scale+7
  2635  09C1  120A  118A  200D  120A  158A  	fcall	stringdir
  2636  09C6  00CA               	movwf	??_scale+8
  2637  09C7  120A  118A  200D  120A  158A  	fcall	stringdir
  2638  09CC  00CB               	movwf	??_scale+9
  2639  09CD  084B               	movf	??_scale+9,w
  2640  09CE  00AB               	movwf	___flmul@a+3
  2641  09CF  084A               	movf	??_scale+8,w
  2642  09D0  00AA               	movwf	___flmul@a+2
  2643  09D1  0849               	movf	??_scale+7,w
  2644  09D2  00A9               	movwf	___flmul@a+1
  2645  09D3  0848               	movf	??_scale+6,w
  2646  09D4  00A8               	movwf	___flmul@a
  2647  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  2648  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  2649  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  2650  09DC  0827               	movf	?___flmul+3,w
  2651  09DD  00CF               	movwf	_scale$1170+3
  2652  09DE  0826               	movf	?___flmul+2,w
  2653  09DF  00CE               	movwf	_scale$1170+2
  2654  09E0  0825               	movf	?___flmul+1,w
  2655  09E1  00CD               	movwf	_scale$1170+1
  2656  09E2  0824               	movf	?___flmul,w
  2657  09E3  00CC               	movwf	_scale$1170
  2658                           
  2659                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2660  09E4  300A               	movlw	10
  2661  09E5  00F0               	movwf	___awmod@divisor
  2662  09E6  3000               	movlw	0
  2663  09E7  00F1               	movwf	___awmod@divisor+1
  2664  09E8  0850               	movf	scale@scl,w
  2665  09E9  00F2               	movwf	___awmod@dividend
  2666  09EA  01F3               	clrf	___awmod@dividend+1
  2667  09EB  1BF2               	btfsc	___awmod@dividend,7
  2668  09EC  03F3               	decf	___awmod@dividend+1,f
  2669  09ED  160A  158A  24F7  120A  158A  	fcall	___awmod
  2670  09F2  0870               	movf	?___awmod,w
  2671  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  2672  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  2673  09F5  00C2               	movwf	??_scale
  2674  09F6  3001               	movlw	1
  2675  09F7                     u4355:
  2676  09F7  1003               	clrc
  2677  09F8  0DC2               	rlf	??_scale,f
  2678  09F9  3EFF               	addlw	-1
  2679  09FA  1D03               	skipz
  2680  09FB  29F7               	goto	u4355
  2681  09FC  1003               	clrc
  2682  09FD  0D42               	rlf	??_scale,w
  2683  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2684  09FF  0084               	movwf	4
  2685  0A00  120A  118A  200D  120A  158A  	fcall	stringdir
  2686  0A05  00C3               	movwf	??_scale+1
  2687  0A06  120A  118A  200D  120A  158A  	fcall	stringdir
  2688  0A0B  00C4               	movwf	??_scale+2
  2689  0A0C  120A  118A  200D  120A  158A  	fcall	stringdir
  2690  0A11  00C5               	movwf	??_scale+3
  2691  0A12  120A  118A  200D  120A  158A  	fcall	stringdir
  2692  0A17  00C6               	movwf	??_scale+4
  2693  0A18  0846               	movf	??_scale+4,w
  2694  0A19  00A7               	movwf	___flmul@b+3
  2695  0A1A  0845               	movf	??_scale+3,w
  2696  0A1B  00A6               	movwf	___flmul@b+2
  2697  0A1C  0844               	movf	??_scale+2,w
  2698  0A1D  00A5               	movwf	___flmul@b+1
  2699  0A1E  0843               	movf	??_scale+1,w
  2700  0A1F  00A4               	movwf	___flmul@b
  2701  0A20  084F               	movf	_scale$1170+3,w
  2702  0A21  00AB               	movwf	___flmul@a+3
  2703  0A22  084E               	movf	_scale$1170+2,w
  2704  0A23  00AA               	movwf	___flmul@a+2
  2705  0A24  084D               	movf	_scale$1170+1,w
  2706  0A25  00A9               	movwf	___flmul@a+1
  2707  0A26  084C               	movf	_scale$1170,w
  2708  0A27  00A8               	movwf	___flmul@a
  2709  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  2710  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  2711  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  2712  0A2F  0827               	movf	?___flmul+3,w
  2713  0A30  00C1               	movwf	?_scale+3
  2714  0A31  0826               	movf	?___flmul+2,w
  2715  0A32  00C0               	movwf	?_scale+2
  2716  0A33  0825               	movf	?___flmul+1,w
  2717  0A34  00BF               	movwf	?_scale+1
  2718  0A35  0824               	movf	?___flmul,w
  2719  0A36  00BE               	movwf	?_scale
  2720  0A37  2C9E               	goto	l320
  2721  0A38                     l2971:
  2722  0A38  0850               	movf	scale@scl,w
  2723  0A39  3A80               	xorlw	128
  2724  0A3A  3E75               	addlw	-139
  2725  0A3B  1C03               	skipc
  2726  0A3C  2A3E               	goto	u4361
  2727  0A3D  2A3F               	goto	u4360
  2728  0A3E                     u4361:
  2729  0A3E  2AC7               	goto	l2977
  2730  0A3F                     u4360:
  2731  0A3F                     l2973:
  2732                           
  2733                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2734  0A3F  300A               	movlw	10
  2735  0A40  00F0               	movwf	___awmod@divisor
  2736  0A41  3000               	movlw	0
  2737  0A42  00F1               	movwf	___awmod@divisor+1
  2738  0A43  0850               	movf	scale@scl,w
  2739  0A44  00F2               	movwf	___awmod@dividend
  2740  0A45  01F3               	clrf	___awmod@dividend+1
  2741  0A46  1BF2               	btfsc	___awmod@dividend,7
  2742  0A47  03F3               	decf	___awmod@dividend+1,f
  2743  0A48  160A  158A  24F7  120A  158A  	fcall	___awmod
  2744  0A4D  0870               	movf	?___awmod,w
  2745  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  2746  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  2747  0A50  00C2               	movwf	??_scale
  2748  0A51  3001               	movlw	1
  2749  0A52                     u4375:
  2750  0A52  1003               	clrc
  2751  0A53  0DC2               	rlf	??_scale,f
  2752  0A54  3EFF               	addlw	-1
  2753  0A55  1D03               	skipz
  2754  0A56  2A52               	goto	u4375
  2755  0A57  1003               	clrc
  2756  0A58  0D42               	rlf	??_scale,w
  2757  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2758  0A5A  0084               	movwf	4
  2759  0A5B  120A  118A  200D  120A  158A  	fcall	stringdir
  2760  0A60  00C3               	movwf	??_scale+1
  2761  0A61  120A  118A  200D  120A  158A  	fcall	stringdir
  2762  0A66  00C4               	movwf	??_scale+2
  2763  0A67  120A  118A  200D  120A  158A  	fcall	stringdir
  2764  0A6C  00C5               	movwf	??_scale+3
  2765  0A6D  120A  118A  200D  120A  158A  	fcall	stringdir
  2766  0A72  00C6               	movwf	??_scale+4
  2767  0A73  0846               	movf	??_scale+4,w
  2768  0A74  00A7               	movwf	___flmul@b+3
  2769  0A75  0845               	movf	??_scale+3,w
  2770  0A76  00A6               	movwf	___flmul@b+2
  2771  0A77  0844               	movf	??_scale+2,w
  2772  0A78  00A5               	movwf	___flmul@b+1
  2773  0A79  0843               	movf	??_scale+1,w
  2774  0A7A  00A4               	movwf	___flmul@b
  2775  0A7B  300A               	movlw	10
  2776  0A7C  00F7               	movwf	___awdiv@divisor
  2777  0A7D  3000               	movlw	0
  2778  0A7E  00F8               	movwf	___awdiv@divisor+1
  2779  0A7F  0850               	movf	scale@scl,w
  2780  0A80  00F9               	movwf	___awdiv@dividend
  2781  0A81  01FA               	clrf	___awdiv@dividend+1
  2782  0A82  1BF9               	btfsc	___awdiv@dividend,7
  2783  0A83  03FA               	decf	___awdiv@dividend+1,f
  2784  0A84  160A  158A  25B6  120A  158A  	fcall	___awdiv
  2785  0A89  0877               	movf	?___awdiv,w
  2786  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  2787  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  2788  0A8C  00C7               	movwf	??_scale+5
  2789  0A8D  3001               	movlw	1
  2790  0A8E                     u4385:
  2791  0A8E  1003               	clrc
  2792  0A8F  0DC7               	rlf	??_scale+5,f
  2793  0A90  3EFF               	addlw	-1
  2794  0A91  1D03               	skipz
  2795  0A92  2A8E               	goto	u4385
  2796  0A93  1003               	clrc
  2797  0A94  0D47               	rlf	??_scale+5,w
  2798  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2799  0A96  0084               	movwf	4
  2800  0A97  120A  118A  200D  120A  158A  	fcall	stringdir
  2801  0A9C  00C8               	movwf	??_scale+6
  2802  0A9D  120A  118A  200D  120A  158A  	fcall	stringdir
  2803  0AA2  00C9               	movwf	??_scale+7
  2804  0AA3  120A  118A  200D  120A  158A  	fcall	stringdir
  2805  0AA8  00CA               	movwf	??_scale+8
  2806  0AA9  120A  118A  200D  120A  158A  	fcall	stringdir
  2807  0AAE  00CB               	movwf	??_scale+9
  2808  0AAF  084B               	movf	??_scale+9,w
  2809  0AB0  00AB               	movwf	___flmul@a+3
  2810  0AB1  084A               	movf	??_scale+8,w
  2811  0AB2  00AA               	movwf	___flmul@a+2
  2812  0AB3  0849               	movf	??_scale+7,w
  2813  0AB4  00A9               	movwf	___flmul@a+1
  2814  0AB5  0848               	movf	??_scale+6,w
  2815  0AB6  00A8               	movwf	___flmul@a
  2816  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  2817  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  2818  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  2819  0ABE  0827               	movf	?___flmul+3,w
  2820  0ABF  00C1               	movwf	?_scale+3
  2821  0AC0  0826               	movf	?___flmul+2,w
  2822  0AC1  00C0               	movwf	?_scale+2
  2823  0AC2  0825               	movf	?___flmul+1,w
  2824  0AC3  00BF               	movwf	?_scale+1
  2825  0AC4  0824               	movf	?___flmul,w
  2826  0AC5  00BE               	movwf	?_scale
  2827  0AC6  2C9E               	goto	l320
  2828  0AC7                     l2977:
  2829                           
  2830                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  2831  0AC7  0850               	movf	scale@scl,w
  2832  0AC8  00C2               	movwf	??_scale
  2833  0AC9  3001               	movlw	1
  2834  0ACA                     u4395:
  2835  0ACA  1003               	clrc
  2836  0ACB  0DC2               	rlf	??_scale,f
  2837  0ACC  3EFF               	addlw	-1
  2838  0ACD  1D03               	skipz
  2839  0ACE  2ACA               	goto	u4395
  2840  0ACF  1003               	clrc
  2841  0AD0  0D42               	rlf	??_scale,w
  2842  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2843  0AD2  0084               	movwf	4
  2844  0AD3  120A  118A  200D  120A  158A  	fcall	stringdir
  2845  0AD8  00C3               	movwf	??_scale+1
  2846  0AD9  120A  118A  200D  120A  158A  	fcall	stringdir
  2847  0ADE  00C4               	movwf	??_scale+2
  2848  0ADF  120A  118A  200D  120A  158A  	fcall	stringdir
  2849  0AE4  00C5               	movwf	??_scale+3
  2850  0AE5  120A  118A  200D  120A  158A  	fcall	stringdir
  2851  0AEA  00C6               	movwf	??_scale+4
  2852  0AEB  0846               	movf	??_scale+4,w
  2853  0AEC  00C1               	movwf	?_scale+3
  2854  0AED  0845               	movf	??_scale+3,w
  2855  0AEE  00C0               	movwf	?_scale+2
  2856  0AEF  0844               	movf	??_scale+2,w
  2857  0AF0  00BF               	movwf	?_scale+1
  2858  0AF1  0843               	movf	??_scale+1,w
  2859  0AF2  00BE               	movwf	?_scale
  2860  0AF3  2C9E               	goto	l320
  2861  0AF4                     l2981:
  2862                           
  2863                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  2864  0AF4  0850               	movf	scale@scl,w
  2865  0AF5  3A80               	xorlw	128
  2866  0AF6  3E12               	addlw	-238
  2867  0AF7  1C03               	skipc
  2868  0AF8  2AFA               	goto	u4401
  2869  0AF9  2AFB               	goto	u4400
  2870  0AFA                     u4401:
  2871  0AFA  2BE3               	goto	l2989
  2872  0AFB                     u4400:
  2873  0AFB                     l2983:
  2874                           
  2875                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2876  0AFB  300A               	movlw	10
  2877  0AFC  00F7               	movwf	___awdiv@divisor
  2878  0AFD  3000               	movlw	0
  2879  0AFE  00F8               	movwf	___awdiv@divisor+1
  2880  0AFF  0850               	movf	scale@scl,w
  2881  0B00  00F2               	movwf	___awmod@dividend
  2882  0B01  01F3               	clrf	___awmod@dividend+1
  2883  0B02  1BF2               	btfsc	___awmod@dividend,7
  2884  0B03  03F3               	decf	___awmod@dividend+1,f
  2885  0B04  3064               	movlw	100
  2886  0B05  00F0               	movwf	___awmod@divisor
  2887  0B06  3000               	movlw	0
  2888  0B07  00F1               	movwf	___awmod@divisor+1
  2889  0B08  160A  158A  24F7  120A  158A  	fcall	___awmod
  2890  0B0D  0871               	movf	?___awmod+1,w
  2891  0B0E  00FA               	movwf	___awdiv@dividend+1
  2892  0B0F  0870               	movf	?___awmod,w
  2893  0B10  00F9               	movwf	___awdiv@dividend
  2894  0B11  160A  158A  25B6  120A  158A  	fcall	___awdiv
  2895  0B16  0877               	movf	?___awdiv,w
  2896  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  2897  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  2898  0B19  00C2               	movwf	??_scale
  2899  0B1A  3001               	movlw	1
  2900  0B1B                     u4415:
  2901  0B1B  1003               	clrc
  2902  0B1C  0DC2               	rlf	??_scale,f
  2903  0B1D  3EFF               	addlw	-1
  2904  0B1E  1D03               	skipz
  2905  0B1F  2B1B               	goto	u4415
  2906  0B20  1003               	clrc
  2907  0B21  0D42               	rlf	??_scale,w
  2908  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  2909  0B23  0084               	movwf	4
  2910  0B24  120A  118A  200D  120A  158A  	fcall	stringdir
  2911  0B29  00C3               	movwf	??_scale+1
  2912  0B2A  120A  118A  200D  120A  158A  	fcall	stringdir
  2913  0B2F  00C4               	movwf	??_scale+2
  2914  0B30  120A  118A  200D  120A  158A  	fcall	stringdir
  2915  0B35  00C5               	movwf	??_scale+3
  2916  0B36  120A  118A  200D  120A  158A  	fcall	stringdir
  2917  0B3B  00C6               	movwf	??_scale+4
  2918  0B3C  0846               	movf	??_scale+4,w
  2919  0B3D  00A7               	movwf	___flmul@b+3
  2920  0B3E  0845               	movf	??_scale+3,w
  2921  0B3F  00A6               	movwf	___flmul@b+2
  2922  0B40  0844               	movf	??_scale+2,w
  2923  0B41  00A5               	movwf	___flmul@b+1
  2924  0B42  0843               	movf	??_scale+1,w
  2925  0B43  00A4               	movwf	___flmul@b
  2926  0B44  3064               	movlw	100
  2927  0B45  00F7               	movwf	___awdiv@divisor
  2928  0B46  3000               	movlw	0
  2929  0B47  00F8               	movwf	___awdiv@divisor+1
  2930  0B48  0850               	movf	scale@scl,w
  2931  0B49  00F9               	movwf	___awdiv@dividend
  2932  0B4A  01FA               	clrf	___awdiv@dividend+1
  2933  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  2934  0B4C  03FA               	decf	___awdiv@dividend+1,f
  2935  0B4D  160A  158A  25B6  120A  158A  	fcall	___awdiv
  2936  0B52  0877               	movf	?___awdiv,w
  2937  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  2938  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  2939  0B55  00C7               	movwf	??_scale+5
  2940  0B56  3001               	movlw	1
  2941  0B57                     u4425:
  2942  0B57  1003               	clrc
  2943  0B58  0DC7               	rlf	??_scale+5,f
  2944  0B59  3EFF               	addlw	-1
  2945  0B5A  1D03               	skipz
  2946  0B5B  2B57               	goto	u4425
  2947  0B5C  1003               	clrc
  2948  0B5D  0D47               	rlf	??_scale+5,w
  2949  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  2950  0B5F  0084               	movwf	4
  2951  0B60  120A  118A  200D  120A  158A  	fcall	stringdir
  2952  0B65  00C8               	movwf	??_scale+6
  2953  0B66  120A  118A  200D  120A  158A  	fcall	stringdir
  2954  0B6B  00C9               	movwf	??_scale+7
  2955  0B6C  120A  118A  200D  120A  158A  	fcall	stringdir
  2956  0B71  00CA               	movwf	??_scale+8
  2957  0B72  120A  118A  200D  120A  158A  	fcall	stringdir
  2958  0B77  00CB               	movwf	??_scale+9
  2959  0B78  084B               	movf	??_scale+9,w
  2960  0B79  00AB               	movwf	___flmul@a+3
  2961  0B7A  084A               	movf	??_scale+8,w
  2962  0B7B  00AA               	movwf	___flmul@a+2
  2963  0B7C  0849               	movf	??_scale+7,w
  2964  0B7D  00A9               	movwf	___flmul@a+1
  2965  0B7E  0848               	movf	??_scale+6,w
  2966  0B7F  00A8               	movwf	___flmul@a
  2967  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  2968  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  2969  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  2970  0B87  0827               	movf	?___flmul+3,w
  2971  0B88  00CF               	movwf	_scale$1170+3
  2972  0B89  0826               	movf	?___flmul+2,w
  2973  0B8A  00CE               	movwf	_scale$1170+2
  2974  0B8B  0825               	movf	?___flmul+1,w
  2975  0B8C  00CD               	movwf	_scale$1170+1
  2976  0B8D  0824               	movf	?___flmul,w
  2977  0B8E  00CC               	movwf	_scale$1170
  2978                           
  2979                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2980  0B8F  300A               	movlw	10
  2981  0B90  00F0               	movwf	___awmod@divisor
  2982  0B91  3000               	movlw	0
  2983  0B92  00F1               	movwf	___awmod@divisor+1
  2984  0B93  0850               	movf	scale@scl,w
  2985  0B94  00F2               	movwf	___awmod@dividend
  2986  0B95  01F3               	clrf	___awmod@dividend+1
  2987  0B96  1BF2               	btfsc	___awmod@dividend,7
  2988  0B97  03F3               	decf	___awmod@dividend+1,f
  2989  0B98  160A  158A  24F7  120A  158A  	fcall	___awmod
  2990  0B9D  0870               	movf	?___awmod,w
  2991  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  2992  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  2993  0BA0  00C2               	movwf	??_scale
  2994  0BA1  3001               	movlw	1
  2995  0BA2                     u4435:
  2996  0BA2  1003               	clrc
  2997  0BA3  0DC2               	rlf	??_scale,f
  2998  0BA4  3EFF               	addlw	-1
  2999  0BA5  1D03               	skipz
  3000  0BA6  2BA2               	goto	u4435
  3001  0BA7  1003               	clrc
  3002  0BA8  0D42               	rlf	??_scale,w
  3003  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3004  0BAA  0084               	movwf	4
  3005  0BAB  120A  118A  200D  120A  158A  	fcall	stringdir
  3006  0BB0  00C3               	movwf	??_scale+1
  3007  0BB1  120A  118A  200D  120A  158A  	fcall	stringdir
  3008  0BB6  00C4               	movwf	??_scale+2
  3009  0BB7  120A  118A  200D  120A  158A  	fcall	stringdir
  3010  0BBC  00C5               	movwf	??_scale+3
  3011  0BBD  120A  118A  200D  120A  158A  	fcall	stringdir
  3012  0BC2  00C6               	movwf	??_scale+4
  3013  0BC3  0846               	movf	??_scale+4,w
  3014  0BC4  00A7               	movwf	___flmul@b+3
  3015  0BC5  0845               	movf	??_scale+3,w
  3016  0BC6  00A6               	movwf	___flmul@b+2
  3017  0BC7  0844               	movf	??_scale+2,w
  3018  0BC8  00A5               	movwf	___flmul@b+1
  3019  0BC9  0843               	movf	??_scale+1,w
  3020  0BCA  00A4               	movwf	___flmul@b
  3021  0BCB  084F               	movf	_scale$1170+3,w
  3022  0BCC  00AB               	movwf	___flmul@a+3
  3023  0BCD  084E               	movf	_scale$1170+2,w
  3024  0BCE  00AA               	movwf	___flmul@a+2
  3025  0BCF  084D               	movf	_scale$1170+1,w
  3026  0BD0  00A9               	movwf	___flmul@a+1
  3027  0BD1  084C               	movf	_scale$1170,w
  3028  0BD2  00A8               	movwf	___flmul@a
  3029  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  3030  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  3031  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  3032  0BDA  0827               	movf	?___flmul+3,w
  3033  0BDB  00C1               	movwf	?_scale+3
  3034  0BDC  0826               	movf	?___flmul+2,w
  3035  0BDD  00C0               	movwf	?_scale+2
  3036  0BDE  0825               	movf	?___flmul+1,w
  3037  0BDF  00BF               	movwf	?_scale+1
  3038  0BE0  0824               	movf	?___flmul,w
  3039  0BE1  00BE               	movwf	?_scale
  3040  0BE2  2C9E               	goto	l320
  3041  0BE3                     l2989:
  3042  0BE3  0850               	movf	scale@scl,w
  3043  0BE4  3A80               	xorlw	128
  3044  0BE5  3E75               	addlw	-139
  3045  0BE6  1C03               	skipc
  3046  0BE7  2BE9               	goto	u4441
  3047  0BE8  2BEA               	goto	u4440
  3048  0BE9                     u4441:
  3049  0BE9  2C72               	goto	l2995
  3050  0BEA                     u4440:
  3051  0BEA                     l2991:
  3052                           
  3053                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3054  0BEA  300A               	movlw	10
  3055  0BEB  00F0               	movwf	___awmod@divisor
  3056  0BEC  3000               	movlw	0
  3057  0BED  00F1               	movwf	___awmod@divisor+1
  3058  0BEE  0850               	movf	scale@scl,w
  3059  0BEF  00F2               	movwf	___awmod@dividend
  3060  0BF0  01F3               	clrf	___awmod@dividend+1
  3061  0BF1  1BF2               	btfsc	___awmod@dividend,7
  3062  0BF2  03F3               	decf	___awmod@dividend+1,f
  3063  0BF3  160A  158A  24F7  120A  158A  	fcall	___awmod
  3064  0BF8  0870               	movf	?___awmod,w
  3065  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  3066  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  3067  0BFB  00C2               	movwf	??_scale
  3068  0BFC  3001               	movlw	1
  3069  0BFD                     u4455:
  3070  0BFD  1003               	clrc
  3071  0BFE  0DC2               	rlf	??_scale,f
  3072  0BFF  3EFF               	addlw	-1
  3073  0C00  1D03               	skipz
  3074  0C01  2BFD               	goto	u4455
  3075  0C02  1003               	clrc
  3076  0C03  0D42               	rlf	??_scale,w
  3077  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3078  0C05  0084               	movwf	4
  3079  0C06  120A  118A  200D  120A  158A  	fcall	stringdir
  3080  0C0B  00C3               	movwf	??_scale+1
  3081  0C0C  120A  118A  200D  120A  158A  	fcall	stringdir
  3082  0C11  00C4               	movwf	??_scale+2
  3083  0C12  120A  118A  200D  120A  158A  	fcall	stringdir
  3084  0C17  00C5               	movwf	??_scale+3
  3085  0C18  120A  118A  200D  120A  158A  	fcall	stringdir
  3086  0C1D  00C6               	movwf	??_scale+4
  3087  0C1E  0846               	movf	??_scale+4,w
  3088  0C1F  00A7               	movwf	___flmul@b+3
  3089  0C20  0845               	movf	??_scale+3,w
  3090  0C21  00A6               	movwf	___flmul@b+2
  3091  0C22  0844               	movf	??_scale+2,w
  3092  0C23  00A5               	movwf	___flmul@b+1
  3093  0C24  0843               	movf	??_scale+1,w
  3094  0C25  00A4               	movwf	___flmul@b
  3095  0C26  300A               	movlw	10
  3096  0C27  00F7               	movwf	___awdiv@divisor
  3097  0C28  3000               	movlw	0
  3098  0C29  00F8               	movwf	___awdiv@divisor+1
  3099  0C2A  0850               	movf	scale@scl,w
  3100  0C2B  00F9               	movwf	___awdiv@dividend
  3101  0C2C  01FA               	clrf	___awdiv@dividend+1
  3102  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  3103  0C2E  03FA               	decf	___awdiv@dividend+1,f
  3104  0C2F  160A  158A  25B6  120A  158A  	fcall	___awdiv
  3105  0C34  0877               	movf	?___awdiv,w
  3106  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  3107  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  3108  0C37  00C7               	movwf	??_scale+5
  3109  0C38  3001               	movlw	1
  3110  0C39                     u4465:
  3111  0C39  1003               	clrc
  3112  0C3A  0DC7               	rlf	??_scale+5,f
  3113  0C3B  3EFF               	addlw	-1
  3114  0C3C  1D03               	skipz
  3115  0C3D  2C39               	goto	u4465
  3116  0C3E  1003               	clrc
  3117  0C3F  0D47               	rlf	??_scale+5,w
  3118  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3119  0C41  0084               	movwf	4
  3120  0C42  120A  118A  200D  120A  158A  	fcall	stringdir
  3121  0C47  00C8               	movwf	??_scale+6
  3122  0C48  120A  118A  200D  120A  158A  	fcall	stringdir
  3123  0C4D  00C9               	movwf	??_scale+7
  3124  0C4E  120A  118A  200D  120A  158A  	fcall	stringdir
  3125  0C53  00CA               	movwf	??_scale+8
  3126  0C54  120A  118A  200D  120A  158A  	fcall	stringdir
  3127  0C59  00CB               	movwf	??_scale+9
  3128  0C5A  084B               	movf	??_scale+9,w
  3129  0C5B  00AB               	movwf	___flmul@a+3
  3130  0C5C  084A               	movf	??_scale+8,w
  3131  0C5D  00AA               	movwf	___flmul@a+2
  3132  0C5E  0849               	movf	??_scale+7,w
  3133  0C5F  00A9               	movwf	___flmul@a+1
  3134  0C60  0848               	movf	??_scale+6,w
  3135  0C61  00A8               	movwf	___flmul@a
  3136  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  3137  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  3138  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  3139  0C69  0827               	movf	?___flmul+3,w
  3140  0C6A  00C1               	movwf	?_scale+3
  3141  0C6B  0826               	movf	?___flmul+2,w
  3142  0C6C  00C0               	movwf	?_scale+2
  3143  0C6D  0825               	movf	?___flmul+1,w
  3144  0C6E  00BF               	movwf	?_scale+1
  3145  0C6F  0824               	movf	?___flmul,w
  3146  0C70  00BE               	movwf	?_scale
  3147  0C71  2C9E               	goto	l320
  3148  0C72                     l2995:
  3149                           
  3150                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3151  0C72  0850               	movf	scale@scl,w
  3152  0C73  00C2               	movwf	??_scale
  3153  0C74  3001               	movlw	1
  3154  0C75                     u4475:
  3155  0C75  1003               	clrc
  3156  0C76  0DC2               	rlf	??_scale,f
  3157  0C77  3EFF               	addlw	-1
  3158  0C78  1D03               	skipz
  3159  0C79  2C75               	goto	u4475
  3160  0C7A  1003               	clrc
  3161  0C7B  0D42               	rlf	??_scale,w
  3162  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3163  0C7D  0084               	movwf	4
  3164  0C7E  120A  118A  200D  120A  158A  	fcall	stringdir
  3165  0C83  00C3               	movwf	??_scale+1
  3166  0C84  120A  118A  200D  120A  158A  	fcall	stringdir
  3167  0C89  00C4               	movwf	??_scale+2
  3168  0C8A  120A  118A  200D  120A  158A  	fcall	stringdir
  3169  0C8F  00C5               	movwf	??_scale+3
  3170  0C90  120A  118A  200D  120A  158A  	fcall	stringdir
  3171  0C95  00C6               	movwf	??_scale+4
  3172  0C96  0846               	movf	??_scale+4,w
  3173  0C97  00C1               	movwf	?_scale+3
  3174  0C98  0845               	movf	??_scale+3,w
  3175  0C99  00C0               	movwf	?_scale+2
  3176  0C9A  0844               	movf	??_scale+2,w
  3177  0C9B  00BF               	movwf	?_scale+1
  3178  0C9C  0843               	movf	??_scale+1,w
  3179  0C9D  00BE               	movwf	?_scale
  3180  0C9E                     l320:
  3181  0C9E  0008               	return
  3182  0C9F                     __end_of_scale:
  3183                           
  3184                           	psect	text3
  3185  1CF7                     __ptext3:	
  3186 ;; *************** function ___awmod *****************
  3187 ;; Defined at:
  3188 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3189 ;; Parameters:    Size  Location     Type
  3190 ;;  divisor         2    0[COMMON] int 
  3191 ;;  dividend        2    2[COMMON] int 
  3192 ;; Auto vars:     Size  Location     Type
  3193 ;;  sign            1    6[COMMON] unsigned char 
  3194 ;;  counter         1    5[COMMON] unsigned char 
  3195 ;; Return value:  Size  Location     Type
  3196 ;;                  2    0[COMMON] int 
  3197 ;; Registers used:
  3198 ;;		wreg, status,2, status,0
  3199 ;; Tracked objects:
  3200 ;;		On entry : 0/0
  3201 ;;		On exit  : 0/0
  3202 ;;		Unchanged: 0/0
  3203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3204 ;;      Params:         4       0       0       0       0
  3205 ;;      Locals:         2       0       0       0       0
  3206 ;;      Temps:          1       0       0       0       0
  3207 ;;      Totals:         7       0       0       0       0
  3208 ;;Total ram usage:        7 bytes
  3209 ;; Hardware stack levels used:    1
  3210 ;; This function calls:
  3211 ;;		Nothing
  3212 ;; This function is called by:
  3213 ;;		_scale
  3214 ;; This function uses a non-reentrant model
  3215 ;;
  3216                           
  3217                           
  3218                           ;psect for function ___awmod
  3219  1CF7                     ___awmod:
  3220  1CF7                     l2481:	
  3221                           ;incstack = 0
  3222                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3223                           
  3224  1CF7  01F6               	clrf	___awmod@sign
  3225  1CF8                     l2483:
  3226  1CF8  1FF3               	btfss	___awmod@dividend+1,7
  3227  1CF9  2CFB               	goto	u3171
  3228  1CFA  2CFC               	goto	u3170
  3229  1CFB                     u3171:
  3230  1CFB  2D03               	goto	l2489
  3231  1CFC                     u3170:
  3232  1CFC                     l2485:
  3233  1CFC  09F2               	comf	___awmod@dividend,f
  3234  1CFD  09F3               	comf	___awmod@dividend+1,f
  3235  1CFE  0AF2               	incf	___awmod@dividend,f
  3236  1CFF  1903               	skipnz
  3237  1D00  0AF3               	incf	___awmod@dividend+1,f
  3238  1D01                     l2487:
  3239  1D01  01F6               	clrf	___awmod@sign
  3240  1D02  0AF6               	incf	___awmod@sign,f
  3241  1D03                     l2489:
  3242  1D03  1FF1               	btfss	___awmod@divisor+1,7
  3243  1D04  2D06               	goto	u3181
  3244  1D05  2D07               	goto	u3180
  3245  1D06                     u3181:
  3246  1D06  2D0C               	goto	l2493
  3247  1D07                     u3180:
  3248  1D07                     l2491:
  3249  1D07  09F0               	comf	___awmod@divisor,f
  3250  1D08  09F1               	comf	___awmod@divisor+1,f
  3251  1D09  0AF0               	incf	___awmod@divisor,f
  3252  1D0A  1903               	skipnz
  3253  1D0B  0AF1               	incf	___awmod@divisor+1,f
  3254  1D0C                     l2493:
  3255  1D0C  0870               	movf	___awmod@divisor,w
  3256  1D0D  0471               	iorwf	___awmod@divisor+1,w
  3257  1D0E  1903               	btfsc	3,2
  3258  1D0F  2D11               	goto	u3191
  3259  1D10  2D12               	goto	u3190
  3260  1D11                     u3191:
  3261  1D11  2D41               	goto	l2511
  3262  1D12                     u3190:
  3263  1D12                     l2495:
  3264  1D12  01F5               	clrf	___awmod@counter
  3265  1D13  0AF5               	incf	___awmod@counter,f
  3266  1D14  2D20               	goto	l2501
  3267  1D15                     l2497:
  3268  1D15  3001               	movlw	1
  3269  1D16                     u3205:
  3270  1D16  1003               	clrc
  3271  1D17  0DF0               	rlf	___awmod@divisor,f
  3272  1D18  0DF1               	rlf	___awmod@divisor+1,f
  3273  1D19  3EFF               	addlw	-1
  3274  1D1A  1D03               	skipz
  3275  1D1B  2D16               	goto	u3205
  3276  1D1C                     l2499:
  3277  1D1C  3001               	movlw	1
  3278  1D1D  00F4               	movwf	??___awmod
  3279  1D1E  0874               	movf	??___awmod,w
  3280  1D1F  07F5               	addwf	___awmod@counter,f
  3281  1D20                     l2501:
  3282  1D20  1FF1               	btfss	___awmod@divisor+1,7
  3283  1D21  2D23               	goto	u3211
  3284  1D22  2D24               	goto	u3210
  3285  1D23                     u3211:
  3286  1D23  2D15               	goto	l2497
  3287  1D24                     u3210:
  3288  1D24                     l2503:
  3289  1D24  0871               	movf	___awmod@divisor+1,w
  3290  1D25  0273               	subwf	___awmod@dividend+1,w
  3291  1D26  1D03               	skipz
  3292  1D27  2D2A               	goto	u3225
  3293  1D28  0870               	movf	___awmod@divisor,w
  3294  1D29  0272               	subwf	___awmod@dividend,w
  3295  1D2A                     u3225:
  3296  1D2A  1C03               	skipc
  3297  1D2B  2D2D               	goto	u3221
  3298  1D2C  2D2E               	goto	u3220
  3299  1D2D                     u3221:
  3300  1D2D  2D34               	goto	l2507
  3301  1D2E                     u3220:
  3302  1D2E                     l2505:
  3303  1D2E  0870               	movf	___awmod@divisor,w
  3304  1D2F  02F2               	subwf	___awmod@dividend,f
  3305  1D30  0871               	movf	___awmod@divisor+1,w
  3306  1D31  1C03               	skipc
  3307  1D32  03F3               	decf	___awmod@dividend+1,f
  3308  1D33  02F3               	subwf	___awmod@dividend+1,f
  3309  1D34                     l2507:
  3310  1D34  3001               	movlw	1
  3311  1D35                     u3235:
  3312  1D35  1003               	clrc
  3313  1D36  0CF1               	rrf	___awmod@divisor+1,f
  3314  1D37  0CF0               	rrf	___awmod@divisor,f
  3315  1D38  3EFF               	addlw	-1
  3316  1D39  1D03               	skipz
  3317  1D3A  2D35               	goto	u3235
  3318  1D3B                     l2509:
  3319  1D3B  3001               	movlw	1
  3320  1D3C  02F5               	subwf	___awmod@counter,f
  3321  1D3D  1D03               	btfss	3,2
  3322  1D3E  2D40               	goto	u3241
  3323  1D3F  2D41               	goto	u3240
  3324  1D40                     u3241:
  3325  1D40  2D24               	goto	l2503
  3326  1D41                     u3240:
  3327  1D41                     l2511:
  3328  1D41  0876               	movf	___awmod@sign,w
  3329  1D42  1903               	btfsc	3,2
  3330  1D43  2D45               	goto	u3251
  3331  1D44  2D46               	goto	u3250
  3332  1D45                     u3251:
  3333  1D45  2D4B               	goto	l2515
  3334  1D46                     u3250:
  3335  1D46                     l2513:
  3336  1D46  09F2               	comf	___awmod@dividend,f
  3337  1D47  09F3               	comf	___awmod@dividend+1,f
  3338  1D48  0AF2               	incf	___awmod@dividend,f
  3339  1D49  1903               	skipnz
  3340  1D4A  0AF3               	incf	___awmod@dividend+1,f
  3341  1D4B                     l2515:
  3342  1D4B  0873               	movf	___awmod@dividend+1,w
  3343  1D4C  00F1               	movwf	?___awmod+1
  3344  1D4D  0872               	movf	___awmod@dividend,w
  3345  1D4E  00F0               	movwf	?___awmod
  3346  1D4F                     l582:
  3347  1D4F  0008               	return
  3348  1D50                     __end_of___awmod:
  3349                           
  3350                           	psect	text4
  3351  1DB6                     __ptext4:	
  3352 ;; *************** function ___awdiv *****************
  3353 ;; Defined at:
  3354 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3355 ;; Parameters:    Size  Location     Type
  3356 ;;  divisor         2    7[COMMON] int 
  3357 ;;  dividend        2    9[COMMON] int 
  3358 ;; Auto vars:     Size  Location     Type
  3359 ;;  quotient        2    2[BANK0 ] int 
  3360 ;;  sign            1    1[BANK0 ] unsigned char 
  3361 ;;  counter         1    0[BANK0 ] unsigned char 
  3362 ;; Return value:  Size  Location     Type
  3363 ;;                  2    7[COMMON] int 
  3364 ;; Registers used:
  3365 ;;		wreg, status,2, status,0
  3366 ;; Tracked objects:
  3367 ;;		On entry : 0/0
  3368 ;;		On exit  : 0/0
  3369 ;;		Unchanged: 0/0
  3370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3371 ;;      Params:         4       0       0       0       0
  3372 ;;      Locals:         0       4       0       0       0
  3373 ;;      Temps:          1       0       0       0       0
  3374 ;;      Totals:         5       4       0       0       0
  3375 ;;Total ram usage:        9 bytes
  3376 ;; Hardware stack levels used:    1
  3377 ;; This function calls:
  3378 ;;		Nothing
  3379 ;; This function is called by:
  3380 ;;		_scale
  3381 ;;		_sprintf
  3382 ;; This function uses a non-reentrant model
  3383 ;;
  3384                           
  3385                           
  3386                           ;psect for function ___awdiv
  3387  1DB6                     ___awdiv:
  3388  1DB6                     l2437:	
  3389                           ;incstack = 0
  3390                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3391                           
  3392  1DB6  1283               	bcf	3,5	;RP0=0, select bank0
  3393  1DB7  1303               	bcf	3,6	;RP1=0, select bank0
  3394  1DB8  01A1               	clrf	___awdiv@sign
  3395  1DB9                     l2439:
  3396  1DB9  1FF8               	btfss	___awdiv@divisor+1,7
  3397  1DBA  2DBC               	goto	u3071
  3398  1DBB  2DBD               	goto	u3070
  3399  1DBC                     u3071:
  3400  1DBC  2DC4               	goto	l2445
  3401  1DBD                     u3070:
  3402  1DBD                     l2441:
  3403  1DBD  09F7               	comf	___awdiv@divisor,f
  3404  1DBE  09F8               	comf	___awdiv@divisor+1,f
  3405  1DBF  0AF7               	incf	___awdiv@divisor,f
  3406  1DC0  1903               	skipnz
  3407  1DC1  0AF8               	incf	___awdiv@divisor+1,f
  3408  1DC2                     l2443:
  3409  1DC2  01A1               	clrf	___awdiv@sign
  3410  1DC3  0AA1               	incf	___awdiv@sign,f
  3411  1DC4                     l2445:
  3412  1DC4  1FFA               	btfss	___awdiv@dividend+1,7
  3413  1DC5  2DC7               	goto	u3081
  3414  1DC6  2DC8               	goto	u3080
  3415  1DC7                     u3081:
  3416  1DC7  2DD1               	goto	l2451
  3417  1DC8                     u3080:
  3418  1DC8                     l2447:
  3419  1DC8  09F9               	comf	___awdiv@dividend,f
  3420  1DC9  09FA               	comf	___awdiv@dividend+1,f
  3421  1DCA  0AF9               	incf	___awdiv@dividend,f
  3422  1DCB  1903               	skipnz
  3423  1DCC  0AFA               	incf	___awdiv@dividend+1,f
  3424  1DCD                     l2449:
  3425  1DCD  3001               	movlw	1
  3426  1DCE  00FB               	movwf	??___awdiv
  3427  1DCF  087B               	movf	??___awdiv,w
  3428  1DD0  06A1               	xorwf	___awdiv@sign,f
  3429  1DD1                     l2451:
  3430  1DD1  01A2               	clrf	___awdiv@quotient
  3431  1DD2  01A3               	clrf	___awdiv@quotient+1
  3432  1DD3                     l2453:
  3433  1DD3  0877               	movf	___awdiv@divisor,w
  3434  1DD4  0478               	iorwf	___awdiv@divisor+1,w
  3435  1DD5  1903               	btfsc	3,2
  3436  1DD6  2DD8               	goto	u3091
  3437  1DD7  2DD9               	goto	u3090
  3438  1DD8                     u3091:
  3439  1DD8  2E10               	goto	l2473
  3440  1DD9                     u3090:
  3441  1DD9                     l2455:
  3442  1DD9  01A0               	clrf	___awdiv@counter
  3443  1DDA  0AA0               	incf	___awdiv@counter,f
  3444  1DDB  2DE7               	goto	l2461
  3445  1DDC                     l2457:
  3446  1DDC  3001               	movlw	1
  3447  1DDD                     u3105:
  3448  1DDD  1003               	clrc
  3449  1DDE  0DF7               	rlf	___awdiv@divisor,f
  3450  1DDF  0DF8               	rlf	___awdiv@divisor+1,f
  3451  1DE0  3EFF               	addlw	-1
  3452  1DE1  1D03               	skipz
  3453  1DE2  2DDD               	goto	u3105
  3454  1DE3                     l2459:
  3455  1DE3  3001               	movlw	1
  3456  1DE4  00FB               	movwf	??___awdiv
  3457  1DE5  087B               	movf	??___awdiv,w
  3458  1DE6  07A0               	addwf	___awdiv@counter,f
  3459  1DE7                     l2461:
  3460  1DE7  1FF8               	btfss	___awdiv@divisor+1,7
  3461  1DE8  2DEA               	goto	u3111
  3462  1DE9  2DEB               	goto	u3110
  3463  1DEA                     u3111:
  3464  1DEA  2DDC               	goto	l2457
  3465  1DEB                     u3110:
  3466  1DEB                     l2463:
  3467  1DEB  3001               	movlw	1
  3468  1DEC                     u3125:
  3469  1DEC  1003               	clrc
  3470  1DED  0DA2               	rlf	___awdiv@quotient,f
  3471  1DEE  0DA3               	rlf	___awdiv@quotient+1,f
  3472  1DEF  3EFF               	addlw	-1
  3473  1DF0  1D03               	skipz
  3474  1DF1  2DEC               	goto	u3125
  3475  1DF2  0878               	movf	___awdiv@divisor+1,w
  3476  1DF3  027A               	subwf	___awdiv@dividend+1,w
  3477  1DF4  1D03               	skipz
  3478  1DF5  2DF8               	goto	u3135
  3479  1DF6  0877               	movf	___awdiv@divisor,w
  3480  1DF7  0279               	subwf	___awdiv@dividend,w
  3481  1DF8                     u3135:
  3482  1DF8  1C03               	skipc
  3483  1DF9  2DFB               	goto	u3131
  3484  1DFA  2DFC               	goto	u3130
  3485  1DFB                     u3131:
  3486  1DFB  2E03               	goto	l2469
  3487  1DFC                     u3130:
  3488  1DFC                     l2465:
  3489  1DFC  0877               	movf	___awdiv@divisor,w
  3490  1DFD  02F9               	subwf	___awdiv@dividend,f
  3491  1DFE  0878               	movf	___awdiv@divisor+1,w
  3492  1DFF  1C03               	skipc
  3493  1E00  03FA               	decf	___awdiv@dividend+1,f
  3494  1E01  02FA               	subwf	___awdiv@dividend+1,f
  3495  1E02                     l2467:
  3496  1E02  1422               	bsf	___awdiv@quotient,0
  3497  1E03                     l2469:
  3498  1E03  3001               	movlw	1
  3499  1E04                     u3145:
  3500  1E04  1003               	clrc
  3501  1E05  0CF8               	rrf	___awdiv@divisor+1,f
  3502  1E06  0CF7               	rrf	___awdiv@divisor,f
  3503  1E07  3EFF               	addlw	-1
  3504  1E08  1D03               	skipz
  3505  1E09  2E04               	goto	u3145
  3506  1E0A                     l2471:
  3507  1E0A  3001               	movlw	1
  3508  1E0B  02A0               	subwf	___awdiv@counter,f
  3509  1E0C  1D03               	btfss	3,2
  3510  1E0D  2E0F               	goto	u3151
  3511  1E0E  2E10               	goto	u3150
  3512  1E0F                     u3151:
  3513  1E0F  2DEB               	goto	l2463
  3514  1E10                     u3150:
  3515  1E10                     l2473:
  3516  1E10  0821               	movf	___awdiv@sign,w
  3517  1E11  1903               	btfsc	3,2
  3518  1E12  2E14               	goto	u3161
  3519  1E13  2E15               	goto	u3160
  3520  1E14                     u3161:
  3521  1E14  2E1A               	goto	l2477
  3522  1E15                     u3160:
  3523  1E15                     l2475:
  3524  1E15  09A2               	comf	___awdiv@quotient,f
  3525  1E16  09A3               	comf	___awdiv@quotient+1,f
  3526  1E17  0AA2               	incf	___awdiv@quotient,f
  3527  1E18  1903               	skipnz
  3528  1E19  0AA3               	incf	___awdiv@quotient+1,f
  3529  1E1A                     l2477:
  3530  1E1A  0823               	movf	___awdiv@quotient+1,w
  3531  1E1B  00F8               	movwf	?___awdiv+1
  3532  1E1C  0822               	movf	___awdiv@quotient,w
  3533  1E1D  00F7               	movwf	?___awdiv
  3534  1E1E                     l569:
  3535  1E1E  0008               	return
  3536  1E1F                     __end_of___awdiv:
  3537                           
  3538                           	psect	text5
  3539  19BF                     __ptext5:	
  3540 ;; *************** function _isdigit *****************
  3541 ;; Defined at:
  3542 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3543 ;; Parameters:    Size  Location     Type
  3544 ;;  c               1    wreg     unsigned char 
  3545 ;; Auto vars:     Size  Location     Type
  3546 ;;  c               1    1[COMMON] unsigned char 
  3547 ;; Return value:  Size  Location     Type
  3548 ;;		None               void
  3549 ;; Registers used:
  3550 ;;		wreg, status,2, status,0
  3551 ;; Tracked objects:
  3552 ;;		On entry : 0/0
  3553 ;;		On exit  : 0/0
  3554 ;;		Unchanged: 0/0
  3555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3556 ;;      Params:         0       0       0       0       0
  3557 ;;      Locals:         2       0       0       0       0
  3558 ;;      Temps:          0       0       0       0       0
  3559 ;;      Totals:         2       0       0       0       0
  3560 ;;Total ram usage:        2 bytes
  3561 ;; Hardware stack levels used:    1
  3562 ;; This function calls:
  3563 ;;		Nothing
  3564 ;; This function is called by:
  3565 ;;		_sprintf
  3566 ;; This function uses a non-reentrant model
  3567 ;;
  3568                           
  3569                           
  3570                           ;psect for function _isdigit
  3571  19BF                     _isdigit:
  3572                           
  3573                           ;incstack = 0
  3574                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3575                           ;isdigit@c stored from wreg
  3576  19BF  00F1               	movwf	isdigit@c
  3577  19C0                     l2999:
  3578  19C0  01F0               	clrf	_isdigit$969
  3579  19C1                     l3001:
  3580  19C1  303A               	movlw	58
  3581  19C2  0271               	subwf	isdigit@c,w
  3582  19C3  1803               	skipnc
  3583  19C4  29C6               	goto	u4481
  3584  19C5  29C7               	goto	u4480
  3585  19C6                     u4481:
  3586  19C6  29CF               	goto	l3007
  3587  19C7                     u4480:
  3588  19C7                     l3003:
  3589  19C7  3030               	movlw	48
  3590  19C8  0271               	subwf	isdigit@c,w
  3591  19C9  1C03               	skipc
  3592  19CA  29CC               	goto	u4491
  3593  19CB  29CD               	goto	u4490
  3594  19CC                     u4491:
  3595  19CC  29CF               	goto	l3007
  3596  19CD                     u4490:
  3597  19CD                     l3005:
  3598  19CD  01F0               	clrf	_isdigit$969
  3599  19CE  0AF0               	incf	_isdigit$969,f
  3600  19CF                     l3007:
  3601  19CF  0C70               	rrf	_isdigit$969,w
  3602  19D0                     l903:
  3603  19D0  0008               	return
  3604  19D1                     __end_of_isdigit:
  3605                           
  3606                           	psect	text6
  3607  10AB                     __ptext6:	
  3608 ;; *************** function _fround *****************
  3609 ;; Defined at:
  3610 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3611 ;; Parameters:    Size  Location     Type
  3612 ;;  prec            1    wreg     unsigned char 
  3613 ;; Auto vars:     Size  Location     Type
  3614 ;;  prec            1   49[BANK0 ] unsigned char 
  3615 ;; Return value:  Size  Location     Type
  3616 ;;                  4   30[BANK0 ] unsigned char 
  3617 ;; Registers used:
  3618 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3619 ;; Tracked objects:
  3620 ;;		On entry : 0/0
  3621 ;;		On exit  : 0/0
  3622 ;;		Unchanged: 0/0
  3623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3624 ;;      Params:         0       4       0       0       0
  3625 ;;      Locals:         0       9       0       0       0
  3626 ;;      Temps:          0       7       0       0       0
  3627 ;;      Totals:         0      20       0       0       0
  3628 ;;Total ram usage:       20 bytes
  3629 ;; Hardware stack levels used:    1
  3630 ;; Hardware stack levels required when called:    2
  3631 ;; This function calls:
  3632 ;;		___flmul
  3633 ;;		___lwdiv
  3634 ;;		___lwmod
  3635 ;; This function is called by:
  3636 ;;		_sprintf
  3637 ;; This function uses a non-reentrant model
  3638 ;;
  3639                           
  3640                           
  3641                           ;psect for function _fround
  3642  10AB                     _fround:
  3643                           
  3644                           ;incstack = 0
  3645                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3646                           ;fround@prec stored from wreg
  3647  10AB  1283               	bcf	3,5	;RP0=0, select bank0
  3648  10AC  1303               	bcf	3,6	;RP1=0, select bank0
  3649  10AD  00D1               	movwf	fround@prec
  3650  10AE                     l2941:
  3651                           
  3652                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3653  10AE  306E               	movlw	110
  3654  10AF  0251               	subwf	fround@prec,w
  3655  10B0  1C03               	skipc
  3656  10B1  28B3               	goto	u4231
  3657  10B2  28B4               	goto	u4230
  3658  10B3                     u4231:
  3659  10B3  29C1               	goto	l2949
  3660  10B4                     u4230:
  3661  10B4                     l2943:
  3662                           
  3663                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3664  10B4  303F               	movlw	63
  3665  10B5  00A7               	movwf	___flmul@b+3
  3666  10B6  3000               	movlw	0
  3667  10B7  00A6               	movwf	___flmul@b+2
  3668  10B8  3000               	movlw	0
  3669  10B9  00A5               	movwf	___flmul@b+1
  3670  10BA  3000               	movlw	0
  3671  10BB  00A4               	movwf	___flmul@b
  3672  10BC  3064               	movlw	100
  3673  10BD  00F6               	movwf	___lwdiv@divisor
  3674  10BE  3000               	movlw	0
  3675  10BF  00F7               	movwf	___lwdiv@divisor+1
  3676  10C0  0851               	movf	fround@prec,w
  3677  10C1  00C2               	movwf	??_fround
  3678  10C2  01C3               	clrf	??_fround+1
  3679  10C3  0842               	movf	??_fround,w
  3680  10C4  00F8               	movwf	___lwdiv@dividend
  3681  10C5  0843               	movf	??_fround+1,w
  3682  10C6  00F9               	movwf	___lwdiv@dividend+1
  3683  10C7  160A  158A  240F  160A  118A  	fcall	___lwdiv
  3684  10CC  0876               	movf	?___lwdiv,w
  3685  10CD  1283               	bcf	3,5	;RP0=0, select bank0
  3686  10CE  1303               	bcf	3,6	;RP1=0, select bank0
  3687  10CF  00C4               	movwf	??_fround+2
  3688  10D0  3001               	movlw	1
  3689  10D1                     u4245:
  3690  10D1  1003               	clrc
  3691  10D2  0DC4               	rlf	??_fround+2,f
  3692  10D3  3EFF               	addlw	-1
  3693  10D4  1D03               	skipz
  3694  10D5  28D1               	goto	u4245
  3695  10D6  1003               	clrc
  3696  10D7  0D44               	rlf	??_fround+2,w
  3697  10D8  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3698  10D9  0084               	movwf	4
  3699  10DA  120A  118A  200D  160A  118A  	fcall	stringdir
  3700  10DF  00C5               	movwf	??_fround+3
  3701  10E0  120A  118A  200D  160A  118A  	fcall	stringdir
  3702  10E5  00C6               	movwf	??_fround+4
  3703  10E6  120A  118A  200D  160A  118A  	fcall	stringdir
  3704  10EB  00C7               	movwf	??_fround+5
  3705  10EC  120A  118A  200D  160A  118A  	fcall	stringdir
  3706  10F1  00C8               	movwf	??_fround+6
  3707  10F2  0848               	movf	??_fround+6,w
  3708  10F3  00AB               	movwf	___flmul@a+3
  3709  10F4  0847               	movf	??_fround+5,w
  3710  10F5  00AA               	movwf	___flmul@a+2
  3711  10F6  0846               	movf	??_fround+4,w
  3712  10F7  00A9               	movwf	___flmul@a+1
  3713  10F8  0845               	movf	??_fround+3,w
  3714  10F9  00A8               	movwf	___flmul@a
  3715  10FA  120A  158A  249F  160A  118A  	fcall	___flmul
  3716  10FF  1283               	bcf	3,5	;RP0=0, select bank0
  3717  1100  1303               	bcf	3,6	;RP1=0, select bank0
  3718  1101  0827               	movf	?___flmul+3,w
  3719  1102  00D0               	movwf	_fround$1168+3
  3720  1103  0826               	movf	?___flmul+2,w
  3721  1104  00CF               	movwf	_fround$1168+2
  3722  1105  0825               	movf	?___flmul+1,w
  3723  1106  00CE               	movwf	_fround$1168+1
  3724  1107  0824               	movf	?___flmul,w
  3725  1108  00CD               	movwf	_fround$1168
  3726                           
  3727                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3728  1109  300A               	movlw	10
  3729  110A  00F6               	movwf	___lwdiv@divisor
  3730  110B  3000               	movlw	0
  3731  110C  00F7               	movwf	___lwdiv@divisor+1
  3732  110D  0851               	movf	fround@prec,w
  3733  110E  00C2               	movwf	??_fround
  3734  110F  01C3               	clrf	??_fround+1
  3735  1110  0842               	movf	??_fround,w
  3736  1111  00F2               	movwf	___lwmod@dividend
  3737  1112  0843               	movf	??_fround+1,w
  3738  1113  00F3               	movwf	___lwmod@dividend+1
  3739  1114  3064               	movlw	100
  3740  1115  00F0               	movwf	___lwmod@divisor
  3741  1116  3000               	movlw	0
  3742  1117  00F1               	movwf	___lwmod@divisor+1
  3743  1118  160A  158A  2355  160A  118A  	fcall	___lwmod
  3744  111D  0871               	movf	?___lwmod+1,w
  3745  111E  00F9               	movwf	___lwdiv@dividend+1
  3746  111F  0870               	movf	?___lwmod,w
  3747  1120  00F8               	movwf	___lwdiv@dividend
  3748  1121  160A  158A  240F  160A  118A  	fcall	___lwdiv
  3749  1126  0876               	movf	?___lwdiv,w
  3750  1127  1283               	bcf	3,5	;RP0=0, select bank0
  3751  1128  1303               	bcf	3,6	;RP1=0, select bank0
  3752  1129  00C4               	movwf	??_fround+2
  3753  112A  3001               	movlw	1
  3754  112B                     u4255:
  3755  112B  1003               	clrc
  3756  112C  0DC4               	rlf	??_fround+2,f
  3757  112D  3EFF               	addlw	-1
  3758  112E  1D03               	skipz
  3759  112F  292B               	goto	u4255
  3760  1130  1003               	clrc
  3761  1131  0D44               	rlf	??_fround+2,w
  3762  1132  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3763  1133  0084               	movwf	4
  3764  1134  120A  118A  200D  160A  118A  	fcall	stringdir
  3765  1139  00C5               	movwf	??_fround+3
  3766  113A  120A  118A  200D  160A  118A  	fcall	stringdir
  3767  113F  00C6               	movwf	??_fround+4
  3768  1140  120A  118A  200D  160A  118A  	fcall	stringdir
  3769  1145  00C7               	movwf	??_fround+5
  3770  1146  120A  118A  200D  160A  118A  	fcall	stringdir
  3771  114B  00C8               	movwf	??_fround+6
  3772  114C  0848               	movf	??_fround+6,w
  3773  114D  00A7               	movwf	___flmul@b+3
  3774  114E  0847               	movf	??_fround+5,w
  3775  114F  00A6               	movwf	___flmul@b+2
  3776  1150  0846               	movf	??_fround+4,w
  3777  1151  00A5               	movwf	___flmul@b+1
  3778  1152  0845               	movf	??_fround+3,w
  3779  1153  00A4               	movwf	___flmul@b
  3780  1154  0850               	movf	_fround$1168+3,w
  3781  1155  00AB               	movwf	___flmul@a+3
  3782  1156  084F               	movf	_fround$1168+2,w
  3783  1157  00AA               	movwf	___flmul@a+2
  3784  1158  084E               	movf	_fround$1168+1,w
  3785  1159  00A9               	movwf	___flmul@a+1
  3786  115A  084D               	movf	_fround$1168,w
  3787  115B  00A8               	movwf	___flmul@a
  3788  115C  120A  158A  249F  160A  118A  	fcall	___flmul
  3789  1161  1283               	bcf	3,5	;RP0=0, select bank0
  3790  1162  1303               	bcf	3,6	;RP1=0, select bank0
  3791  1163  0827               	movf	?___flmul+3,w
  3792  1164  00CC               	movwf	_fround$1169+3
  3793  1165  0826               	movf	?___flmul+2,w
  3794  1166  00CB               	movwf	_fround$1169+2
  3795  1167  0825               	movf	?___flmul+1,w
  3796  1168  00CA               	movwf	_fround$1169+1
  3797  1169  0824               	movf	?___flmul,w
  3798  116A  00C9               	movwf	_fround$1169
  3799                           
  3800                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3801  116B  300A               	movlw	10
  3802  116C  00F0               	movwf	___lwmod@divisor
  3803  116D  3000               	movlw	0
  3804  116E  00F1               	movwf	___lwmod@divisor+1
  3805  116F  0851               	movf	fround@prec,w
  3806  1170  00C2               	movwf	??_fround
  3807  1171  01C3               	clrf	??_fround+1
  3808  1172  0842               	movf	??_fround,w
  3809  1173  00F2               	movwf	___lwmod@dividend
  3810  1174  0843               	movf	??_fround+1,w
  3811  1175  00F3               	movwf	___lwmod@dividend+1
  3812  1176  160A  158A  2355  160A  118A  	fcall	___lwmod
  3813  117B  0870               	movf	?___lwmod,w
  3814  117C  1283               	bcf	3,5	;RP0=0, select bank0
  3815  117D  1303               	bcf	3,6	;RP1=0, select bank0
  3816  117E  00C4               	movwf	??_fround+2
  3817  117F  3001               	movlw	1
  3818  1180                     u4265:
  3819  1180  1003               	clrc
  3820  1181  0DC4               	rlf	??_fround+2,f
  3821  1182  3EFF               	addlw	-1
  3822  1183  1D03               	skipz
  3823  1184  2980               	goto	u4265
  3824  1185  1003               	clrc
  3825  1186  0D44               	rlf	??_fround+2,w
  3826  1187  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3827  1188  0084               	movwf	4
  3828  1189  120A  118A  200D  160A  118A  	fcall	stringdir
  3829  118E  00C5               	movwf	??_fround+3
  3830  118F  120A  118A  200D  160A  118A  	fcall	stringdir
  3831  1194  00C6               	movwf	??_fround+4
  3832  1195  120A  118A  200D  160A  118A  	fcall	stringdir
  3833  119A  00C7               	movwf	??_fround+5
  3834  119B  120A  118A  200D  160A  118A  	fcall	stringdir
  3835  11A0  00C8               	movwf	??_fround+6
  3836  11A1  0848               	movf	??_fround+6,w
  3837  11A2  00A7               	movwf	___flmul@b+3
  3838  11A3  0847               	movf	??_fround+5,w
  3839  11A4  00A6               	movwf	___flmul@b+2
  3840  11A5  0846               	movf	??_fround+4,w
  3841  11A6  00A5               	movwf	___flmul@b+1
  3842  11A7  0845               	movf	??_fround+3,w
  3843  11A8  00A4               	movwf	___flmul@b
  3844  11A9  084C               	movf	_fround$1169+3,w
  3845  11AA  00AB               	movwf	___flmul@a+3
  3846  11AB  084B               	movf	_fround$1169+2,w
  3847  11AC  00AA               	movwf	___flmul@a+2
  3848  11AD  084A               	movf	_fround$1169+1,w
  3849  11AE  00A9               	movwf	___flmul@a+1
  3850  11AF  0849               	movf	_fround$1169,w
  3851  11B0  00A8               	movwf	___flmul@a
  3852  11B1  120A  158A  249F  160A  118A  	fcall	___flmul
  3853  11B6  1283               	bcf	3,5	;RP0=0, select bank0
  3854  11B7  1303               	bcf	3,6	;RP1=0, select bank0
  3855  11B8  0827               	movf	?___flmul+3,w
  3856  11B9  00C1               	movwf	?_fround+3
  3857  11BA  0826               	movf	?___flmul+2,w
  3858  11BB  00C0               	movwf	?_fround+2
  3859  11BC  0825               	movf	?___flmul+1,w
  3860  11BD  00BF               	movwf	?_fround+1
  3861  11BE  0824               	movf	?___flmul,w
  3862  11BF  00BE               	movwf	?_fround
  3863  11C0  2AB5               	goto	l313
  3864  11C1                     l2949:
  3865  11C1  300B               	movlw	11
  3866  11C2  0251               	subwf	fround@prec,w
  3867  11C3  1C03               	skipc
  3868  11C4  29C6               	goto	u4271
  3869  11C5  29C7               	goto	u4270
  3870  11C6                     u4271:
  3871  11C6  2A72               	goto	l2955
  3872  11C7                     u4270:
  3873  11C7                     l2951:
  3874                           
  3875                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3876  11C7  303F               	movlw	63
  3877  11C8  00A7               	movwf	___flmul@b+3
  3878  11C9  3000               	movlw	0
  3879  11CA  00A6               	movwf	___flmul@b+2
  3880  11CB  3000               	movlw	0
  3881  11CC  00A5               	movwf	___flmul@b+1
  3882  11CD  3000               	movlw	0
  3883  11CE  00A4               	movwf	___flmul@b
  3884  11CF  300A               	movlw	10
  3885  11D0  00F6               	movwf	___lwdiv@divisor
  3886  11D1  3000               	movlw	0
  3887  11D2  00F7               	movwf	___lwdiv@divisor+1
  3888  11D3  0851               	movf	fround@prec,w
  3889  11D4  00C2               	movwf	??_fround
  3890  11D5  01C3               	clrf	??_fround+1
  3891  11D6  0842               	movf	??_fround,w
  3892  11D7  00F8               	movwf	___lwdiv@dividend
  3893  11D8  0843               	movf	??_fround+1,w
  3894  11D9  00F9               	movwf	___lwdiv@dividend+1
  3895  11DA  160A  158A  240F  160A  118A  	fcall	___lwdiv
  3896  11DF  0876               	movf	?___lwdiv,w
  3897  11E0  1283               	bcf	3,5	;RP0=0, select bank0
  3898  11E1  1303               	bcf	3,6	;RP1=0, select bank0
  3899  11E2  00C4               	movwf	??_fround+2
  3900  11E3  3001               	movlw	1
  3901  11E4                     u4285:
  3902  11E4  1003               	clrc
  3903  11E5  0DC4               	rlf	??_fround+2,f
  3904  11E6  3EFF               	addlw	-1
  3905  11E7  1D03               	skipz
  3906  11E8  29E4               	goto	u4285
  3907  11E9  1003               	clrc
  3908  11EA  0D44               	rlf	??_fround+2,w
  3909  11EB  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3910  11EC  0084               	movwf	4
  3911  11ED  120A  118A  200D  160A  118A  	fcall	stringdir
  3912  11F2  00C5               	movwf	??_fround+3
  3913  11F3  120A  118A  200D  160A  118A  	fcall	stringdir
  3914  11F8  00C6               	movwf	??_fround+4
  3915  11F9  120A  118A  200D  160A  118A  	fcall	stringdir
  3916  11FE  00C7               	movwf	??_fround+5
  3917  11FF  120A  118A  200D  160A  118A  	fcall	stringdir
  3918  1204  00C8               	movwf	??_fround+6
  3919  1205  0848               	movf	??_fround+6,w
  3920  1206  00AB               	movwf	___flmul@a+3
  3921  1207  0847               	movf	??_fround+5,w
  3922  1208  00AA               	movwf	___flmul@a+2
  3923  1209  0846               	movf	??_fround+4,w
  3924  120A  00A9               	movwf	___flmul@a+1
  3925  120B  0845               	movf	??_fround+3,w
  3926  120C  00A8               	movwf	___flmul@a
  3927  120D  120A  158A  249F  160A  118A  	fcall	___flmul
  3928  1212  1283               	bcf	3,5	;RP0=0, select bank0
  3929  1213  1303               	bcf	3,6	;RP1=0, select bank0
  3930  1214  0827               	movf	?___flmul+3,w
  3931  1215  00D0               	movwf	_fround$1168+3
  3932  1216  0826               	movf	?___flmul+2,w
  3933  1217  00CF               	movwf	_fround$1168+2
  3934  1218  0825               	movf	?___flmul+1,w
  3935  1219  00CE               	movwf	_fround$1168+1
  3936  121A  0824               	movf	?___flmul,w
  3937  121B  00CD               	movwf	_fround$1168
  3938                           
  3939                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3940  121C  300A               	movlw	10
  3941  121D  00F0               	movwf	___lwmod@divisor
  3942  121E  3000               	movlw	0
  3943  121F  00F1               	movwf	___lwmod@divisor+1
  3944  1220  0851               	movf	fround@prec,w
  3945  1221  00C2               	movwf	??_fround
  3946  1222  01C3               	clrf	??_fround+1
  3947  1223  0842               	movf	??_fround,w
  3948  1224  00F2               	movwf	___lwmod@dividend
  3949  1225  0843               	movf	??_fround+1,w
  3950  1226  00F3               	movwf	___lwmod@dividend+1
  3951  1227  160A  158A  2355  160A  118A  	fcall	___lwmod
  3952  122C  0870               	movf	?___lwmod,w
  3953  122D  1283               	bcf	3,5	;RP0=0, select bank0
  3954  122E  1303               	bcf	3,6	;RP1=0, select bank0
  3955  122F  00C4               	movwf	??_fround+2
  3956  1230  3001               	movlw	1
  3957  1231                     u4295:
  3958  1231  1003               	clrc
  3959  1232  0DC4               	rlf	??_fround+2,f
  3960  1233  3EFF               	addlw	-1
  3961  1234  1D03               	skipz
  3962  1235  2A31               	goto	u4295
  3963  1236  1003               	clrc
  3964  1237  0D44               	rlf	??_fround+2,w
  3965  1238  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3966  1239  0084               	movwf	4
  3967  123A  120A  118A  200D  160A  118A  	fcall	stringdir
  3968  123F  00C5               	movwf	??_fround+3
  3969  1240  120A  118A  200D  160A  118A  	fcall	stringdir
  3970  1245  00C6               	movwf	??_fround+4
  3971  1246  120A  118A  200D  160A  118A  	fcall	stringdir
  3972  124B  00C7               	movwf	??_fround+5
  3973  124C  120A  118A  200D  160A  118A  	fcall	stringdir
  3974  1251  00C8               	movwf	??_fround+6
  3975  1252  0848               	movf	??_fround+6,w
  3976  1253  00A7               	movwf	___flmul@b+3
  3977  1254  0847               	movf	??_fround+5,w
  3978  1255  00A6               	movwf	___flmul@b+2
  3979  1256  0846               	movf	??_fround+4,w
  3980  1257  00A5               	movwf	___flmul@b+1
  3981  1258  0845               	movf	??_fround+3,w
  3982  1259  00A4               	movwf	___flmul@b
  3983  125A  0850               	movf	_fround$1168+3,w
  3984  125B  00AB               	movwf	___flmul@a+3
  3985  125C  084F               	movf	_fround$1168+2,w
  3986  125D  00AA               	movwf	___flmul@a+2
  3987  125E  084E               	movf	_fround$1168+1,w
  3988  125F  00A9               	movwf	___flmul@a+1
  3989  1260  084D               	movf	_fround$1168,w
  3990  1261  00A8               	movwf	___flmul@a
  3991  1262  120A  158A  249F  160A  118A  	fcall	___flmul
  3992  1267  1283               	bcf	3,5	;RP0=0, select bank0
  3993  1268  1303               	bcf	3,6	;RP1=0, select bank0
  3994  1269  0827               	movf	?___flmul+3,w
  3995  126A  00C1               	movwf	?_fround+3
  3996  126B  0826               	movf	?___flmul+2,w
  3997  126C  00C0               	movwf	?_fround+2
  3998  126D  0825               	movf	?___flmul+1,w
  3999  126E  00BF               	movwf	?_fround+1
  4000  126F  0824               	movf	?___flmul,w
  4001  1270  00BE               	movwf	?_fround
  4002  1271  2AB5               	goto	l313
  4003  1272                     l2955:
  4004                           
  4005                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4006  1272  303F               	movlw	63
  4007  1273  00A7               	movwf	___flmul@b+3
  4008  1274  3000               	movlw	0
  4009  1275  00A6               	movwf	___flmul@b+2
  4010  1276  3000               	movlw	0
  4011  1277  00A5               	movwf	___flmul@b+1
  4012  1278  3000               	movlw	0
  4013  1279  00A4               	movwf	___flmul@b
  4014  127A  0851               	movf	fround@prec,w
  4015  127B  00C2               	movwf	??_fround
  4016  127C  3001               	movlw	1
  4017  127D                     u4305:
  4018  127D  1003               	clrc
  4019  127E  0DC2               	rlf	??_fround,f
  4020  127F  3EFF               	addlw	-1
  4021  1280  1D03               	skipz
  4022  1281  2A7D               	goto	u4305
  4023  1282  1003               	clrc
  4024  1283  0D42               	rlf	??_fround,w
  4025  1284  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4026  1285  0084               	movwf	4
  4027  1286  120A  118A  200D  160A  118A  	fcall	stringdir
  4028  128B  00C3               	movwf	??_fround+1
  4029  128C  120A  118A  200D  160A  118A  	fcall	stringdir
  4030  1291  00C4               	movwf	??_fround+2
  4031  1292  120A  118A  200D  160A  118A  	fcall	stringdir
  4032  1297  00C5               	movwf	??_fround+3
  4033  1298  120A  118A  200D  160A  118A  	fcall	stringdir
  4034  129D  00C6               	movwf	??_fround+4
  4035  129E  0846               	movf	??_fround+4,w
  4036  129F  00AB               	movwf	___flmul@a+3
  4037  12A0  0845               	movf	??_fround+3,w
  4038  12A1  00AA               	movwf	___flmul@a+2
  4039  12A2  0844               	movf	??_fround+2,w
  4040  12A3  00A9               	movwf	___flmul@a+1
  4041  12A4  0843               	movf	??_fround+1,w
  4042  12A5  00A8               	movwf	___flmul@a
  4043  12A6  120A  158A  249F  160A  118A  	fcall	___flmul
  4044  12AB  1283               	bcf	3,5	;RP0=0, select bank0
  4045  12AC  1303               	bcf	3,6	;RP1=0, select bank0
  4046  12AD  0827               	movf	?___flmul+3,w
  4047  12AE  00C1               	movwf	?_fround+3
  4048  12AF  0826               	movf	?___flmul+2,w
  4049  12B0  00C0               	movwf	?_fround+2
  4050  12B1  0825               	movf	?___flmul+1,w
  4051  12B2  00BF               	movwf	?_fround+1
  4052  12B3  0824               	movf	?___flmul,w
  4053  12B4  00BE               	movwf	?_fround
  4054  12B5                     l313:
  4055  12B5  0008               	return
  4056  12B6                     __end_of_fround:
  4057                           
  4058                           	psect	text7
  4059  1B55                     __ptext7:	
  4060 ;; *************** function ___lwmod *****************
  4061 ;; Defined at:
  4062 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4063 ;; Parameters:    Size  Location     Type
  4064 ;;  divisor         2    0[COMMON] unsigned int 
  4065 ;;  dividend        2    2[COMMON] unsigned int 
  4066 ;; Auto vars:     Size  Location     Type
  4067 ;;  counter         1    5[COMMON] unsigned char 
  4068 ;; Return value:  Size  Location     Type
  4069 ;;                  2    0[COMMON] unsigned int 
  4070 ;; Registers used:
  4071 ;;		wreg, status,2, status,0
  4072 ;; Tracked objects:
  4073 ;;		On entry : 0/0
  4074 ;;		On exit  : 0/0
  4075 ;;		Unchanged: 0/0
  4076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4077 ;;      Params:         4       0       0       0       0
  4078 ;;      Locals:         1       0       0       0       0
  4079 ;;      Temps:          1       0       0       0       0
  4080 ;;      Totals:         6       0       0       0       0
  4081 ;;Total ram usage:        6 bytes
  4082 ;; Hardware stack levels used:    1
  4083 ;; This function calls:
  4084 ;;		Nothing
  4085 ;; This function is called by:
  4086 ;;		_fround
  4087 ;; This function uses a non-reentrant model
  4088 ;;
  4089                           
  4090                           
  4091                           ;psect for function ___lwmod
  4092  1B55                     ___lwmod:
  4093  1B55                     l2545:	
  4094                           ;incstack = 0
  4095                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4096                           
  4097  1B55  0870               	movf	___lwmod@divisor,w
  4098  1B56  0471               	iorwf	___lwmod@divisor+1,w
  4099  1B57  1903               	btfsc	3,2
  4100  1B58  2B5A               	goto	u3331
  4101  1B59  2B5B               	goto	u3330
  4102  1B5A                     u3331:
  4103  1B5A  2B8A               	goto	l2563
  4104  1B5B                     u3330:
  4105  1B5B                     l2547:
  4106  1B5B  01F5               	clrf	___lwmod@counter
  4107  1B5C  0AF5               	incf	___lwmod@counter,f
  4108  1B5D  2B69               	goto	l2553
  4109  1B5E                     l2549:
  4110  1B5E  3001               	movlw	1
  4111  1B5F                     u3345:
  4112  1B5F  1003               	clrc
  4113  1B60  0DF0               	rlf	___lwmod@divisor,f
  4114  1B61  0DF1               	rlf	___lwmod@divisor+1,f
  4115  1B62  3EFF               	addlw	-1
  4116  1B63  1D03               	skipz
  4117  1B64  2B5F               	goto	u3345
  4118  1B65                     l2551:
  4119  1B65  3001               	movlw	1
  4120  1B66  00F4               	movwf	??___lwmod
  4121  1B67  0874               	movf	??___lwmod,w
  4122  1B68  07F5               	addwf	___lwmod@counter,f
  4123  1B69                     l2553:
  4124  1B69  1FF1               	btfss	___lwmod@divisor+1,7
  4125  1B6A  2B6C               	goto	u3351
  4126  1B6B  2B6D               	goto	u3350
  4127  1B6C                     u3351:
  4128  1B6C  2B5E               	goto	l2549
  4129  1B6D                     u3350:
  4130  1B6D                     l2555:
  4131  1B6D  0871               	movf	___lwmod@divisor+1,w
  4132  1B6E  0273               	subwf	___lwmod@dividend+1,w
  4133  1B6F  1D03               	skipz
  4134  1B70  2B73               	goto	u3365
  4135  1B71  0870               	movf	___lwmod@divisor,w
  4136  1B72  0272               	subwf	___lwmod@dividend,w
  4137  1B73                     u3365:
  4138  1B73  1C03               	skipc
  4139  1B74  2B76               	goto	u3361
  4140  1B75  2B77               	goto	u3360
  4141  1B76                     u3361:
  4142  1B76  2B7D               	goto	l2559
  4143  1B77                     u3360:
  4144  1B77                     l2557:
  4145  1B77  0870               	movf	___lwmod@divisor,w
  4146  1B78  02F2               	subwf	___lwmod@dividend,f
  4147  1B79  0871               	movf	___lwmod@divisor+1,w
  4148  1B7A  1C03               	skipc
  4149  1B7B  03F3               	decf	___lwmod@dividend+1,f
  4150  1B7C  02F3               	subwf	___lwmod@dividend+1,f
  4151  1B7D                     l2559:
  4152  1B7D  3001               	movlw	1
  4153  1B7E                     u3375:
  4154  1B7E  1003               	clrc
  4155  1B7F  0CF1               	rrf	___lwmod@divisor+1,f
  4156  1B80  0CF0               	rrf	___lwmod@divisor,f
  4157  1B81  3EFF               	addlw	-1
  4158  1B82  1D03               	skipz
  4159  1B83  2B7E               	goto	u3375
  4160  1B84                     l2561:
  4161  1B84  3001               	movlw	1
  4162  1B85  02F5               	subwf	___lwmod@counter,f
  4163  1B86  1D03               	btfss	3,2
  4164  1B87  2B89               	goto	u3381
  4165  1B88  2B8A               	goto	u3380
  4166  1B89                     u3381:
  4167  1B89  2B6D               	goto	l2555
  4168  1B8A                     u3380:
  4169  1B8A                     l2563:
  4170  1B8A  0873               	movf	___lwmod@dividend+1,w
  4171  1B8B  00F1               	movwf	?___lwmod+1
  4172  1B8C  0872               	movf	___lwmod@dividend,w
  4173  1B8D  00F0               	movwf	?___lwmod
  4174  1B8E                     l732:
  4175  1B8E  0008               	return
  4176  1B8F                     __end_of___lwmod:
  4177                           
  4178                           	psect	text8
  4179  1C0F                     __ptext8:	
  4180 ;; *************** function ___lwdiv *****************
  4181 ;; Defined at:
  4182 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4183 ;; Parameters:    Size  Location     Type
  4184 ;;  divisor         2    6[COMMON] unsigned int 
  4185 ;;  dividend        2    8[COMMON] unsigned int 
  4186 ;; Auto vars:     Size  Location     Type
  4187 ;;  quotient        2   11[COMMON] unsigned int 
  4188 ;;  counter         1   13[COMMON] unsigned char 
  4189 ;; Return value:  Size  Location     Type
  4190 ;;                  2    6[COMMON] unsigned int 
  4191 ;; Registers used:
  4192 ;;		wreg, status,2, status,0
  4193 ;; Tracked objects:
  4194 ;;		On entry : 0/0
  4195 ;;		On exit  : 0/0
  4196 ;;		Unchanged: 0/0
  4197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4198 ;;      Params:         4       0       0       0       0
  4199 ;;      Locals:         3       0       0       0       0
  4200 ;;      Temps:          1       0       0       0       0
  4201 ;;      Totals:         8       0       0       0       0
  4202 ;;Total ram usage:        8 bytes
  4203 ;; Hardware stack levels used:    1
  4204 ;; This function calls:
  4205 ;;		Nothing
  4206 ;; This function is called by:
  4207 ;;		_fround
  4208 ;; This function uses a non-reentrant model
  4209 ;;
  4210                           
  4211                           
  4212                           ;psect for function ___lwdiv
  4213  1C0F                     ___lwdiv:
  4214  1C0F                     l2519:	
  4215                           ;incstack = 0
  4216                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4217                           
  4218  1C0F  01FB               	clrf	___lwdiv@quotient
  4219  1C10  01FC               	clrf	___lwdiv@quotient+1
  4220  1C11                     l2521:
  4221  1C11  0876               	movf	___lwdiv@divisor,w
  4222  1C12  0477               	iorwf	___lwdiv@divisor+1,w
  4223  1C13  1903               	btfsc	3,2
  4224  1C14  2C16               	goto	u3261
  4225  1C15  2C17               	goto	u3260
  4226  1C16                     u3261:
  4227  1C16  2C4E               	goto	l2541
  4228  1C17                     u3260:
  4229  1C17                     l2523:
  4230  1C17  01FD               	clrf	___lwdiv@counter
  4231  1C18  0AFD               	incf	___lwdiv@counter,f
  4232  1C19  2C25               	goto	l2529
  4233  1C1A                     l2525:
  4234  1C1A  3001               	movlw	1
  4235  1C1B                     u3275:
  4236  1C1B  1003               	clrc
  4237  1C1C  0DF6               	rlf	___lwdiv@divisor,f
  4238  1C1D  0DF7               	rlf	___lwdiv@divisor+1,f
  4239  1C1E  3EFF               	addlw	-1
  4240  1C1F  1D03               	skipz
  4241  1C20  2C1B               	goto	u3275
  4242  1C21                     l2527:
  4243  1C21  3001               	movlw	1
  4244  1C22  00FA               	movwf	??___lwdiv
  4245  1C23  087A               	movf	??___lwdiv,w
  4246  1C24  07FD               	addwf	___lwdiv@counter,f
  4247  1C25                     l2529:
  4248  1C25  1FF7               	btfss	___lwdiv@divisor+1,7
  4249  1C26  2C28               	goto	u3281
  4250  1C27  2C29               	goto	u3280
  4251  1C28                     u3281:
  4252  1C28  2C1A               	goto	l2525
  4253  1C29                     u3280:
  4254  1C29                     l2531:
  4255  1C29  3001               	movlw	1
  4256  1C2A                     u3295:
  4257  1C2A  1003               	clrc
  4258  1C2B  0DFB               	rlf	___lwdiv@quotient,f
  4259  1C2C  0DFC               	rlf	___lwdiv@quotient+1,f
  4260  1C2D  3EFF               	addlw	-1
  4261  1C2E  1D03               	skipz
  4262  1C2F  2C2A               	goto	u3295
  4263  1C30  0877               	movf	___lwdiv@divisor+1,w
  4264  1C31  0279               	subwf	___lwdiv@dividend+1,w
  4265  1C32  1D03               	skipz
  4266  1C33  2C36               	goto	u3305
  4267  1C34  0876               	movf	___lwdiv@divisor,w
  4268  1C35  0278               	subwf	___lwdiv@dividend,w
  4269  1C36                     u3305:
  4270  1C36  1C03               	skipc
  4271  1C37  2C39               	goto	u3301
  4272  1C38  2C3A               	goto	u3300
  4273  1C39                     u3301:
  4274  1C39  2C41               	goto	l2537
  4275  1C3A                     u3300:
  4276  1C3A                     l2533:
  4277  1C3A  0876               	movf	___lwdiv@divisor,w
  4278  1C3B  02F8               	subwf	___lwdiv@dividend,f
  4279  1C3C  0877               	movf	___lwdiv@divisor+1,w
  4280  1C3D  1C03               	skipc
  4281  1C3E  03F9               	decf	___lwdiv@dividend+1,f
  4282  1C3F  02F9               	subwf	___lwdiv@dividend+1,f
  4283  1C40                     l2535:
  4284  1C40  147B               	bsf	___lwdiv@quotient,0
  4285  1C41                     l2537:
  4286  1C41  3001               	movlw	1
  4287  1C42                     u3315:
  4288  1C42  1003               	clrc
  4289  1C43  0CF7               	rrf	___lwdiv@divisor+1,f
  4290  1C44  0CF6               	rrf	___lwdiv@divisor,f
  4291  1C45  3EFF               	addlw	-1
  4292  1C46  1D03               	skipz
  4293  1C47  2C42               	goto	u3315
  4294  1C48                     l2539:
  4295  1C48  3001               	movlw	1
  4296  1C49  02FD               	subwf	___lwdiv@counter,f
  4297  1C4A  1D03               	btfss	3,2
  4298  1C4B  2C4D               	goto	u3321
  4299  1C4C  2C4E               	goto	u3320
  4300  1C4D                     u3321:
  4301  1C4D  2C29               	goto	l2531
  4302  1C4E                     u3320:
  4303  1C4E                     l2541:
  4304  1C4E  087C               	movf	___lwdiv@quotient+1,w
  4305  1C4F  00F7               	movwf	?___lwdiv+1
  4306  1C50  087B               	movf	___lwdiv@quotient,w
  4307  1C51  00F6               	movwf	?___lwdiv
  4308  1C52                     l722:
  4309  1C52  0008               	return
  4310  1C53                     __end_of___lwdiv:
  4311                           
  4312                           	psect	text9
  4313  0C9F                     __ptext9:	
  4314 ;; *************** function ___flmul *****************
  4315 ;; Defined at:
  4316 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  4317 ;; Parameters:    Size  Location     Type
  4318 ;;  b               4    4[BANK0 ] unsigned int 
  4319 ;;  a               4    8[BANK0 ] unsigned int 
  4320 ;; Auto vars:     Size  Location     Type
  4321 ;;  prod            4   24[BANK0 ] struct .
  4322 ;;  grs             4   18[BANK0 ] unsigned long 
  4323 ;;  temp            2   28[BANK0 ] struct .
  4324 ;;  bexp            1   23[BANK0 ] unsigned char 
  4325 ;;  aexp            1   22[BANK0 ] unsigned char 
  4326 ;;  sign            1   17[BANK0 ] unsigned char 
  4327 ;; Return value:  Size  Location     Type
  4328 ;;                  4    4[BANK0 ] unsigned char 
  4329 ;; Registers used:
  4330 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4331 ;; Tracked objects:
  4332 ;;		On entry : 0/0
  4333 ;;		On exit  : 0/0
  4334 ;;		Unchanged: 0/0
  4335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4336 ;;      Params:         0       8       0       0       0
  4337 ;;      Locals:         0      13       0       0       0
  4338 ;;      Temps:          0       5       0       0       0
  4339 ;;      Totals:         0      26       0       0       0
  4340 ;;Total ram usage:       26 bytes
  4341 ;; Hardware stack levels used:    1
  4342 ;; Hardware stack levels required when called:    1
  4343 ;; This function calls:
  4344 ;;		__Umul8_16
  4345 ;; This function is called by:
  4346 ;;		_fround
  4347 ;;		_scale
  4348 ;;		_sprintf
  4349 ;; This function uses a non-reentrant model
  4350 ;;
  4351                           
  4352                           
  4353                           ;psect for function ___flmul
  4354  0C9F                     ___flmul:
  4355  0C9F                     l2761:	
  4356                           ;incstack = 0
  4357                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4358                           
  4359  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  4360  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  4361  0CA1  0827               	movf	___flmul@b+3,w
  4362  0CA2  3980               	andlw	128
  4363  0CA3  00AC               	movwf	??___flmul
  4364  0CA4  082C               	movf	??___flmul,w
  4365  0CA5  00B1               	movwf	___flmul@sign
  4366  0CA6                     l2763:
  4367  0CA6  0827               	movf	___flmul@b+3,w
  4368  0CA7  00AC               	movwf	??___flmul
  4369  0CA8  072C               	addwf	??___flmul,w
  4370  0CA9  00AD               	movwf	??___flmul+1
  4371  0CAA  082D               	movf	??___flmul+1,w
  4372  0CAB  00B7               	movwf	___flmul@bexp
  4373  0CAC                     l2765:
  4374  0CAC  1FA6               	btfss	___flmul@b+2,7
  4375  0CAD  2CAF               	goto	u3851
  4376  0CAE  2CB0               	goto	u3850
  4377  0CAF                     u3851:
  4378  0CAF  2CB1               	goto	l2769
  4379  0CB0                     u3850:
  4380  0CB0                     l2767:
  4381  0CB0  1437               	bsf	___flmul@bexp,0
  4382  0CB1                     l2769:
  4383  0CB1  0837               	movf	___flmul@bexp,w
  4384  0CB2  1903               	btfsc	3,2
  4385  0CB3  2CB5               	goto	u3861
  4386  0CB4  2CB6               	goto	u3860
  4387  0CB5                     u3861:
  4388  0CB5  2CC5               	goto	l2777
  4389  0CB6                     u3860:
  4390  0CB6                     l2771:
  4391  0CB6  0A37               	incf	___flmul@bexp,w
  4392  0CB7  1D03               	btfss	3,2
  4393  0CB8  2CBA               	goto	u3871
  4394  0CB9  2CBB               	goto	u3870
  4395  0CBA                     u3871:
  4396  0CBA  2CC3               	goto	l2775
  4397  0CBB                     u3870:
  4398  0CBB                     l2773:
  4399  0CBB  3000               	movlw	0
  4400  0CBC  00A7               	movwf	___flmul@b+3
  4401  0CBD  3000               	movlw	0
  4402  0CBE  00A6               	movwf	___flmul@b+2
  4403  0CBF  3000               	movlw	0
  4404  0CC0  00A5               	movwf	___flmul@b+1
  4405  0CC1  3000               	movlw	0
  4406  0CC2  00A4               	movwf	___flmul@b
  4407  0CC3                     l2775:
  4408  0CC3  17A6               	bsf	___flmul@b+2,7
  4409  0CC4  2CCD               	goto	l2779
  4410  0CC5                     l2777:
  4411  0CC5  3000               	movlw	0
  4412  0CC6  00A7               	movwf	___flmul@b+3
  4413  0CC7  3000               	movlw	0
  4414  0CC8  00A6               	movwf	___flmul@b+2
  4415  0CC9  3000               	movlw	0
  4416  0CCA  00A5               	movwf	___flmul@b+1
  4417  0CCB  3000               	movlw	0
  4418  0CCC  00A4               	movwf	___flmul@b
  4419  0CCD                     l2779:
  4420  0CCD  082B               	movf	___flmul@a+3,w
  4421  0CCE  3980               	andlw	128
  4422  0CCF  00AC               	movwf	??___flmul
  4423  0CD0  082C               	movf	??___flmul,w
  4424  0CD1  06B1               	xorwf	___flmul@sign,f
  4425  0CD2                     l2781:
  4426  0CD2  082B               	movf	___flmul@a+3,w
  4427  0CD3  00AC               	movwf	??___flmul
  4428  0CD4  072C               	addwf	??___flmul,w
  4429  0CD5  00AD               	movwf	??___flmul+1
  4430  0CD6  082D               	movf	??___flmul+1,w
  4431  0CD7  00B6               	movwf	___flmul@aexp
  4432  0CD8                     l2783:
  4433  0CD8  1FAA               	btfss	___flmul@a+2,7
  4434  0CD9  2CDB               	goto	u3881
  4435  0CDA  2CDC               	goto	u3880
  4436  0CDB                     u3881:
  4437  0CDB  2CDD               	goto	l2787
  4438  0CDC                     u3880:
  4439  0CDC                     l2785:
  4440  0CDC  1436               	bsf	___flmul@aexp,0
  4441  0CDD                     l2787:
  4442  0CDD  0836               	movf	___flmul@aexp,w
  4443  0CDE  1903               	btfsc	3,2
  4444  0CDF  2CE1               	goto	u3891
  4445  0CE0  2CE2               	goto	u3890
  4446  0CE1                     u3891:
  4447  0CE1  2CF1               	goto	l2795
  4448  0CE2                     u3890:
  4449  0CE2                     l2789:
  4450  0CE2  0A36               	incf	___flmul@aexp,w
  4451  0CE3  1D03               	btfss	3,2
  4452  0CE4  2CE6               	goto	u3901
  4453  0CE5  2CE7               	goto	u3900
  4454  0CE6                     u3901:
  4455  0CE6  2CEF               	goto	l2793
  4456  0CE7                     u3900:
  4457  0CE7                     l2791:
  4458  0CE7  3000               	movlw	0
  4459  0CE8  00AB               	movwf	___flmul@a+3
  4460  0CE9  3000               	movlw	0
  4461  0CEA  00AA               	movwf	___flmul@a+2
  4462  0CEB  3000               	movlw	0
  4463  0CEC  00A9               	movwf	___flmul@a+1
  4464  0CED  3000               	movlw	0
  4465  0CEE  00A8               	movwf	___flmul@a
  4466  0CEF                     l2793:
  4467  0CEF  17AA               	bsf	___flmul@a+2,7
  4468  0CF0  2CF9               	goto	l2797
  4469  0CF1                     l2795:
  4470  0CF1  3000               	movlw	0
  4471  0CF2  00AB               	movwf	___flmul@a+3
  4472  0CF3  3000               	movlw	0
  4473  0CF4  00AA               	movwf	___flmul@a+2
  4474  0CF5  3000               	movlw	0
  4475  0CF6  00A9               	movwf	___flmul@a+1
  4476  0CF7  3000               	movlw	0
  4477  0CF8  00A8               	movwf	___flmul@a
  4478  0CF9                     l2797:
  4479  0CF9  0836               	movf	___flmul@aexp,w
  4480  0CFA  1903               	btfsc	3,2
  4481  0CFB  2CFD               	goto	u3911
  4482  0CFC  2CFE               	goto	u3910
  4483  0CFD                     u3911:
  4484  0CFD  2D03               	goto	l2801
  4485  0CFE                     u3910:
  4486  0CFE                     l2799:
  4487  0CFE  0837               	movf	___flmul@bexp,w
  4488  0CFF  1D03               	btfss	3,2
  4489  0D00  2D02               	goto	u3921
  4490  0D01  2D03               	goto	u3920
  4491  0D02                     u3921:
  4492  0D02  2D0C               	goto	l2805
  4493  0D03                     u3920:
  4494  0D03                     l2801:
  4495  0D03  3000               	movlw	0
  4496  0D04  00A7               	movwf	?___flmul+3
  4497  0D05  3000               	movlw	0
  4498  0D06  00A6               	movwf	?___flmul+2
  4499  0D07  3000               	movlw	0
  4500  0D08  00A5               	movwf	?___flmul+1
  4501  0D09  3000               	movlw	0
  4502  0D0A  00A4               	movwf	?___flmul
  4503  0D0B  2FFF               	goto	l839
  4504  0D0C                     l2805:
  4505  0D0C  0824               	movf	___flmul@b,w
  4506  0D0D  00AC               	movwf	??___flmul
  4507  0D0E  082C               	movf	??___flmul,w
  4508  0D0F  00F0               	movwf	__Umul8_16@multiplicand
  4509  0D10  082A               	movf	___flmul@a+2,w
  4510  0D11  160A  158A  227D  120A  158A  	fcall	__Umul8_16
  4511  0D16  0871               	movf	?__Umul8_16+1,w
  4512  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  4513  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  4514  0D19  00BD               	movwf	___flmul@temp+1
  4515  0D1A  0870               	movf	?__Umul8_16,w
  4516  0D1B  00BC               	movwf	___flmul@temp
  4517  0D1C                     l2807:
  4518  0D1C  083C               	movf	___flmul@temp,w
  4519  0D1D  00AC               	movwf	??___flmul
  4520  0D1E  01AD               	clrf	??___flmul+1
  4521  0D1F  01AE               	clrf	??___flmul+2
  4522  0D20  01AF               	clrf	??___flmul+3
  4523  0D21  082F               	movf	??___flmul+3,w
  4524  0D22  00B5               	movwf	___flmul@grs+3
  4525  0D23  082E               	movf	??___flmul+2,w
  4526  0D24  00B4               	movwf	___flmul@grs+2
  4527  0D25  082D               	movf	??___flmul+1,w
  4528  0D26  00B3               	movwf	___flmul@grs+1
  4529  0D27  082C               	movf	??___flmul,w
  4530  0D28  00B2               	movwf	___flmul@grs
  4531  0D29                     l2809:
  4532  0D29  083D               	movf	___flmul@temp+1,w
  4533  0D2A  00AC               	movwf	??___flmul
  4534  0D2B  01AD               	clrf	??___flmul+1
  4535  0D2C  01AE               	clrf	??___flmul+2
  4536  0D2D  01AF               	clrf	??___flmul+3
  4537  0D2E  082F               	movf	??___flmul+3,w
  4538  0D2F  00BB               	movwf	___flmul@prod+3
  4539  0D30  082E               	movf	??___flmul+2,w
  4540  0D31  00BA               	movwf	___flmul@prod+2
  4541  0D32  082D               	movf	??___flmul+1,w
  4542  0D33  00B9               	movwf	___flmul@prod+1
  4543  0D34  082C               	movf	??___flmul,w
  4544  0D35  00B8               	movwf	___flmul@prod
  4545  0D36  0825               	movf	___flmul@b+1,w
  4546  0D37  00AC               	movwf	??___flmul
  4547  0D38  082C               	movf	??___flmul,w
  4548  0D39  00F0               	movwf	__Umul8_16@multiplicand
  4549  0D3A  0829               	movf	___flmul@a+1,w
  4550  0D3B  160A  158A  227D  120A  158A  	fcall	__Umul8_16
  4551  0D40  0871               	movf	?__Umul8_16+1,w
  4552  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  4553  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  4554  0D43  00BD               	movwf	___flmul@temp+1
  4555  0D44  0870               	movf	?__Umul8_16,w
  4556  0D45  00BC               	movwf	___flmul@temp
  4557  0D46                     l2811:
  4558  0D46  083C               	movf	___flmul@temp,w
  4559  0D47  00AC               	movwf	??___flmul
  4560  0D48  01AD               	clrf	??___flmul+1
  4561  0D49  01AE               	clrf	??___flmul+2
  4562  0D4A  01AF               	clrf	??___flmul+3
  4563  0D4B  082C               	movf	??___flmul,w
  4564  0D4C  07B2               	addwf	___flmul@grs,f
  4565  0D4D  082D               	movf	??___flmul+1,w
  4566  0D4E  1103               	clrz
  4567  0D4F  1803               	skipnc
  4568  0D50  3E01               	addlw	1
  4569  0D51  1903               	skipnz
  4570  0D52  2D54               	goto	u3931
  4571  0D53  07B3               	addwf	___flmul@grs+1,f
  4572  0D54                     u3931:
  4573  0D54  082E               	movf	??___flmul+2,w
  4574  0D55  1103               	clrz
  4575  0D56  1803               	skipnc
  4576  0D57  3E01               	addlw	1
  4577  0D58  1903               	skipnz
  4578  0D59  2D5B               	goto	u3932
  4579  0D5A  07B4               	addwf	___flmul@grs+2,f
  4580  0D5B                     u3932:
  4581  0D5B  082F               	movf	??___flmul+3,w
  4582  0D5C  1103               	clrz
  4583  0D5D  1803               	skipnc
  4584  0D5E  3E01               	addlw	1
  4585  0D5F  1903               	skipnz
  4586  0D60  2D62               	goto	u3933
  4587  0D61  07B5               	addwf	___flmul@grs+3,f
  4588  0D62                     u3933:
  4589  0D62                     l2813:
  4590  0D62  083D               	movf	___flmul@temp+1,w
  4591  0D63  00AC               	movwf	??___flmul
  4592  0D64  01AD               	clrf	??___flmul+1
  4593  0D65  01AE               	clrf	??___flmul+2
  4594  0D66  01AF               	clrf	??___flmul+3
  4595  0D67  082C               	movf	??___flmul,w
  4596  0D68  07B8               	addwf	___flmul@prod,f
  4597  0D69  082D               	movf	??___flmul+1,w
  4598  0D6A  1103               	clrz
  4599  0D6B  1803               	skipnc
  4600  0D6C  3E01               	addlw	1
  4601  0D6D  1903               	skipnz
  4602  0D6E  2D70               	goto	u3941
  4603  0D6F  07B9               	addwf	___flmul@prod+1,f
  4604  0D70                     u3941:
  4605  0D70  082E               	movf	??___flmul+2,w
  4606  0D71  1103               	clrz
  4607  0D72  1803               	skipnc
  4608  0D73  3E01               	addlw	1
  4609  0D74  1903               	skipnz
  4610  0D75  2D77               	goto	u3942
  4611  0D76  07BA               	addwf	___flmul@prod+2,f
  4612  0D77                     u3942:
  4613  0D77  082F               	movf	??___flmul+3,w
  4614  0D78  1103               	clrz
  4615  0D79  1803               	skipnc
  4616  0D7A  3E01               	addlw	1
  4617  0D7B  1903               	skipnz
  4618  0D7C  2D7E               	goto	u3943
  4619  0D7D  07BB               	addwf	___flmul@prod+3,f
  4620  0D7E                     u3943:
  4621  0D7E  0826               	movf	___flmul@b+2,w
  4622  0D7F  00AC               	movwf	??___flmul
  4623  0D80  082C               	movf	??___flmul,w
  4624  0D81  00F0               	movwf	__Umul8_16@multiplicand
  4625  0D82  0828               	movf	___flmul@a,w
  4626  0D83  160A  158A  227D  120A  158A  	fcall	__Umul8_16
  4627  0D88  0871               	movf	?__Umul8_16+1,w
  4628  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  4629  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  4630  0D8B  00BD               	movwf	___flmul@temp+1
  4631  0D8C  0870               	movf	?__Umul8_16,w
  4632  0D8D  00BC               	movwf	___flmul@temp
  4633  0D8E                     l2815:
  4634  0D8E  083C               	movf	___flmul@temp,w
  4635  0D8F  00AC               	movwf	??___flmul
  4636  0D90  01AD               	clrf	??___flmul+1
  4637  0D91  01AE               	clrf	??___flmul+2
  4638  0D92  01AF               	clrf	??___flmul+3
  4639  0D93  082C               	movf	??___flmul,w
  4640  0D94  07B2               	addwf	___flmul@grs,f
  4641  0D95  082D               	movf	??___flmul+1,w
  4642  0D96  1103               	clrz
  4643  0D97  1803               	skipnc
  4644  0D98  3E01               	addlw	1
  4645  0D99  1903               	skipnz
  4646  0D9A  2D9C               	goto	u3951
  4647  0D9B  07B3               	addwf	___flmul@grs+1,f
  4648  0D9C                     u3951:
  4649  0D9C  082E               	movf	??___flmul+2,w
  4650  0D9D  1103               	clrz
  4651  0D9E  1803               	skipnc
  4652  0D9F  3E01               	addlw	1
  4653  0DA0  1903               	skipnz
  4654  0DA1  2DA3               	goto	u3952
  4655  0DA2  07B4               	addwf	___flmul@grs+2,f
  4656  0DA3                     u3952:
  4657  0DA3  082F               	movf	??___flmul+3,w
  4658  0DA4  1103               	clrz
  4659  0DA5  1803               	skipnc
  4660  0DA6  3E01               	addlw	1
  4661  0DA7  1903               	skipnz
  4662  0DA8  2DAA               	goto	u3953
  4663  0DA9  07B5               	addwf	___flmul@grs+3,f
  4664  0DAA                     u3953:
  4665  0DAA                     l2817:
  4666  0DAA  083D               	movf	___flmul@temp+1,w
  4667  0DAB  00AC               	movwf	??___flmul
  4668  0DAC  01AD               	clrf	??___flmul+1
  4669  0DAD  01AE               	clrf	??___flmul+2
  4670  0DAE  01AF               	clrf	??___flmul+3
  4671  0DAF  082C               	movf	??___flmul,w
  4672  0DB0  07B8               	addwf	___flmul@prod,f
  4673  0DB1  082D               	movf	??___flmul+1,w
  4674  0DB2  1103               	clrz
  4675  0DB3  1803               	skipnc
  4676  0DB4  3E01               	addlw	1
  4677  0DB5  1903               	skipnz
  4678  0DB6  2DB8               	goto	u3961
  4679  0DB7  07B9               	addwf	___flmul@prod+1,f
  4680  0DB8                     u3961:
  4681  0DB8  082E               	movf	??___flmul+2,w
  4682  0DB9  1103               	clrz
  4683  0DBA  1803               	skipnc
  4684  0DBB  3E01               	addlw	1
  4685  0DBC  1903               	skipnz
  4686  0DBD  2DBF               	goto	u3962
  4687  0DBE  07BA               	addwf	___flmul@prod+2,f
  4688  0DBF                     u3962:
  4689  0DBF  082F               	movf	??___flmul+3,w
  4690  0DC0  1103               	clrz
  4691  0DC1  1803               	skipnc
  4692  0DC2  3E01               	addlw	1
  4693  0DC3  1903               	skipnz
  4694  0DC4  2DC6               	goto	u3963
  4695  0DC5  07BB               	addwf	___flmul@prod+3,f
  4696  0DC6                     u3963:
  4697  0DC6                     l2819:
  4698  0DC6  3008               	movlw	8
  4699  0DC7  00AC               	movwf	??___flmul
  4700  0DC8                     u3975:
  4701  0DC8  1003               	clrc
  4702  0DC9  0DB2               	rlf	___flmul@grs,f
  4703  0DCA  0DB3               	rlf	___flmul@grs+1,f
  4704  0DCB  0DB4               	rlf	___flmul@grs+2,f
  4705  0DCC  0DB5               	rlf	___flmul@grs+3,f
  4706  0DCD  0BAC               	decfsz	??___flmul,f
  4707  0DCE  2DC8               	goto	u3975
  4708  0DCF                     l2821:
  4709  0DCF  0825               	movf	___flmul@b+1,w
  4710  0DD0  00AC               	movwf	??___flmul
  4711  0DD1  082C               	movf	??___flmul,w
  4712  0DD2  00F0               	movwf	__Umul8_16@multiplicand
  4713  0DD3  0828               	movf	___flmul@a,w
  4714  0DD4  160A  158A  227D  120A  158A  	fcall	__Umul8_16
  4715  0DD9  0871               	movf	?__Umul8_16+1,w
  4716  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  4717  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  4718  0DDC  00BD               	movwf	___flmul@temp+1
  4719  0DDD  0870               	movf	?__Umul8_16,w
  4720  0DDE  00BC               	movwf	___flmul@temp
  4721  0DDF                     l2823:
  4722  0DDF  083C               	movf	___flmul@temp,w
  4723  0DE0  00AC               	movwf	??___flmul
  4724  0DE1  083D               	movf	___flmul@temp+1,w
  4725  0DE2  00AD               	movwf	??___flmul+1
  4726  0DE3  01AE               	clrf	??___flmul+2
  4727  0DE4  01AF               	clrf	??___flmul+3
  4728  0DE5  082C               	movf	??___flmul,w
  4729  0DE6  07B2               	addwf	___flmul@grs,f
  4730  0DE7  082D               	movf	??___flmul+1,w
  4731  0DE8  1103               	clrz
  4732  0DE9  1803               	skipnc
  4733  0DEA  3E01               	addlw	1
  4734  0DEB  1903               	skipnz
  4735  0DEC  2DEE               	goto	u3981
  4736  0DED  07B3               	addwf	___flmul@grs+1,f
  4737  0DEE                     u3981:
  4738  0DEE  082E               	movf	??___flmul+2,w
  4739  0DEF  1103               	clrz
  4740  0DF0  1803               	skipnc
  4741  0DF1  3E01               	addlw	1
  4742  0DF2  1903               	skipnz
  4743  0DF3  2DF5               	goto	u3982
  4744  0DF4  07B4               	addwf	___flmul@grs+2,f
  4745  0DF5                     u3982:
  4746  0DF5  082F               	movf	??___flmul+3,w
  4747  0DF6  1103               	clrz
  4748  0DF7  1803               	skipnc
  4749  0DF8  3E01               	addlw	1
  4750  0DF9  1903               	skipnz
  4751  0DFA  2DFC               	goto	u3983
  4752  0DFB  07B5               	addwf	___flmul@grs+3,f
  4753  0DFC                     u3983:
  4754  0DFC                     l2825:
  4755  0DFC  0824               	movf	___flmul@b,w
  4756  0DFD  00AC               	movwf	??___flmul
  4757  0DFE  082C               	movf	??___flmul,w
  4758  0DFF  00F0               	movwf	__Umul8_16@multiplicand
  4759  0E00  0829               	movf	___flmul@a+1,w
  4760  0E01  160A  158A  227D  120A  158A  	fcall	__Umul8_16
  4761  0E06  0871               	movf	?__Umul8_16+1,w
  4762  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  4763  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  4764  0E09  00BD               	movwf	___flmul@temp+1
  4765  0E0A  0870               	movf	?__Umul8_16,w
  4766  0E0B  00BC               	movwf	___flmul@temp
  4767  0E0C                     l2827:
  4768  0E0C  083C               	movf	___flmul@temp,w
  4769  0E0D  00AC               	movwf	??___flmul
  4770  0E0E  083D               	movf	___flmul@temp+1,w
  4771  0E0F  00AD               	movwf	??___flmul+1
  4772  0E10  01AE               	clrf	??___flmul+2
  4773  0E11  01AF               	clrf	??___flmul+3
  4774  0E12  082C               	movf	??___flmul,w
  4775  0E13  07B2               	addwf	___flmul@grs,f
  4776  0E14  082D               	movf	??___flmul+1,w
  4777  0E15  1103               	clrz
  4778  0E16  1803               	skipnc
  4779  0E17  3E01               	addlw	1
  4780  0E18  1903               	skipnz
  4781  0E19  2E1B               	goto	u3991
  4782  0E1A  07B3               	addwf	___flmul@grs+1,f
  4783  0E1B                     u3991:
  4784  0E1B  082E               	movf	??___flmul+2,w
  4785  0E1C  1103               	clrz
  4786  0E1D  1803               	skipnc
  4787  0E1E  3E01               	addlw	1
  4788  0E1F  1903               	skipnz
  4789  0E20  2E22               	goto	u3992
  4790  0E21  07B4               	addwf	___flmul@grs+2,f
  4791  0E22                     u3992:
  4792  0E22  082F               	movf	??___flmul+3,w
  4793  0E23  1103               	clrz
  4794  0E24  1803               	skipnc
  4795  0E25  3E01               	addlw	1
  4796  0E26  1903               	skipnz
  4797  0E27  2E29               	goto	u3993
  4798  0E28  07B5               	addwf	___flmul@grs+3,f
  4799  0E29                     u3993:
  4800  0E29                     l2829:
  4801  0E29  3008               	movlw	8
  4802  0E2A  00AC               	movwf	??___flmul
  4803  0E2B                     u4005:
  4804  0E2B  1003               	clrc
  4805  0E2C  0DB2               	rlf	___flmul@grs,f
  4806  0E2D  0DB3               	rlf	___flmul@grs+1,f
  4807  0E2E  0DB4               	rlf	___flmul@grs+2,f
  4808  0E2F  0DB5               	rlf	___flmul@grs+3,f
  4809  0E30  0BAC               	decfsz	??___flmul,f
  4810  0E31  2E2B               	goto	u4005
  4811  0E32  0824               	movf	___flmul@b,w
  4812  0E33  00AC               	movwf	??___flmul
  4813  0E34  082C               	movf	??___flmul,w
  4814  0E35  00F0               	movwf	__Umul8_16@multiplicand
  4815  0E36  0828               	movf	___flmul@a,w
  4816  0E37  160A  158A  227D  120A  158A  	fcall	__Umul8_16
  4817  0E3C  0871               	movf	?__Umul8_16+1,w
  4818  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  4819  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  4820  0E3F  00BD               	movwf	___flmul@temp+1
  4821  0E40  0870               	movf	?__Umul8_16,w
  4822  0E41  00BC               	movwf	___flmul@temp
  4823  0E42                     l2831:
  4824  0E42  083C               	movf	___flmul@temp,w
  4825  0E43  00AC               	movwf	??___flmul
  4826  0E44  083D               	movf	___flmul@temp+1,w
  4827  0E45  00AD               	movwf	??___flmul+1
  4828  0E46  01AE               	clrf	??___flmul+2
  4829  0E47  01AF               	clrf	??___flmul+3
  4830  0E48  082C               	movf	??___flmul,w
  4831  0E49  07B2               	addwf	___flmul@grs,f
  4832  0E4A  082D               	movf	??___flmul+1,w
  4833  0E4B  1103               	clrz
  4834  0E4C  1803               	skipnc
  4835  0E4D  3E01               	addlw	1
  4836  0E4E  1903               	skipnz
  4837  0E4F  2E51               	goto	u4011
  4838  0E50  07B3               	addwf	___flmul@grs+1,f
  4839  0E51                     u4011:
  4840  0E51  082E               	movf	??___flmul+2,w
  4841  0E52  1103               	clrz
  4842  0E53  1803               	skipnc
  4843  0E54  3E01               	addlw	1
  4844  0E55  1903               	skipnz
  4845  0E56  2E58               	goto	u4012
  4846  0E57  07B4               	addwf	___flmul@grs+2,f
  4847  0E58                     u4012:
  4848  0E58  082F               	movf	??___flmul+3,w
  4849  0E59  1103               	clrz
  4850  0E5A  1803               	skipnc
  4851  0E5B  3E01               	addlw	1
  4852  0E5C  1903               	skipnz
  4853  0E5D  2E5F               	goto	u4013
  4854  0E5E  07B5               	addwf	___flmul@grs+3,f
  4855  0E5F                     u4013:
  4856  0E5F                     l2833:
  4857  0E5F  0825               	movf	___flmul@b+1,w
  4858  0E60  00AC               	movwf	??___flmul
  4859  0E61  082C               	movf	??___flmul,w
  4860  0E62  00F0               	movwf	__Umul8_16@multiplicand
  4861  0E63  082A               	movf	___flmul@a+2,w
  4862  0E64  160A  158A  227D  120A  158A  	fcall	__Umul8_16
  4863  0E69  0871               	movf	?__Umul8_16+1,w
  4864  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  4865  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  4866  0E6C  00BD               	movwf	___flmul@temp+1
  4867  0E6D  0870               	movf	?__Umul8_16,w
  4868  0E6E  00BC               	movwf	___flmul@temp
  4869  0E6F  083C               	movf	___flmul@temp,w
  4870  0E70  00AC               	movwf	??___flmul
  4871  0E71  083D               	movf	___flmul@temp+1,w
  4872  0E72  00AD               	movwf	??___flmul+1
  4873  0E73  01AE               	clrf	??___flmul+2
  4874  0E74  01AF               	clrf	??___flmul+3
  4875  0E75  082C               	movf	??___flmul,w
  4876  0E76  07B8               	addwf	___flmul@prod,f
  4877  0E77  082D               	movf	??___flmul+1,w
  4878  0E78  1103               	clrz
  4879  0E79  1803               	skipnc
  4880  0E7A  3E01               	addlw	1
  4881  0E7B  1903               	skipnz
  4882  0E7C  2E7E               	goto	u4021
  4883  0E7D  07B9               	addwf	___flmul@prod+1,f
  4884  0E7E                     u4021:
  4885  0E7E  082E               	movf	??___flmul+2,w
  4886  0E7F  1103               	clrz
  4887  0E80  1803               	skipnc
  4888  0E81  3E01               	addlw	1
  4889  0E82  1903               	skipnz
  4890  0E83  2E85               	goto	u4022
  4891  0E84  07BA               	addwf	___flmul@prod+2,f
  4892  0E85                     u4022:
  4893  0E85  082F               	movf	??___flmul+3,w
  4894  0E86  1103               	clrz
  4895  0E87  1803               	skipnc
  4896  0E88  3E01               	addlw	1
  4897  0E89  1903               	skipnz
  4898  0E8A  2E8C               	goto	u4023
  4899  0E8B  07BB               	addwf	___flmul@prod+3,f
  4900  0E8C                     u4023:
  4901  0E8C                     l2835:
  4902  0E8C  0826               	movf	___flmul@b+2,w
  4903  0E8D  00AC               	movwf	??___flmul
  4904  0E8E  082C               	movf	??___flmul,w
  4905  0E8F  00F0               	movwf	__Umul8_16@multiplicand
  4906  0E90  0829               	movf	___flmul@a+1,w
  4907  0E91  160A  158A  227D  120A  158A  	fcall	__Umul8_16
  4908  0E96  0871               	movf	?__Umul8_16+1,w
  4909  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  4910  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  4911  0E99  00BD               	movwf	___flmul@temp+1
  4912  0E9A  0870               	movf	?__Umul8_16,w
  4913  0E9B  00BC               	movwf	___flmul@temp
  4914  0E9C                     l2837:
  4915  0E9C  083C               	movf	___flmul@temp,w
  4916  0E9D  00AC               	movwf	??___flmul
  4917  0E9E  083D               	movf	___flmul@temp+1,w
  4918  0E9F  00AD               	movwf	??___flmul+1
  4919  0EA0  01AE               	clrf	??___flmul+2
  4920  0EA1  01AF               	clrf	??___flmul+3
  4921  0EA2  082C               	movf	??___flmul,w
  4922  0EA3  07B8               	addwf	___flmul@prod,f
  4923  0EA4  082D               	movf	??___flmul+1,w
  4924  0EA5  1103               	clrz
  4925  0EA6  1803               	skipnc
  4926  0EA7  3E01               	addlw	1
  4927  0EA8  1903               	skipnz
  4928  0EA9  2EAB               	goto	u4031
  4929  0EAA  07B9               	addwf	___flmul@prod+1,f
  4930  0EAB                     u4031:
  4931  0EAB  082E               	movf	??___flmul+2,w
  4932  0EAC  1103               	clrz
  4933  0EAD  1803               	skipnc
  4934  0EAE  3E01               	addlw	1
  4935  0EAF  1903               	skipnz
  4936  0EB0  2EB2               	goto	u4032
  4937  0EB1  07BA               	addwf	___flmul@prod+2,f
  4938  0EB2                     u4032:
  4939  0EB2  082F               	movf	??___flmul+3,w
  4940  0EB3  1103               	clrz
  4941  0EB4  1803               	skipnc
  4942  0EB5  3E01               	addlw	1
  4943  0EB6  1903               	skipnz
  4944  0EB7  2EB9               	goto	u4033
  4945  0EB8  07BB               	addwf	___flmul@prod+3,f
  4946  0EB9                     u4033:
  4947  0EB9  0826               	movf	___flmul@b+2,w
  4948  0EBA  00AC               	movwf	??___flmul
  4949  0EBB  082C               	movf	??___flmul,w
  4950  0EBC  00F0               	movwf	__Umul8_16@multiplicand
  4951  0EBD  082A               	movf	___flmul@a+2,w
  4952  0EBE  160A  158A  227D  120A  158A  	fcall	__Umul8_16
  4953  0EC3  0871               	movf	?__Umul8_16+1,w
  4954  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  4955  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  4956  0EC6  00BD               	movwf	___flmul@temp+1
  4957  0EC7  0870               	movf	?__Umul8_16,w
  4958  0EC8  00BC               	movwf	___flmul@temp
  4959  0EC9                     l2839:
  4960  0EC9  083C               	movf	___flmul@temp,w
  4961  0ECA  00AC               	movwf	??___flmul
  4962  0ECB  083D               	movf	___flmul@temp+1,w
  4963  0ECC  00AD               	movwf	??___flmul+1
  4964  0ECD  01AE               	clrf	??___flmul+2
  4965  0ECE  01AF               	clrf	??___flmul+3
  4966  0ECF  3008               	movlw	8
  4967  0ED0                     u4045:
  4968  0ED0  1003               	clrc
  4969  0ED1  0DAC               	rlf	??___flmul,f
  4970  0ED2  0DAD               	rlf	??___flmul+1,f
  4971  0ED3  0DAE               	rlf	??___flmul+2,f
  4972  0ED4  0DAF               	rlf	??___flmul+3,f
  4973  0ED5                     u4040:
  4974  0ED5  3EFF               	addlw	-1
  4975  0ED6  1D03               	skipz
  4976  0ED7  2ED0               	goto	u4045
  4977  0ED8  082C               	movf	??___flmul,w
  4978  0ED9  07B8               	addwf	___flmul@prod,f
  4979  0EDA  082D               	movf	??___flmul+1,w
  4980  0EDB  1103               	clrz
  4981  0EDC  1803               	skipnc
  4982  0EDD  3E01               	addlw	1
  4983  0EDE  1903               	skipnz
  4984  0EDF  2EE1               	goto	u4051
  4985  0EE0  07B9               	addwf	___flmul@prod+1,f
  4986  0EE1                     u4051:
  4987  0EE1  082E               	movf	??___flmul+2,w
  4988  0EE2  1103               	clrz
  4989  0EE3  1803               	skipnc
  4990  0EE4  3E01               	addlw	1
  4991  0EE5  1903               	skipnz
  4992  0EE6  2EE8               	goto	u4052
  4993  0EE7  07BA               	addwf	___flmul@prod+2,f
  4994  0EE8                     u4052:
  4995  0EE8  082F               	movf	??___flmul+3,w
  4996  0EE9  1103               	clrz
  4997  0EEA  1803               	skipnc
  4998  0EEB  3E01               	addlw	1
  4999  0EEC  1903               	skipnz
  5000  0EED  2EEF               	goto	u4053
  5001  0EEE  07BB               	addwf	___flmul@prod+3,f
  5002  0EEF                     u4053:
  5003  0EEF                     l2841:
  5004  0EEF  0832               	movf	___flmul@grs,w
  5005  0EF0  00AC               	movwf	??___flmul
  5006  0EF1  0833               	movf	___flmul@grs+1,w
  5007  0EF2  00AD               	movwf	??___flmul+1
  5008  0EF3  0834               	movf	___flmul@grs+2,w
  5009  0EF4  00AE               	movwf	??___flmul+2
  5010  0EF5  0835               	movf	___flmul@grs+3,w
  5011  0EF6  00AF               	movwf	??___flmul+3
  5012  0EF7  3018               	movlw	24
  5013  0EF8                     u4065:
  5014  0EF8  1003               	clrc
  5015  0EF9  0CAF               	rrf	??___flmul+3,f
  5016  0EFA  0CAE               	rrf	??___flmul+2,f
  5017  0EFB  0CAD               	rrf	??___flmul+1,f
  5018  0EFC  0CAC               	rrf	??___flmul,f
  5019  0EFD                     u4060:
  5020  0EFD  3EFF               	addlw	-1
  5021  0EFE  1D03               	skipz
  5022  0EFF  2EF8               	goto	u4065
  5023  0F00  082C               	movf	??___flmul,w
  5024  0F01  07B8               	addwf	___flmul@prod,f
  5025  0F02  082D               	movf	??___flmul+1,w
  5026  0F03  1103               	clrz
  5027  0F04  1803               	skipnc
  5028  0F05  3E01               	addlw	1
  5029  0F06  1903               	skipnz
  5030  0F07  2F09               	goto	u4071
  5031  0F08  07B9               	addwf	___flmul@prod+1,f
  5032  0F09                     u4071:
  5033  0F09  082E               	movf	??___flmul+2,w
  5034  0F0A  1103               	clrz
  5035  0F0B  1803               	skipnc
  5036  0F0C  3E01               	addlw	1
  5037  0F0D  1903               	skipnz
  5038  0F0E  2F10               	goto	u4072
  5039  0F0F  07BA               	addwf	___flmul@prod+2,f
  5040  0F10                     u4072:
  5041  0F10  082F               	movf	??___flmul+3,w
  5042  0F11  1103               	clrz
  5043  0F12  1803               	skipnc
  5044  0F13  3E01               	addlw	1
  5045  0F14  1903               	skipnz
  5046  0F15  2F17               	goto	u4073
  5047  0F16  07BB               	addwf	___flmul@prod+3,f
  5048  0F17                     u4073:
  5049  0F17                     l2843:
  5050  0F17  3008               	movlw	8
  5051  0F18  00AC               	movwf	??___flmul
  5052  0F19                     u4085:
  5053  0F19  1003               	clrc
  5054  0F1A  0DB2               	rlf	___flmul@grs,f
  5055  0F1B  0DB3               	rlf	___flmul@grs+1,f
  5056  0F1C  0DB4               	rlf	___flmul@grs+2,f
  5057  0F1D  0DB5               	rlf	___flmul@grs+3,f
  5058  0F1E  0BAC               	decfsz	??___flmul,f
  5059  0F1F  2F19               	goto	u4085
  5060  0F20                     l2845:
  5061  0F20  0837               	movf	___flmul@bexp,w
  5062  0F21  0736               	addwf	___flmul@aexp,w
  5063  0F22  00AC               	movwf	??___flmul
  5064  0F23  01AD               	clrf	??___flmul+1
  5065  0F24  0DAD               	rlf	??___flmul+1,f
  5066  0F25  082C               	movf	??___flmul,w
  5067  0F26  3E82               	addlw	130
  5068  0F27  00BC               	movwf	___flmul@temp
  5069  0F28  082D               	movf	??___flmul+1,w
  5070  0F29  1803               	skipnc
  5071  0F2A  3E01               	addlw	1
  5072  0F2B  3EFF               	addlw	255
  5073  0F2C  00BD               	movwf	___flmul@temp+1
  5074  0F2D  2F4B               	goto	l2857
  5075  0F2E                     l2847:
  5076  0F2E  3001               	movlw	1
  5077  0F2F  00AC               	movwf	??___flmul
  5078  0F30                     u4095:
  5079  0F30  1003               	clrc
  5080  0F31  0DB8               	rlf	___flmul@prod,f
  5081  0F32  0DB9               	rlf	___flmul@prod+1,f
  5082  0F33  0DBA               	rlf	___flmul@prod+2,f
  5083  0F34  0DBB               	rlf	___flmul@prod+3,f
  5084  0F35  0BAC               	decfsz	??___flmul,f
  5085  0F36  2F30               	goto	u4095
  5086  0F37                     l2849:
  5087  0F37  1FB5               	btfss	___flmul@grs+3,7
  5088  0F38  2F3A               	goto	u4101
  5089  0F39  2F3B               	goto	u4100
  5090  0F3A                     u4101:
  5091  0F3A  2F3C               	goto	l2853
  5092  0F3B                     u4100:
  5093  0F3B                     l2851:
  5094  0F3B  1438               	bsf	___flmul@prod,0
  5095  0F3C                     l2853:
  5096  0F3C  3001               	movlw	1
  5097  0F3D  00AC               	movwf	??___flmul
  5098  0F3E                     u4115:
  5099  0F3E  1003               	clrc
  5100  0F3F  0DB2               	rlf	___flmul@grs,f
  5101  0F40  0DB3               	rlf	___flmul@grs+1,f
  5102  0F41  0DB4               	rlf	___flmul@grs+2,f
  5103  0F42  0DB5               	rlf	___flmul@grs+3,f
  5104  0F43  0BAC               	decfsz	??___flmul,f
  5105  0F44  2F3E               	goto	u4115
  5106  0F45                     l2855:
  5107  0F45  30FF               	movlw	255
  5108  0F46  07BC               	addwf	___flmul@temp,f
  5109  0F47  1803               	skipnc
  5110  0F48  0ABD               	incf	___flmul@temp+1,f
  5111  0F49  30FF               	movlw	255
  5112  0F4A  07BD               	addwf	___flmul@temp+1,f
  5113  0F4B                     l2857:
  5114  0F4B  1FBA               	btfss	___flmul@prod+2,7
  5115  0F4C  2F4E               	goto	u4121
  5116  0F4D  2F4F               	goto	u4120
  5117  0F4E                     u4121:
  5118  0F4E  2F2E               	goto	l2847
  5119  0F4F                     u4120:
  5120  0F4F                     l2859:
  5121  0F4F  01B6               	clrf	___flmul@aexp
  5122  0F50                     l2861:
  5123  0F50  1FB5               	btfss	___flmul@grs+3,7
  5124  0F51  2F53               	goto	u4131
  5125  0F52  2F54               	goto	u4130
  5126  0F53                     u4131:
  5127  0F53  2F70               	goto	l2869
  5128  0F54                     u4130:
  5129  0F54                     l2863:
  5130  0F54  30FF               	movlw	255
  5131  0F55  0532               	andwf	___flmul@grs,w
  5132  0F56  00AC               	movwf	??___flmul
  5133  0F57  30FF               	movlw	255
  5134  0F58  0533               	andwf	___flmul@grs+1,w
  5135  0F59  00AD               	movwf	??___flmul+1
  5136  0F5A  30FF               	movlw	255
  5137  0F5B  0534               	andwf	___flmul@grs+2,w
  5138  0F5C  00AE               	movwf	??___flmul+2
  5139  0F5D  307F               	movlw	127
  5140  0F5E  0535               	andwf	___flmul@grs+3,w
  5141  0F5F  00AF               	movwf	??___flmul+3
  5142  0F60  082F               	movf	??___flmul+3,w
  5143  0F61  042E               	iorwf	??___flmul+2,w
  5144  0F62  042D               	iorwf	??___flmul+1,w
  5145  0F63  042C               	iorwf	??___flmul,w
  5146  0F64  1903               	skipnz
  5147  0F65  2F67               	goto	u4141
  5148  0F66  2F68               	goto	u4140
  5149  0F67                     u4141:
  5150  0F67  2F6B               	goto	l845
  5151  0F68                     u4140:
  5152  0F68                     l2865:
  5153  0F68  01B6               	clrf	___flmul@aexp
  5154  0F69  0AB6               	incf	___flmul@aexp,f
  5155  0F6A  2F70               	goto	l2869
  5156  0F6B                     l845:
  5157  0F6B  1C38               	btfss	___flmul@prod,0
  5158  0F6C  2F6E               	goto	u4151
  5159  0F6D  2F6F               	goto	u4150
  5160  0F6E                     u4151:
  5161  0F6E  2F70               	goto	l2869
  5162  0F6F                     u4150:
  5163  0F6F  2F68               	goto	l2865
  5164  0F70                     l2869:
  5165  0F70  0836               	movf	___flmul@aexp,w
  5166  0F71  1903               	btfsc	3,2
  5167  0F72  2F74               	goto	u4161
  5168  0F73  2F75               	goto	u4160
  5169  0F74                     u4161:
  5170  0F74  2FA6               	goto	l2879
  5171  0F75                     u4160:
  5172  0F75                     l2871:
  5173  0F75  3001               	movlw	1
  5174  0F76  07B8               	addwf	___flmul@prod,f
  5175  0F77  3000               	movlw	0
  5176  0F78  1803               	skipnc
  5177  0F79  3001               	movlw	1
  5178  0F7A  07B9               	addwf	___flmul@prod+1,f
  5179  0F7B  3000               	movlw	0
  5180  0F7C  1803               	skipnc
  5181  0F7D  3001               	movlw	1
  5182  0F7E  07BA               	addwf	___flmul@prod+2,f
  5183  0F7F  3000               	movlw	0
  5184  0F80  1803               	skipnc
  5185  0F81  3001               	movlw	1
  5186  0F82  07BB               	addwf	___flmul@prod+3,f
  5187  0F83                     l2873:
  5188  0F83  1C3B               	btfss	___flmul@prod+3,0
  5189  0F84  2F86               	goto	u4171
  5190  0F85  2F87               	goto	u4170
  5191  0F86                     u4171:
  5192  0F86  2FA6               	goto	l2879
  5193  0F87                     u4170:
  5194  0F87                     l2875:
  5195  0F87  0838               	movf	___flmul@prod,w
  5196  0F88  00AC               	movwf	??___flmul
  5197  0F89  0839               	movf	___flmul@prod+1,w
  5198  0F8A  00AD               	movwf	??___flmul+1
  5199  0F8B  083A               	movf	___flmul@prod+2,w
  5200  0F8C  00AE               	movwf	??___flmul+2
  5201  0F8D  083B               	movf	___flmul@prod+3,w
  5202  0F8E  00AF               	movwf	??___flmul+3
  5203  0F8F  3001               	movlw	1
  5204  0F90  00B0               	movwf	??___flmul+4
  5205  0F91                     u4185:
  5206  0F91  0D2F               	rlf	??___flmul+3,w
  5207  0F92  0CAF               	rrf	??___flmul+3,f
  5208  0F93  0CAE               	rrf	??___flmul+2,f
  5209  0F94  0CAD               	rrf	??___flmul+1,f
  5210  0F95  0CAC               	rrf	??___flmul,f
  5211  0F96                     u4180:
  5212  0F96  0BB0               	decfsz	??___flmul+4,f
  5213  0F97  2F91               	goto	u4185
  5214  0F98  082F               	movf	??___flmul+3,w
  5215  0F99  00BB               	movwf	___flmul@prod+3
  5216  0F9A  082E               	movf	??___flmul+2,w
  5217  0F9B  00BA               	movwf	___flmul@prod+2
  5218  0F9C  082D               	movf	??___flmul+1,w
  5219  0F9D  00B9               	movwf	___flmul@prod+1
  5220  0F9E  082C               	movf	??___flmul,w
  5221  0F9F  00B8               	movwf	___flmul@prod
  5222  0FA0                     l2877:
  5223  0FA0  3001               	movlw	1
  5224  0FA1  07BC               	addwf	___flmul@temp,f
  5225  0FA2  1803               	skipnc
  5226  0FA3  0ABD               	incf	___flmul@temp+1,f
  5227  0FA4  3000               	movlw	0
  5228  0FA5  07BD               	addwf	___flmul@temp+1,f
  5229  0FA6                     l2879:
  5230  0FA6  083D               	movf	___flmul@temp+1,w
  5231  0FA7  3A80               	xorlw	128
  5232  0FA8  00FF               	movwf	btemp+1
  5233  0FA9  3080               	movlw	128
  5234  0FAA  027F               	subwf	btemp+1,w
  5235  0FAB  1D03               	skipz
  5236  0FAC  2FAF               	goto	u4195
  5237  0FAD  30FF               	movlw	255
  5238  0FAE  023C               	subwf	___flmul@temp,w
  5239  0FAF                     u4195:
  5240  0FAF  1C03               	skipc
  5241  0FB0  2FB2               	goto	u4191
  5242  0FB1  2FB3               	goto	u4190
  5243  0FB2                     u4191:
  5244  0FB2  2FBE               	goto	l2883
  5245  0FB3                     u4190:
  5246  0FB3                     l2881:
  5247  0FB3  307F               	movlw	127
  5248  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  5249  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  5250  0FB6  00BB               	movwf	___flmul@prod+3
  5251  0FB7  3080               	movlw	128
  5252  0FB8  00BA               	movwf	___flmul@prod+2
  5253  0FB9  3000               	movlw	0
  5254  0FBA  00B9               	movwf	___flmul@prod+1
  5255  0FBB  3000               	movlw	0
  5256  0FBC  00B8               	movwf	___flmul@prod
  5257  0FBD  2FF3               	goto	l851
  5258  0FBE                     l2883:
  5259  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  5260  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  5261  0FC0  083D               	movf	___flmul@temp+1,w
  5262  0FC1  3A80               	xorlw	128
  5263  0FC2  00FF               	movwf	btemp+1
  5264  0FC3  3080               	movlw	128
  5265  0FC4  027F               	subwf	btemp+1,w
  5266  0FC5  1D03               	skipz
  5267  0FC6  2FC9               	goto	u4205
  5268  0FC7  3001               	movlw	1
  5269  0FC8  023C               	subwf	___flmul@temp,w
  5270  0FC9                     u4205:
  5271  0FC9  1803               	skipnc
  5272  0FCA  2FCC               	goto	u4201
  5273  0FCB  2FCD               	goto	u4200
  5274  0FCC                     u4201:
  5275  0FCC  2FD9               	goto	l2889
  5276  0FCD                     u4200:
  5277  0FCD                     l2885:
  5278  0FCD  3000               	movlw	0
  5279  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  5280  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  5281  0FD0  00BB               	movwf	___flmul@prod+3
  5282  0FD1  3000               	movlw	0
  5283  0FD2  00BA               	movwf	___flmul@prod+2
  5284  0FD3  3000               	movlw	0
  5285  0FD4  00B9               	movwf	___flmul@prod+1
  5286  0FD5  3000               	movlw	0
  5287  0FD6  00B8               	movwf	___flmul@prod
  5288  0FD7                     l2887:
  5289  0FD7  01B1               	clrf	___flmul@sign
  5290  0FD8  2FF3               	goto	l851
  5291  0FD9                     l2889:
  5292  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  5293  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  5294  0FDB  083C               	movf	___flmul@temp,w
  5295  0FDC  00AC               	movwf	??___flmul
  5296  0FDD  082C               	movf	??___flmul,w
  5297  0FDE  00B7               	movwf	___flmul@bexp
  5298  0FDF  30FF               	movlw	255
  5299  0FE0  05B8               	andwf	___flmul@prod,f
  5300  0FE1  30FF               	movlw	255
  5301  0FE2  05B9               	andwf	___flmul@prod+1,f
  5302  0FE3  307F               	movlw	127
  5303  0FE4  05BA               	andwf	___flmul@prod+2,f
  5304  0FE5  3000               	movlw	0
  5305  0FE6  05BB               	andwf	___flmul@prod+3,f
  5306  0FE7                     l2891:
  5307  0FE7  1C37               	btfss	___flmul@bexp,0
  5308  0FE8  2FEA               	goto	u4211
  5309  0FE9  2FEB               	goto	u4210
  5310  0FEA                     u4211:
  5311  0FEA  2FEC               	goto	l2895
  5312  0FEB                     u4210:
  5313  0FEB                     l2893:
  5314  0FEB  17BA               	bsf	___flmul@prod+2,7
  5315  0FEC                     l2895:
  5316  0FEC  0837               	movf	___flmul@bexp,w
  5317  0FED  00AC               	movwf	??___flmul
  5318  0FEE  1003               	clrc
  5319  0FEF  0C2C               	rrf	??___flmul,w
  5320  0FF0  00AD               	movwf	??___flmul+1
  5321  0FF1  082D               	movf	??___flmul+1,w
  5322  0FF2  00BB               	movwf	___flmul@prod+3
  5323  0FF3                     l851:
  5324  0FF3  0831               	movf	___flmul@sign,w
  5325  0FF4  00AC               	movwf	??___flmul
  5326  0FF5  082C               	movf	??___flmul,w
  5327  0FF6  04BB               	iorwf	___flmul@prod+3,f
  5328  0FF7                     l2897:
  5329  0FF7  083B               	movf	___flmul@prod+3,w
  5330  0FF8  00A7               	movwf	?___flmul+3
  5331  0FF9  083A               	movf	___flmul@prod+2,w
  5332  0FFA  00A6               	movwf	?___flmul+2
  5333  0FFB  0839               	movf	___flmul@prod+1,w
  5334  0FFC  00A5               	movwf	?___flmul+1
  5335  0FFD  0838               	movf	___flmul@prod,w
  5336  0FFE  00A4               	movwf	?___flmul
  5337  0FFF                     l839:
  5338  0FFF  0008               	return
  5339  1000                     __end_of___flmul:
  5340                           
  5341                           	psect	text10
  5342  1A7D                     __ptext10:	
  5343 ;; *************** function __Umul8_16 *****************
  5344 ;; Defined at:
  5345 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  5346 ;; Parameters:    Size  Location     Type
  5347 ;;  multiplier      1    wreg     unsigned char 
  5348 ;;  multiplicand    1    0[COMMON] unsigned char 
  5349 ;; Auto vars:     Size  Location     Type
  5350 ;;  multiplier      1    8[COMMON] unsigned char 
  5351 ;;  word_mpld       2    6[COMMON] unsigned int 
  5352 ;;  product         2    4[COMMON] unsigned int 
  5353 ;; Return value:  Size  Location     Type
  5354 ;;                  2    0[COMMON] unsigned int 
  5355 ;; Registers used:
  5356 ;;		wreg, status,2, status,0
  5357 ;; Tracked objects:
  5358 ;;		On entry : 0/0
  5359 ;;		On exit  : 0/0
  5360 ;;		Unchanged: 0/0
  5361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5362 ;;      Params:         2       0       0       0       0
  5363 ;;      Locals:         5       0       0       0       0
  5364 ;;      Temps:          2       0       0       0       0
  5365 ;;      Totals:         9       0       0       0       0
  5366 ;;Total ram usage:        9 bytes
  5367 ;; Hardware stack levels used:    1
  5368 ;; This function calls:
  5369 ;;		Nothing
  5370 ;; This function is called by:
  5371 ;;		___flmul
  5372 ;; This function uses a non-reentrant model
  5373 ;;
  5374                           
  5375                           
  5376                           ;psect for function __Umul8_16
  5377  1A7D                     __Umul8_16:
  5378                           
  5379                           ;incstack = 0
  5380                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5381                           ;__Umul8_16@multiplier stored from wreg
  5382  1A7D  00F8               	movwf	__Umul8_16@multiplier
  5383  1A7E                     l2403:
  5384  1A7E  01F4               	clrf	__Umul8_16@product
  5385  1A7F  01F5               	clrf	__Umul8_16@product+1
  5386  1A80                     l2405:
  5387  1A80  0870               	movf	__Umul8_16@multiplicand,w
  5388  1A81  00F2               	movwf	??__Umul8_16
  5389  1A82  01F3               	clrf	??__Umul8_16+1
  5390  1A83  0872               	movf	??__Umul8_16,w
  5391  1A84  00F6               	movwf	__Umul8_16@word_mpld
  5392  1A85  0873               	movf	??__Umul8_16+1,w
  5393  1A86  00F7               	movwf	__Umul8_16@word_mpld+1
  5394  1A87                     l2407:
  5395  1A87  1C78               	btfss	__Umul8_16@multiplier,0
  5396  1A88  2A8A               	goto	u2951
  5397  1A89  2A8B               	goto	u2950
  5398  1A8A                     u2951:
  5399  1A8A  2A91               	goto	l858
  5400  1A8B                     u2950:
  5401  1A8B                     l2409:
  5402  1A8B  0876               	movf	__Umul8_16@word_mpld,w
  5403  1A8C  07F4               	addwf	__Umul8_16@product,f
  5404  1A8D  1803               	skipnc
  5405  1A8E  0AF5               	incf	__Umul8_16@product+1,f
  5406  1A8F  0877               	movf	__Umul8_16@word_mpld+1,w
  5407  1A90  07F5               	addwf	__Umul8_16@product+1,f
  5408  1A91                     l858:
  5409  1A91  3001               	movlw	1
  5410  1A92                     u2965:
  5411  1A92  1003               	clrc
  5412  1A93  0DF6               	rlf	__Umul8_16@word_mpld,f
  5413  1A94  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  5414  1A95  3EFF               	addlw	-1
  5415  1A96  1D03               	skipz
  5416  1A97  2A92               	goto	u2965
  5417  1A98  1003               	clrc
  5418  1A99  0CF8               	rrf	__Umul8_16@multiplier,f
  5419  1A9A                     l2411:
  5420  1A9A  0878               	movf	__Umul8_16@multiplier,w
  5421  1A9B  1D03               	btfss	3,2
  5422  1A9C  2A9E               	goto	u2971
  5423  1A9D  2A9F               	goto	u2970
  5424  1A9E                     u2971:
  5425  1A9E  2A87               	goto	l2407
  5426  1A9F                     u2970:
  5427  1A9F                     l2413:
  5428  1A9F  0875               	movf	__Umul8_16@product+1,w
  5429  1AA0  00F1               	movwf	?__Umul8_16+1
  5430  1AA1  0874               	movf	__Umul8_16@product,w
  5431  1AA2  00F0               	movwf	?__Umul8_16
  5432  1AA3                     l860:
  5433  1AA3  0008               	return
  5434  1AA4                     __end_of__Umul8_16:
  5435                           
  5436                           	psect	text11
  5437  1F43                     __ptext11:	
  5438 ;; *************** function __tdiv_to_l_ *****************
  5439 ;; Defined at:
  5440 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  5441 ;; Parameters:    Size  Location     Type
  5442 ;;  f1              4    0[COMMON] float 
  5443 ;;  f2              4    4[COMMON] float 
  5444 ;; Auto vars:     Size  Location     Type
  5445 ;;  quot            4    0[BANK0 ] unsigned long 
  5446 ;;  exp1            1    5[BANK0 ] unsigned char 
  5447 ;;  cntr            1    4[BANK0 ] unsigned char 
  5448 ;; Return value:  Size  Location     Type
  5449 ;;                  4    0[COMMON] unsigned long 
  5450 ;; Registers used:
  5451 ;;		wreg, status,2, status,0
  5452 ;; Tracked objects:
  5453 ;;		On entry : 0/0
  5454 ;;		On exit  : 0/0
  5455 ;;		Unchanged: 0/0
  5456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5457 ;;      Params:         8       0       0       0       0
  5458 ;;      Locals:         0       6       0       0       0
  5459 ;;      Temps:          4       0       0       0       0
  5460 ;;      Totals:        12       6       0       0       0
  5461 ;;Total ram usage:       18 bytes
  5462 ;; Hardware stack levels used:    1
  5463 ;; This function calls:
  5464 ;;		Nothing
  5465 ;; This function is called by:
  5466 ;;		_sprintf
  5467 ;; This function uses a non-reentrant model
  5468 ;;
  5469                           
  5470                           
  5471                           ;psect for function __tdiv_to_l_
  5472  1F43                     __tdiv_to_l_:
  5473  1F43                     l3011:	
  5474                           ;incstack = 0
  5475                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5476                           
  5477  1F43  0870               	movf	__tdiv_to_l_@f1,w
  5478  1F44  00F8               	movwf	??__tdiv_to_l_
  5479  1F45  0871               	movf	__tdiv_to_l_@f1+1,w
  5480  1F46  00F9               	movwf	??__tdiv_to_l_+1
  5481  1F47  0872               	movf	__tdiv_to_l_@f1+2,w
  5482  1F48  00FA               	movwf	??__tdiv_to_l_+2
  5483  1F49  1003               	clrc
  5484  1F4A  0D79               	rlf	??__tdiv_to_l_+1,w
  5485  1F4B  0D7A               	rlf	??__tdiv_to_l_+2,w
  5486  1F4C  00FB               	movwf	??__tdiv_to_l_+3
  5487  1F4D  087B               	movf	??__tdiv_to_l_+3,w
  5488  1F4E  1283               	bcf	3,5	;RP0=0, select bank0
  5489  1F4F  1303               	bcf	3,6	;RP1=0, select bank0
  5490  1F50  00A5               	movwf	__tdiv_to_l_@exp1
  5491  1F51  0825               	movf	__tdiv_to_l_@exp1,w
  5492  1F52  1D03               	btfss	3,2
  5493  1F53  2F55               	goto	u4501
  5494  1F54  2F56               	goto	u4500
  5495  1F55                     u4501:
  5496  1F55  2F5F               	goto	l3017
  5497  1F56                     u4500:
  5498  1F56                     l3013:
  5499  1F56  3000               	movlw	0
  5500  1F57  00F3               	movwf	?__tdiv_to_l_+3
  5501  1F58  3000               	movlw	0
  5502  1F59  00F2               	movwf	?__tdiv_to_l_+2
  5503  1F5A  3000               	movlw	0
  5504  1F5B  00F1               	movwf	?__tdiv_to_l_+1
  5505  1F5C  3000               	movlw	0
  5506  1F5D  00F0               	movwf	?__tdiv_to_l_
  5507  1F5E  2FFF               	goto	l633
  5508  1F5F                     l3017:
  5509  1F5F  0874               	movf	__tdiv_to_l_@f2,w
  5510  1F60  00F8               	movwf	??__tdiv_to_l_
  5511  1F61  0875               	movf	__tdiv_to_l_@f2+1,w
  5512  1F62  00F9               	movwf	??__tdiv_to_l_+1
  5513  1F63  0876               	movf	__tdiv_to_l_@f2+2,w
  5514  1F64  00FA               	movwf	??__tdiv_to_l_+2
  5515  1F65  1003               	clrc
  5516  1F66  0D79               	rlf	??__tdiv_to_l_+1,w
  5517  1F67  0D7A               	rlf	??__tdiv_to_l_+2,w
  5518  1F68  00FB               	movwf	??__tdiv_to_l_+3
  5519  1F69  087B               	movf	??__tdiv_to_l_+3,w
  5520  1F6A  00A4               	movwf	__tdiv_to_l_@cntr
  5521  1F6B  0824               	movf	__tdiv_to_l_@cntr,w
  5522  1F6C  1D03               	btfss	3,2
  5523  1F6D  2F6F               	goto	u4511
  5524  1F6E  2F70               	goto	u4510
  5525  1F6F                     u4511:
  5526  1F6F  2F71               	goto	l634
  5527  1F70                     u4510:
  5528  1F70  2F56               	goto	l3013
  5529  1F71                     l634:
  5530  1F71  17F1               	bsf	__tdiv_to_l_@f1+1,7
  5531  1F72                     l3023:
  5532  1F72  30FF               	movlw	255
  5533  1F73  05F0               	andwf	__tdiv_to_l_@f1,f
  5534  1F74  30FF               	movlw	255
  5535  1F75  05F1               	andwf	__tdiv_to_l_@f1+1,f
  5536  1F76  3000               	movlw	0
  5537  1F77  05F2               	andwf	__tdiv_to_l_@f1+2,f
  5538  1F78                     l3025:
  5539  1F78  17F5               	bsf	__tdiv_to_l_@f2+1,7
  5540  1F79  30FF               	movlw	255
  5541  1F7A  05F4               	andwf	__tdiv_to_l_@f2,f
  5542  1F7B  30FF               	movlw	255
  5543  1F7C  05F5               	andwf	__tdiv_to_l_@f2+1,f
  5544  1F7D  3000               	movlw	0
  5545  1F7E  05F6               	andwf	__tdiv_to_l_@f2+2,f
  5546  1F7F  3000               	movlw	0
  5547  1F80  00A3               	movwf	__tdiv_to_l_@quot+3
  5548  1F81  3000               	movlw	0
  5549  1F82  00A2               	movwf	__tdiv_to_l_@quot+2
  5550  1F83  3000               	movlw	0
  5551  1F84  00A1               	movwf	__tdiv_to_l_@quot+1
  5552  1F85  3000               	movlw	0
  5553  1F86  00A0               	movwf	__tdiv_to_l_@quot
  5554  1F87                     l3027:
  5555  1F87  307F               	movlw	127
  5556  1F88  02A5               	subwf	__tdiv_to_l_@exp1,f
  5557  1F89                     l3029:
  5558  1F89  3098               	movlw	152
  5559  1F8A  0724               	addwf	__tdiv_to_l_@cntr,w
  5560  1F8B  00F8               	movwf	??__tdiv_to_l_
  5561  1F8C  0878               	movf	??__tdiv_to_l_,w
  5562  1F8D  02A5               	subwf	__tdiv_to_l_@exp1,f
  5563  1F8E  3018               	movlw	24
  5564  1F8F  00F8               	movwf	??__tdiv_to_l_
  5565  1F90  0878               	movf	??__tdiv_to_l_,w
  5566  1F91  00A4               	movwf	__tdiv_to_l_@cntr
  5567  1F92                     l3031:
  5568  1F92  3001               	movlw	1
  5569  1F93  00F8               	movwf	??__tdiv_to_l_
  5570  1F94                     u4525:
  5571  1F94  1003               	clrc
  5572  1F95  0DA0               	rlf	__tdiv_to_l_@quot,f
  5573  1F96  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5574  1F97  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5575  1F98  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5576  1F99  0BF8               	decfsz	??__tdiv_to_l_,f
  5577  1F9A  2F94               	goto	u4525
  5578  1F9B                     l3033:
  5579  1F9B  0876               	movf	__tdiv_to_l_@f2+2,w
  5580  1F9C  0272               	subwf	__tdiv_to_l_@f1+2,w
  5581  1F9D  1D03               	skipz
  5582  1F9E  2FA5               	goto	u4535
  5583  1F9F  0875               	movf	__tdiv_to_l_@f2+1,w
  5584  1FA0  0271               	subwf	__tdiv_to_l_@f1+1,w
  5585  1FA1  1D03               	skipz
  5586  1FA2  2FA5               	goto	u4535
  5587  1FA3  0874               	movf	__tdiv_to_l_@f2,w
  5588  1FA4  0270               	subwf	__tdiv_to_l_@f1,w
  5589  1FA5                     u4535:
  5590  1FA5  1C03               	skipc
  5591  1FA6  2FA8               	goto	u4531
  5592  1FA7  2FA9               	goto	u4530
  5593  1FA8                     u4531:
  5594  1FA8  2FB4               	goto	l3039
  5595  1FA9                     u4530:
  5596  1FA9                     l3035:
  5597  1FA9  0874               	movf	__tdiv_to_l_@f2,w
  5598  1FAA  02F0               	subwf	__tdiv_to_l_@f1,f
  5599  1FAB  0875               	movf	__tdiv_to_l_@f2+1,w
  5600  1FAC  1C03               	skipc
  5601  1FAD  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  5602  1FAE  02F1               	subwf	__tdiv_to_l_@f1+1,f
  5603  1FAF  0876               	movf	__tdiv_to_l_@f2+2,w
  5604  1FB0  1C03               	skipc
  5605  1FB1  0A76               	incf	__tdiv_to_l_@f2+2,w
  5606  1FB2  02F2               	subwf	__tdiv_to_l_@f1+2,f
  5607  1FB3                     l3037:
  5608  1FB3  1420               	bsf	__tdiv_to_l_@quot,0
  5609  1FB4                     l3039:
  5610  1FB4  3001               	movlw	1
  5611  1FB5                     u4545:
  5612  1FB5  1003               	clrc
  5613  1FB6  0DF0               	rlf	__tdiv_to_l_@f1,f
  5614  1FB7  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  5615  1FB8  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  5616  1FB9  3EFF               	addlw	-1
  5617  1FBA  1D03               	skipz
  5618  1FBB  2FB5               	goto	u4545
  5619  1FBC                     l3041:
  5620  1FBC  3001               	movlw	1
  5621  1FBD  02A4               	subwf	__tdiv_to_l_@cntr,f
  5622  1FBE  1D03               	btfss	3,2
  5623  1FBF  2FC1               	goto	u4551
  5624  1FC0  2FC2               	goto	u4550
  5625  1FC1                     u4551:
  5626  1FC1  2F92               	goto	l3031
  5627  1FC2                     u4550:
  5628  1FC2                     l637:
  5629  1FC2  1FA5               	btfss	__tdiv_to_l_@exp1,7
  5630  1FC3  2FC5               	goto	u4561
  5631  1FC4  2FC6               	goto	u4560
  5632  1FC5                     u4561:
  5633  1FC5  2FE0               	goto	l3051
  5634  1FC6                     u4560:
  5635  1FC6                     l3043:
  5636  1FC6  0825               	movf	__tdiv_to_l_@exp1,w
  5637  1FC7  3A80               	xorlw	128
  5638  1FC8  3E97               	addlw	151
  5639  1FC9  1803               	skipnc
  5640  1FCA  2FCC               	goto	u4571
  5641  1FCB  2FCD               	goto	u4570
  5642  1FCC                     u4571:
  5643  1FCC  2FCE               	goto	l3049
  5644  1FCD                     u4570:
  5645  1FCD  2F56               	goto	l3013
  5646  1FCE                     l3049:
  5647  1FCE  3001               	movlw	1
  5648  1FCF                     u4585:
  5649  1FCF  1003               	clrc
  5650  1FD0  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  5651  1FD1  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  5652  1FD2  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  5653  1FD3  0CA0               	rrf	__tdiv_to_l_@quot,f
  5654  1FD4  3EFF               	addlw	-1
  5655  1FD5  1D03               	skipz
  5656  1FD6  2FCF               	goto	u4585
  5657  1FD7  3001               	movlw	1
  5658  1FD8  00F8               	movwf	??__tdiv_to_l_
  5659  1FD9  0878               	movf	??__tdiv_to_l_,w
  5660  1FDA  07A5               	addwf	__tdiv_to_l_@exp1,f
  5661  1FDB  1D03               	btfss	3,2
  5662  1FDC  2FDE               	goto	u4591
  5663  1FDD  2FDF               	goto	u4590
  5664  1FDE                     u4591:
  5665  1FDE  2FCE               	goto	l3049
  5666  1FDF                     u4590:
  5667  1FDF  2FF7               	goto	l3059
  5668  1FE0                     l3051:
  5669  1FE0  3018               	movlw	24
  5670  1FE1  0225               	subwf	__tdiv_to_l_@exp1,w
  5671  1FE2  1C03               	skipc
  5672  1FE3  2FE5               	goto	u4601
  5673  1FE4  2FE6               	goto	u4600
  5674  1FE5                     u4601:
  5675  1FE5  2FF2               	goto	l644
  5676  1FE6                     u4600:
  5677  1FE6  2F56               	goto	l3013
  5678  1FE7                     l3057:
  5679  1FE7  3001               	movlw	1
  5680  1FE8  00F8               	movwf	??__tdiv_to_l_
  5681  1FE9                     u4615:
  5682  1FE9  1003               	clrc
  5683  1FEA  0DA0               	rlf	__tdiv_to_l_@quot,f
  5684  1FEB  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5685  1FEC  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5686  1FED  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5687  1FEE  0BF8               	decfsz	??__tdiv_to_l_,f
  5688  1FEF  2FE9               	goto	u4615
  5689  1FF0  3001               	movlw	1
  5690  1FF1  02A5               	subwf	__tdiv_to_l_@exp1,f
  5691  1FF2                     l644:
  5692  1FF2  0825               	movf	__tdiv_to_l_@exp1,w
  5693  1FF3  1D03               	btfss	3,2
  5694  1FF4  2FF6               	goto	u4621
  5695  1FF5  2FF7               	goto	u4620
  5696  1FF6                     u4621:
  5697  1FF6  2FE7               	goto	l3057
  5698  1FF7                     u4620:
  5699  1FF7                     l3059:
  5700  1FF7  0823               	movf	__tdiv_to_l_@quot+3,w
  5701  1FF8  00F3               	movwf	?__tdiv_to_l_+3
  5702  1FF9  0822               	movf	__tdiv_to_l_@quot+2,w
  5703  1FFA  00F2               	movwf	?__tdiv_to_l_+2
  5704  1FFB  0821               	movf	__tdiv_to_l_@quot+1,w
  5705  1FFC  00F1               	movwf	?__tdiv_to_l_+1
  5706  1FFD  0820               	movf	__tdiv_to_l_@quot,w
  5707  1FFE  00F0               	movwf	?__tdiv_to_l_
  5708  1FFF                     l633:
  5709  1FFF  0008               	return
  5710  2000                     __end_of__tdiv_to_l_:
  5711                           
  5712                           	psect	text12
  5713  0882                     __ptext12:	
  5714 ;; *************** function __div_to_l_ *****************
  5715 ;; Defined at:
  5716 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  5717 ;; Parameters:    Size  Location     Type
  5718 ;;  f1              4    0[COMMON] unsigned long 
  5719 ;;  f2              4    4[COMMON] unsigned long 
  5720 ;; Auto vars:     Size  Location     Type
  5721 ;;  quot            4    0[BANK0 ] unsigned long 
  5722 ;;  exp1            1    5[BANK0 ] unsigned char 
  5723 ;;  cntr            1    4[BANK0 ] unsigned char 
  5724 ;; Return value:  Size  Location     Type
  5725 ;;                  4    0[COMMON] unsigned long 
  5726 ;; Registers used:
  5727 ;;		wreg, status,2, status,0
  5728 ;; Tracked objects:
  5729 ;;		On entry : 0/0
  5730 ;;		On exit  : 0/0
  5731 ;;		Unchanged: 0/0
  5732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5733 ;;      Params:         8       0       0       0       0
  5734 ;;      Locals:         0       6       0       0       0
  5735 ;;      Temps:          1       0       0       0       0
  5736 ;;      Totals:         9       6       0       0       0
  5737 ;;Total ram usage:       15 bytes
  5738 ;; Hardware stack levels used:    1
  5739 ;; This function calls:
  5740 ;;		Nothing
  5741 ;; This function is called by:
  5742 ;;		_sprintf
  5743 ;; This function uses a non-reentrant model
  5744 ;;
  5745                           
  5746                           
  5747                           ;psect for function __div_to_l_
  5748  0882                     __div_to_l_:
  5749  0882                     l3063:	
  5750                           ;incstack = 0
  5751                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5752                           
  5753  0882  1003               	clrc
  5754  0883  0D72               	rlf	__div_to_l_@f1+2,w
  5755  0884  0D73               	rlf	__div_to_l_@f1+3,w
  5756  0885  00F8               	movwf	??__div_to_l_
  5757  0886  0878               	movf	??__div_to_l_,w
  5758  0887  1283               	bcf	3,5	;RP0=0, select bank0
  5759  0888  1303               	bcf	3,6	;RP1=0, select bank0
  5760  0889  00A5               	movwf	__div_to_l_@exp1
  5761  088A  0825               	movf	__div_to_l_@exp1,w
  5762  088B  1D03               	btfss	3,2
  5763  088C  288E               	goto	u4631
  5764  088D  288F               	goto	u4630
  5765  088E                     u4631:
  5766  088E  2898               	goto	l3069
  5767  088F                     u4630:
  5768  088F                     l3065:
  5769  088F  3000               	movlw	0
  5770  0890  00F3               	movwf	?__div_to_l_+3
  5771  0891  3000               	movlw	0
  5772  0892  00F2               	movwf	?__div_to_l_+2
  5773  0893  3000               	movlw	0
  5774  0894  00F1               	movwf	?__div_to_l_+1
  5775  0895  3000               	movlw	0
  5776  0896  00F0               	movwf	?__div_to_l_
  5777  0897  293F               	goto	l586
  5778  0898                     l3069:
  5779  0898  1003               	clrc
  5780  0899  0D76               	rlf	__div_to_l_@f2+2,w
  5781  089A  0D77               	rlf	__div_to_l_@f2+3,w
  5782  089B  00F8               	movwf	??__div_to_l_
  5783  089C  0878               	movf	??__div_to_l_,w
  5784  089D  00A4               	movwf	__div_to_l_@cntr
  5785  089E  0824               	movf	__div_to_l_@cntr,w
  5786  089F  1D03               	btfss	3,2
  5787  08A0  28A2               	goto	u4641
  5788  08A1  28A3               	goto	u4640
  5789  08A2                     u4641:
  5790  08A2  28A4               	goto	l587
  5791  08A3                     u4640:
  5792  08A3  288F               	goto	l3065
  5793  08A4                     l587:
  5794  08A4  17F2               	bsf	__div_to_l_@f1+2,7
  5795  08A5                     l3075:
  5796  08A5  30FF               	movlw	255
  5797  08A6  05F0               	andwf	__div_to_l_@f1,f
  5798  08A7  30FF               	movlw	255
  5799  08A8  05F1               	andwf	__div_to_l_@f1+1,f
  5800  08A9  30FF               	movlw	255
  5801  08AA  05F2               	andwf	__div_to_l_@f1+2,f
  5802  08AB  3000               	movlw	0
  5803  08AC  05F3               	andwf	__div_to_l_@f1+3,f
  5804  08AD                     l3077:
  5805  08AD  17F6               	bsf	__div_to_l_@f2+2,7
  5806  08AE  30FF               	movlw	255
  5807  08AF  05F4               	andwf	__div_to_l_@f2,f
  5808  08B0  30FF               	movlw	255
  5809  08B1  05F5               	andwf	__div_to_l_@f2+1,f
  5810  08B2  30FF               	movlw	255
  5811  08B3  05F6               	andwf	__div_to_l_@f2+2,f
  5812  08B4  3000               	movlw	0
  5813  08B5  05F7               	andwf	__div_to_l_@f2+3,f
  5814  08B6  3000               	movlw	0
  5815  08B7  00A3               	movwf	__div_to_l_@quot+3
  5816  08B8  3000               	movlw	0
  5817  08B9  00A2               	movwf	__div_to_l_@quot+2
  5818  08BA  3000               	movlw	0
  5819  08BB  00A1               	movwf	__div_to_l_@quot+1
  5820  08BC  3000               	movlw	0
  5821  08BD  00A0               	movwf	__div_to_l_@quot
  5822  08BE                     l3079:
  5823  08BE  307F               	movlw	127
  5824  08BF  02A5               	subwf	__div_to_l_@exp1,f
  5825  08C0                     l3081:
  5826  08C0  30A0               	movlw	160
  5827  08C1  0724               	addwf	__div_to_l_@cntr,w
  5828  08C2  00F8               	movwf	??__div_to_l_
  5829  08C3  0878               	movf	??__div_to_l_,w
  5830  08C4  02A5               	subwf	__div_to_l_@exp1,f
  5831  08C5  3020               	movlw	32
  5832  08C6  00F8               	movwf	??__div_to_l_
  5833  08C7  0878               	movf	??__div_to_l_,w
  5834  08C8  00A4               	movwf	__div_to_l_@cntr
  5835  08C9                     l3083:
  5836  08C9  3001               	movlw	1
  5837  08CA  00F8               	movwf	??__div_to_l_
  5838  08CB                     u4655:
  5839  08CB  1003               	clrc
  5840  08CC  0DA0               	rlf	__div_to_l_@quot,f
  5841  08CD  0DA1               	rlf	__div_to_l_@quot+1,f
  5842  08CE  0DA2               	rlf	__div_to_l_@quot+2,f
  5843  08CF  0DA3               	rlf	__div_to_l_@quot+3,f
  5844  08D0  0BF8               	decfsz	??__div_to_l_,f
  5845  08D1  28CB               	goto	u4655
  5846  08D2                     l3085:
  5847  08D2  0877               	movf	__div_to_l_@f2+3,w
  5848  08D3  0273               	subwf	__div_to_l_@f1+3,w
  5849  08D4  1D03               	skipz
  5850  08D5  28E0               	goto	u4665
  5851  08D6  0876               	movf	__div_to_l_@f2+2,w
  5852  08D7  0272               	subwf	__div_to_l_@f1+2,w
  5853  08D8  1D03               	skipz
  5854  08D9  28E0               	goto	u4665
  5855  08DA  0875               	movf	__div_to_l_@f2+1,w
  5856  08DB  0271               	subwf	__div_to_l_@f1+1,w
  5857  08DC  1D03               	skipz
  5858  08DD  28E0               	goto	u4665
  5859  08DE  0874               	movf	__div_to_l_@f2,w
  5860  08DF  0270               	subwf	__div_to_l_@f1,w
  5861  08E0                     u4665:
  5862  08E0  1C03               	skipc
  5863  08E1  28E3               	goto	u4661
  5864  08E2  28E4               	goto	u4660
  5865  08E3                     u4661:
  5866  08E3  28F3               	goto	l3091
  5867  08E4                     u4660:
  5868  08E4                     l3087:
  5869  08E4  0874               	movf	__div_to_l_@f2,w
  5870  08E5  02F0               	subwf	__div_to_l_@f1,f
  5871  08E6  0875               	movf	__div_to_l_@f2+1,w
  5872  08E7  1C03               	skipc
  5873  08E8  0F75               	incfsz	__div_to_l_@f2+1,w
  5874  08E9  02F1               	subwf	__div_to_l_@f1+1,f
  5875  08EA  0876               	movf	__div_to_l_@f2+2,w
  5876  08EB  1C03               	skipc
  5877  08EC  0F76               	incfsz	__div_to_l_@f2+2,w
  5878  08ED  02F2               	subwf	__div_to_l_@f1+2,f
  5879  08EE  0877               	movf	__div_to_l_@f2+3,w
  5880  08EF  1C03               	skipc
  5881  08F0  0F77               	incfsz	__div_to_l_@f2+3,w
  5882  08F1  02F3               	subwf	__div_to_l_@f1+3,f
  5883  08F2                     l3089:
  5884  08F2  1420               	bsf	__div_to_l_@quot,0
  5885  08F3                     l3091:
  5886  08F3  3001               	movlw	1
  5887  08F4  00F8               	movwf	??__div_to_l_
  5888  08F5                     u4675:
  5889  08F5  1003               	clrc
  5890  08F6  0DF0               	rlf	__div_to_l_@f1,f
  5891  08F7  0DF1               	rlf	__div_to_l_@f1+1,f
  5892  08F8  0DF2               	rlf	__div_to_l_@f1+2,f
  5893  08F9  0DF3               	rlf	__div_to_l_@f1+3,f
  5894  08FA  0BF8               	decfsz	??__div_to_l_,f
  5895  08FB  28F5               	goto	u4675
  5896  08FC                     l3093:
  5897  08FC  3001               	movlw	1
  5898  08FD  02A4               	subwf	__div_to_l_@cntr,f
  5899  08FE  1D03               	btfss	3,2
  5900  08FF  2901               	goto	u4681
  5901  0900  2902               	goto	u4680
  5902  0901                     u4681:
  5903  0901  28C9               	goto	l3083
  5904  0902                     u4680:
  5905  0902                     l590:
  5906  0902  1FA5               	btfss	__div_to_l_@exp1,7
  5907  0903  2905               	goto	u4691
  5908  0904  2906               	goto	u4690
  5909  0905                     u4691:
  5910  0905  2920               	goto	l3103
  5911  0906                     u4690:
  5912  0906                     l3095:
  5913  0906  0825               	movf	__div_to_l_@exp1,w
  5914  0907  3A80               	xorlw	128
  5915  0908  3E9F               	addlw	159
  5916  0909  1803               	skipnc
  5917  090A  290C               	goto	u4701
  5918  090B  290D               	goto	u4700
  5919  090C                     u4701:
  5920  090C  290E               	goto	l3101
  5921  090D                     u4700:
  5922  090D  288F               	goto	l3065
  5923  090E                     l3101:
  5924  090E  3001               	movlw	1
  5925  090F                     u4715:
  5926  090F  1003               	clrc
  5927  0910  0CA3               	rrf	__div_to_l_@quot+3,f
  5928  0911  0CA2               	rrf	__div_to_l_@quot+2,f
  5929  0912  0CA1               	rrf	__div_to_l_@quot+1,f
  5930  0913  0CA0               	rrf	__div_to_l_@quot,f
  5931  0914  3EFF               	addlw	-1
  5932  0915  1D03               	skipz
  5933  0916  290F               	goto	u4715
  5934  0917  3001               	movlw	1
  5935  0918  00F8               	movwf	??__div_to_l_
  5936  0919  0878               	movf	??__div_to_l_,w
  5937  091A  07A5               	addwf	__div_to_l_@exp1,f
  5938  091B  1D03               	btfss	3,2
  5939  091C  291E               	goto	u4721
  5940  091D  291F               	goto	u4720
  5941  091E                     u4721:
  5942  091E  290E               	goto	l3101
  5943  091F                     u4720:
  5944  091F  2937               	goto	l3111
  5945  0920                     l3103:
  5946  0920  3020               	movlw	32
  5947  0921  0225               	subwf	__div_to_l_@exp1,w
  5948  0922  1C03               	skipc
  5949  0923  2925               	goto	u4731
  5950  0924  2926               	goto	u4730
  5951  0925                     u4731:
  5952  0925  2932               	goto	l597
  5953  0926                     u4730:
  5954  0926  288F               	goto	l3065
  5955  0927                     l3109:
  5956  0927  3001               	movlw	1
  5957  0928  00F8               	movwf	??__div_to_l_
  5958  0929                     u4745:
  5959  0929  1003               	clrc
  5960  092A  0DA0               	rlf	__div_to_l_@quot,f
  5961  092B  0DA1               	rlf	__div_to_l_@quot+1,f
  5962  092C  0DA2               	rlf	__div_to_l_@quot+2,f
  5963  092D  0DA3               	rlf	__div_to_l_@quot+3,f
  5964  092E  0BF8               	decfsz	??__div_to_l_,f
  5965  092F  2929               	goto	u4745
  5966  0930  3001               	movlw	1
  5967  0931  02A5               	subwf	__div_to_l_@exp1,f
  5968  0932                     l597:
  5969  0932  0825               	movf	__div_to_l_@exp1,w
  5970  0933  1D03               	btfss	3,2
  5971  0934  2936               	goto	u4751
  5972  0935  2937               	goto	u4750
  5973  0936                     u4751:
  5974  0936  2927               	goto	l3109
  5975  0937                     u4750:
  5976  0937                     l3111:
  5977  0937  0823               	movf	__div_to_l_@quot+3,w
  5978  0938  00F3               	movwf	?__div_to_l_+3
  5979  0939  0822               	movf	__div_to_l_@quot+2,w
  5980  093A  00F2               	movwf	?__div_to_l_+2
  5981  093B  0821               	movf	__div_to_l_@quot+1,w
  5982  093C  00F1               	movwf	?__div_to_l_+1
  5983  093D  0820               	movf	__div_to_l_@quot,w
  5984  093E  00F0               	movwf	?__div_to_l_
  5985  093F                     l586:
  5986  093F  0008               	return
  5987  0940                     __end_of__div_to_l_:
  5988                           
  5989                           	psect	text13
  5990  1A58                     __ptext13:	
  5991 ;; *************** function ___wmul *****************
  5992 ;; Defined at:
  5993 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  5994 ;; Parameters:    Size  Location     Type
  5995 ;;  multiplier      2    0[COMMON] unsigned int 
  5996 ;;  multiplicand    2    2[COMMON] unsigned int 
  5997 ;; Auto vars:     Size  Location     Type
  5998 ;;  product         2    4[COMMON] unsigned int 
  5999 ;; Return value:  Size  Location     Type
  6000 ;;                  2    0[COMMON] unsigned int 
  6001 ;; Registers used:
  6002 ;;		wreg, status,2, status,0
  6003 ;; Tracked objects:
  6004 ;;		On entry : 0/0
  6005 ;;		On exit  : 0/0
  6006 ;;		Unchanged: 0/0
  6007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6008 ;;      Params:         4       0       0       0       0
  6009 ;;      Locals:         2       0       0       0       0
  6010 ;;      Temps:          0       0       0       0       0
  6011 ;;      Totals:         6       0       0       0       0
  6012 ;;Total ram usage:        6 bytes
  6013 ;; Hardware stack levels used:    1
  6014 ;; This function calls:
  6015 ;;		Nothing
  6016 ;; This function is called by:
  6017 ;;		_sprintf
  6018 ;; This function uses a non-reentrant model
  6019 ;;
  6020                           
  6021                           
  6022                           ;psect for function ___wmul
  6023  1A58                     ___wmul:
  6024  1A58                     l3115:	
  6025                           ;incstack = 0
  6026                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6027                           
  6028  1A58  01F4               	clrf	___wmul@product
  6029  1A59  01F5               	clrf	___wmul@product+1
  6030  1A5A                     l3117:
  6031  1A5A  1C70               	btfss	___wmul@multiplier,0
  6032  1A5B  2A5D               	goto	u4761
  6033  1A5C  2A5E               	goto	u4760
  6034  1A5D                     u4761:
  6035  1A5D  2A64               	goto	l416
  6036  1A5E                     u4760:
  6037  1A5E                     l3119:
  6038  1A5E  0872               	movf	___wmul@multiplicand,w
  6039  1A5F  07F4               	addwf	___wmul@product,f
  6040  1A60  1803               	skipnc
  6041  1A61  0AF5               	incf	___wmul@product+1,f
  6042  1A62  0873               	movf	___wmul@multiplicand+1,w
  6043  1A63  07F5               	addwf	___wmul@product+1,f
  6044  1A64                     l416:
  6045  1A64  3001               	movlw	1
  6046  1A65                     u4775:
  6047  1A65  1003               	clrc
  6048  1A66  0DF2               	rlf	___wmul@multiplicand,f
  6049  1A67  0DF3               	rlf	___wmul@multiplicand+1,f
  6050  1A68  3EFF               	addlw	-1
  6051  1A69  1D03               	skipz
  6052  1A6A  2A65               	goto	u4775
  6053  1A6B                     l3121:
  6054  1A6B  3001               	movlw	1
  6055  1A6C                     u4785:
  6056  1A6C  1003               	clrc
  6057  1A6D  0CF1               	rrf	___wmul@multiplier+1,f
  6058  1A6E  0CF0               	rrf	___wmul@multiplier,f
  6059  1A6F  3EFF               	addlw	-1
  6060  1A70  1D03               	skipz
  6061  1A71  2A6C               	goto	u4785
  6062  1A72                     l3123:
  6063  1A72  0870               	movf	___wmul@multiplier,w
  6064  1A73  0471               	iorwf	___wmul@multiplier+1,w
  6065  1A74  1D03               	btfss	3,2
  6066  1A75  2A77               	goto	u4791
  6067  1A76  2A78               	goto	u4790
  6068  1A77                     u4791:
  6069  1A77  2A5A               	goto	l3117
  6070  1A78                     u4790:
  6071  1A78                     l3125:
  6072  1A78  0875               	movf	___wmul@product+1,w
  6073  1A79  00F1               	movwf	?___wmul+1
  6074  1A7A  0874               	movf	___wmul@product,w
  6075  1A7B  00F0               	movwf	?___wmul
  6076  1A7C                     l418:
  6077  1A7C  0008               	return
  6078  1A7D                     __end_of___wmul:
  6079                           
  6080                           	psect	text14
  6081  1CA1                     __ptext14:	
  6082 ;; *************** function ___llmod *****************
  6083 ;; Defined at:
  6084 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  6085 ;; Parameters:    Size  Location     Type
  6086 ;;  divisor         4    0[BANK0 ] unsigned long 
  6087 ;;  dividend        4    4[BANK0 ] unsigned long 
  6088 ;; Auto vars:     Size  Location     Type
  6089 ;;  counter         1    9[BANK0 ] unsigned char 
  6090 ;; Return value:  Size  Location     Type
  6091 ;;                  4    0[BANK0 ] unsigned long 
  6092 ;; Registers used:
  6093 ;;		wreg, status,2, status,0
  6094 ;; Tracked objects:
  6095 ;;		On entry : 0/0
  6096 ;;		On exit  : 0/0
  6097 ;;		Unchanged: 0/0
  6098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6099 ;;      Params:         0       8       0       0       0
  6100 ;;      Locals:         0       1       0       0       0
  6101 ;;      Temps:          0       1       0       0       0
  6102 ;;      Totals:         0      10       0       0       0
  6103 ;;Total ram usage:       10 bytes
  6104 ;; Hardware stack levels used:    1
  6105 ;; This function calls:
  6106 ;;		Nothing
  6107 ;; This function is called by:
  6108 ;;		_sprintf
  6109 ;; This function uses a non-reentrant model
  6110 ;;
  6111                           
  6112                           
  6113                           ;psect for function ___llmod
  6114  1CA1                     ___llmod:
  6115  1CA1                     l3229:	
  6116                           ;incstack = 0
  6117                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6118                           
  6119  1CA1  1283               	bcf	3,5	;RP0=0, select bank0
  6120  1CA2  1303               	bcf	3,6	;RP1=0, select bank0
  6121  1CA3  0823               	movf	___llmod@divisor+3,w
  6122  1CA4  0422               	iorwf	___llmod@divisor+2,w
  6123  1CA5  0421               	iorwf	___llmod@divisor+1,w
  6124  1CA6  0420               	iorwf	___llmod@divisor,w
  6125  1CA7  1903               	skipnz
  6126  1CA8  2CAA               	goto	u5081
  6127  1CA9  2CAB               	goto	u5080
  6128  1CAA                     u5081:
  6129  1CAA  2CEE               	goto	l3245
  6130  1CAB                     u5080:
  6131  1CAB                     l3231:
  6132  1CAB  01A9               	clrf	___llmod@counter
  6133  1CAC  0AA9               	incf	___llmod@counter,f
  6134  1CAD  2CBB               	goto	l3235
  6135  1CAE                     l3233:
  6136  1CAE  3001               	movlw	1
  6137  1CAF  00A8               	movwf	??___llmod
  6138  1CB0                     u5095:
  6139  1CB0  1003               	clrc
  6140  1CB1  0DA0               	rlf	___llmod@divisor,f
  6141  1CB2  0DA1               	rlf	___llmod@divisor+1,f
  6142  1CB3  0DA2               	rlf	___llmod@divisor+2,f
  6143  1CB4  0DA3               	rlf	___llmod@divisor+3,f
  6144  1CB5  0BA8               	decfsz	??___llmod,f
  6145  1CB6  2CB0               	goto	u5095
  6146  1CB7  3001               	movlw	1
  6147  1CB8  00A8               	movwf	??___llmod
  6148  1CB9  0828               	movf	??___llmod,w
  6149  1CBA  07A9               	addwf	___llmod@counter,f
  6150  1CBB                     l3235:
  6151  1CBB  1FA3               	btfss	___llmod@divisor+3,7
  6152  1CBC  2CBE               	goto	u5101
  6153  1CBD  2CBF               	goto	u5100
  6154  1CBE                     u5101:
  6155  1CBE  2CAE               	goto	l3233
  6156  1CBF                     u5100:
  6157  1CBF                     l3237:
  6158  1CBF  0823               	movf	___llmod@divisor+3,w
  6159  1CC0  0227               	subwf	___llmod@dividend+3,w
  6160  1CC1  1D03               	skipz
  6161  1CC2  2CCD               	goto	u5115
  6162  1CC3  0822               	movf	___llmod@divisor+2,w
  6163  1CC4  0226               	subwf	___llmod@dividend+2,w
  6164  1CC5  1D03               	skipz
  6165  1CC6  2CCD               	goto	u5115
  6166  1CC7  0821               	movf	___llmod@divisor+1,w
  6167  1CC8  0225               	subwf	___llmod@dividend+1,w
  6168  1CC9  1D03               	skipz
  6169  1CCA  2CCD               	goto	u5115
  6170  1CCB  0820               	movf	___llmod@divisor,w
  6171  1CCC  0224               	subwf	___llmod@dividend,w
  6172  1CCD                     u5115:
  6173  1CCD  1C03               	skipc
  6174  1CCE  2CD0               	goto	u5111
  6175  1CCF  2CD1               	goto	u5110
  6176  1CD0                     u5111:
  6177  1CD0  2CDF               	goto	l3241
  6178  1CD1                     u5110:
  6179  1CD1                     l3239:
  6180  1CD1  0820               	movf	___llmod@divisor,w
  6181  1CD2  02A4               	subwf	___llmod@dividend,f
  6182  1CD3  0821               	movf	___llmod@divisor+1,w
  6183  1CD4  1C03               	skipc
  6184  1CD5  0F21               	incfsz	___llmod@divisor+1,w
  6185  1CD6  02A5               	subwf	___llmod@dividend+1,f
  6186  1CD7  0822               	movf	___llmod@divisor+2,w
  6187  1CD8  1C03               	skipc
  6188  1CD9  0F22               	incfsz	___llmod@divisor+2,w
  6189  1CDA  02A6               	subwf	___llmod@dividend+2,f
  6190  1CDB  0823               	movf	___llmod@divisor+3,w
  6191  1CDC  1C03               	skipc
  6192  1CDD  0F23               	incfsz	___llmod@divisor+3,w
  6193  1CDE  02A7               	subwf	___llmod@dividend+3,f
  6194  1CDF                     l3241:
  6195  1CDF  3001               	movlw	1
  6196  1CE0                     u5125:
  6197  1CE0  1003               	clrc
  6198  1CE1  0CA3               	rrf	___llmod@divisor+3,f
  6199  1CE2  0CA2               	rrf	___llmod@divisor+2,f
  6200  1CE3  0CA1               	rrf	___llmod@divisor+1,f
  6201  1CE4  0CA0               	rrf	___llmod@divisor,f
  6202  1CE5  3EFF               	addlw	-1
  6203  1CE6  1D03               	skipz
  6204  1CE7  2CE0               	goto	u5125
  6205  1CE8                     l3243:
  6206  1CE8  3001               	movlw	1
  6207  1CE9  02A9               	subwf	___llmod@counter,f
  6208  1CEA  1D03               	btfss	3,2
  6209  1CEB  2CED               	goto	u5131
  6210  1CEC  2CEE               	goto	u5130
  6211  1CED                     u5131:
  6212  1CED  2CBF               	goto	l3237
  6213  1CEE                     u5130:
  6214  1CEE                     l3245:
  6215  1CEE  0827               	movf	___llmod@dividend+3,w
  6216  1CEF  00A3               	movwf	?___llmod+3
  6217  1CF0  0826               	movf	___llmod@dividend+2,w
  6218  1CF1  00A2               	movwf	?___llmod+2
  6219  1CF2  0825               	movf	___llmod@dividend+1,w
  6220  1CF3  00A1               	movwf	?___llmod+1
  6221  1CF4  0824               	movf	___llmod@dividend,w
  6222  1CF5  00A0               	movwf	?___llmod
  6223  1CF6                     l672:
  6224  1CF6  0008               	return
  6225  1CF7                     __end_of___llmod:
  6226                           
  6227                           	psect	text15
  6228  1D50                     __ptext15:	
  6229 ;; *************** function ___lldiv *****************
  6230 ;; Defined at:
  6231 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  6232 ;; Parameters:    Size  Location     Type
  6233 ;;  divisor         4    0[COMMON] unsigned long 
  6234 ;;  dividend        4    4[COMMON] unsigned long 
  6235 ;; Auto vars:     Size  Location     Type
  6236 ;;  quotient        4    9[COMMON] unsigned long 
  6237 ;;  counter         1   13[COMMON] unsigned char 
  6238 ;; Return value:  Size  Location     Type
  6239 ;;                  4    0[COMMON] unsigned long 
  6240 ;; Registers used:
  6241 ;;		wreg, status,2, status,0
  6242 ;; Tracked objects:
  6243 ;;		On entry : 0/0
  6244 ;;		On exit  : 0/0
  6245 ;;		Unchanged: 0/0
  6246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6247 ;;      Params:         8       0       0       0       0
  6248 ;;      Locals:         5       0       0       0       0
  6249 ;;      Temps:          1       0       0       0       0
  6250 ;;      Totals:        14       0       0       0       0
  6251 ;;Total ram usage:       14 bytes
  6252 ;; Hardware stack levels used:    1
  6253 ;; This function calls:
  6254 ;;		Nothing
  6255 ;; This function is called by:
  6256 ;;		_sprintf
  6257 ;; This function uses a non-reentrant model
  6258 ;;
  6259                           
  6260                           
  6261                           ;psect for function ___lldiv
  6262  1D50                     ___lldiv:
  6263  1D50                     l3129:	
  6264                           ;incstack = 0
  6265                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6266                           
  6267  1D50  3000               	movlw	0
  6268  1D51  00FC               	movwf	___lldiv@quotient+3
  6269  1D52  3000               	movlw	0
  6270  1D53  00FB               	movwf	___lldiv@quotient+2
  6271  1D54  3000               	movlw	0
  6272  1D55  00FA               	movwf	___lldiv@quotient+1
  6273  1D56  3000               	movlw	0
  6274  1D57  00F9               	movwf	___lldiv@quotient
  6275  1D58  0873               	movf	___lldiv@divisor+3,w
  6276  1D59  0472               	iorwf	___lldiv@divisor+2,w
  6277  1D5A  0471               	iorwf	___lldiv@divisor+1,w
  6278  1D5B  0470               	iorwf	___lldiv@divisor,w
  6279  1D5C  1903               	skipnz
  6280  1D5D  2D5F               	goto	u4801
  6281  1D5E  2D60               	goto	u4800
  6282  1D5F                     u4801:
  6283  1D5F  2DAD               	goto	l3149
  6284  1D60                     u4800:
  6285  1D60                     l3131:
  6286  1D60  01FD               	clrf	___lldiv@counter
  6287  1D61  0AFD               	incf	___lldiv@counter,f
  6288  1D62  2D70               	goto	l3135
  6289  1D63                     l3133:
  6290  1D63  3001               	movlw	1
  6291  1D64  00F8               	movwf	??___lldiv
  6292  1D65                     u4815:
  6293  1D65  1003               	clrc
  6294  1D66  0DF0               	rlf	___lldiv@divisor,f
  6295  1D67  0DF1               	rlf	___lldiv@divisor+1,f
  6296  1D68  0DF2               	rlf	___lldiv@divisor+2,f
  6297  1D69  0DF3               	rlf	___lldiv@divisor+3,f
  6298  1D6A  0BF8               	decfsz	??___lldiv,f
  6299  1D6B  2D65               	goto	u4815
  6300  1D6C  3001               	movlw	1
  6301  1D6D  00F8               	movwf	??___lldiv
  6302  1D6E  0878               	movf	??___lldiv,w
  6303  1D6F  07FD               	addwf	___lldiv@counter,f
  6304  1D70                     l3135:
  6305  1D70  1FF3               	btfss	___lldiv@divisor+3,7
  6306  1D71  2D73               	goto	u4821
  6307  1D72  2D74               	goto	u4820
  6308  1D73                     u4821:
  6309  1D73  2D63               	goto	l3133
  6310  1D74                     u4820:
  6311  1D74                     l3137:
  6312  1D74  3001               	movlw	1
  6313  1D75  00F8               	movwf	??___lldiv
  6314  1D76                     u4835:
  6315  1D76  1003               	clrc
  6316  1D77  0DF9               	rlf	___lldiv@quotient,f
  6317  1D78  0DFA               	rlf	___lldiv@quotient+1,f
  6318  1D79  0DFB               	rlf	___lldiv@quotient+2,f
  6319  1D7A  0DFC               	rlf	___lldiv@quotient+3,f
  6320  1D7B  0BF8               	decfsz	??___lldiv,f
  6321  1D7C  2D76               	goto	u4835
  6322  1D7D                     l3139:
  6323  1D7D  0873               	movf	___lldiv@divisor+3,w
  6324  1D7E  0277               	subwf	___lldiv@dividend+3,w
  6325  1D7F  1D03               	skipz
  6326  1D80  2D8B               	goto	u4845
  6327  1D81  0872               	movf	___lldiv@divisor+2,w
  6328  1D82  0276               	subwf	___lldiv@dividend+2,w
  6329  1D83  1D03               	skipz
  6330  1D84  2D8B               	goto	u4845
  6331  1D85  0871               	movf	___lldiv@divisor+1,w
  6332  1D86  0275               	subwf	___lldiv@dividend+1,w
  6333  1D87  1D03               	skipz
  6334  1D88  2D8B               	goto	u4845
  6335  1D89  0870               	movf	___lldiv@divisor,w
  6336  1D8A  0274               	subwf	___lldiv@dividend,w
  6337  1D8B                     u4845:
  6338  1D8B  1C03               	skipc
  6339  1D8C  2D8E               	goto	u4841
  6340  1D8D  2D8F               	goto	u4840
  6341  1D8E                     u4841:
  6342  1D8E  2D9E               	goto	l3145
  6343  1D8F                     u4840:
  6344  1D8F                     l3141:
  6345  1D8F  0870               	movf	___lldiv@divisor,w
  6346  1D90  02F4               	subwf	___lldiv@dividend,f
  6347  1D91  0871               	movf	___lldiv@divisor+1,w
  6348  1D92  1C03               	skipc
  6349  1D93  0F71               	incfsz	___lldiv@divisor+1,w
  6350  1D94  02F5               	subwf	___lldiv@dividend+1,f
  6351  1D95  0872               	movf	___lldiv@divisor+2,w
  6352  1D96  1C03               	skipc
  6353  1D97  0F72               	incfsz	___lldiv@divisor+2,w
  6354  1D98  02F6               	subwf	___lldiv@dividend+2,f
  6355  1D99  0873               	movf	___lldiv@divisor+3,w
  6356  1D9A  1C03               	skipc
  6357  1D9B  0F73               	incfsz	___lldiv@divisor+3,w
  6358  1D9C  02F7               	subwf	___lldiv@dividend+3,f
  6359  1D9D                     l3143:
  6360  1D9D  1479               	bsf	___lldiv@quotient,0
  6361  1D9E                     l3145:
  6362  1D9E  3001               	movlw	1
  6363  1D9F                     u4855:
  6364  1D9F  1003               	clrc
  6365  1DA0  0CF3               	rrf	___lldiv@divisor+3,f
  6366  1DA1  0CF2               	rrf	___lldiv@divisor+2,f
  6367  1DA2  0CF1               	rrf	___lldiv@divisor+1,f
  6368  1DA3  0CF0               	rrf	___lldiv@divisor,f
  6369  1DA4  3EFF               	addlw	-1
  6370  1DA5  1D03               	skipz
  6371  1DA6  2D9F               	goto	u4855
  6372  1DA7                     l3147:
  6373  1DA7  3001               	movlw	1
  6374  1DA8  02FD               	subwf	___lldiv@counter,f
  6375  1DA9  1D03               	btfss	3,2
  6376  1DAA  2DAC               	goto	u4861
  6377  1DAB  2DAD               	goto	u4860
  6378  1DAC                     u4861:
  6379  1DAC  2D74               	goto	l3137
  6380  1DAD                     u4860:
  6381  1DAD                     l3149:
  6382  1DAD  087C               	movf	___lldiv@quotient+3,w
  6383  1DAE  00F3               	movwf	?___lldiv+3
  6384  1DAF  087B               	movf	___lldiv@quotient+2,w
  6385  1DB0  00F2               	movwf	?___lldiv+2
  6386  1DB1  087A               	movf	___lldiv@quotient+1,w
  6387  1DB2  00F1               	movwf	?___lldiv+1
  6388  1DB3  0879               	movf	___lldiv@quotient,w
  6389  1DB4  00F0               	movwf	?___lldiv
  6390  1DB5                     l452:
  6391  1DB5  0008               	return
  6392  1DB6                     __end_of___lldiv:
  6393                           
  6394                           	psect	text16
  6395  0806                     __ptext16:	
  6396 ;; *************** function ___fltol *****************
  6397 ;; Defined at:
  6398 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  6399 ;; Parameters:    Size  Location     Type
  6400 ;;  f1              4   49[BANK0 ] unsigned long 
  6401 ;; Auto vars:     Size  Location     Type
  6402 ;;  exp1            1   59[BANK0 ] unsigned char 
  6403 ;;  sign1           1   58[BANK0 ] unsigned char 
  6404 ;; Return value:  Size  Location     Type
  6405 ;;                  4   49[BANK0 ] long 
  6406 ;; Registers used:
  6407 ;;		wreg, status,2, status,0
  6408 ;; Tracked objects:
  6409 ;;		On entry : 0/0
  6410 ;;		On exit  : 0/0
  6411 ;;		Unchanged: 0/0
  6412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6413 ;;      Params:         0       4       0       0       0
  6414 ;;      Locals:         0       2       0       0       0
  6415 ;;      Temps:          0       5       0       0       0
  6416 ;;      Totals:         0      11       0       0       0
  6417 ;;Total ram usage:       11 bytes
  6418 ;; Hardware stack levels used:    1
  6419 ;; This function calls:
  6420 ;;		Nothing
  6421 ;; This function is called by:
  6422 ;;		_sprintf
  6423 ;; This function uses a non-reentrant model
  6424 ;;
  6425                           
  6426                           
  6427                           ;psect for function ___fltol
  6428  0806                     ___fltol:
  6429  0806                     l3193:	
  6430                           ;incstack = 0
  6431                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6432                           
  6433  0806  1003               	clrc
  6434  0807  1283               	bcf	3,5	;RP0=0, select bank0
  6435  0808  1303               	bcf	3,6	;RP1=0, select bank0
  6436  0809  0D53               	rlf	___fltol@f1+2,w
  6437  080A  0D54               	rlf	___fltol@f1+3,w
  6438  080B  00D5               	movwf	??___fltol
  6439  080C  0855               	movf	??___fltol,w
  6440  080D  00DB               	movwf	___fltol@exp1
  6441  080E  085B               	movf	___fltol@exp1,w
  6442  080F  1D03               	btfss	3,2
  6443  0810  2812               	goto	u4981
  6444  0811  2813               	goto	u4980
  6445  0812                     u4981:
  6446  0812  281C               	goto	l3199
  6447  0813                     u4980:
  6448  0813                     l3195:
  6449  0813  3000               	movlw	0
  6450  0814  00D4               	movwf	?___fltol+3
  6451  0815  3000               	movlw	0
  6452  0816  00D3               	movwf	?___fltol+2
  6453  0817  3000               	movlw	0
  6454  0818  00D2               	movwf	?___fltol+1
  6455  0819  3000               	movlw	0
  6456  081A  00D1               	movwf	?___fltol
  6457  081B  2881               	goto	l619
  6458  081C                     l3199:
  6459  081C  0851               	movf	___fltol@f1,w
  6460  081D  00D5               	movwf	??___fltol
  6461  081E  0852               	movf	___fltol@f1+1,w
  6462  081F  00D6               	movwf	??___fltol+1
  6463  0820  0853               	movf	___fltol@f1+2,w
  6464  0821  00D7               	movwf	??___fltol+2
  6465  0822  0854               	movf	___fltol@f1+3,w
  6466  0823  00D8               	movwf	??___fltol+3
  6467  0824  301F               	movlw	31
  6468  0825                     u4995:
  6469  0825  1003               	clrc
  6470  0826  0CD8               	rrf	??___fltol+3,f
  6471  0827  0CD7               	rrf	??___fltol+2,f
  6472  0828  0CD6               	rrf	??___fltol+1,f
  6473  0829  0CD5               	rrf	??___fltol,f
  6474  082A                     u4990:
  6475  082A  3EFF               	addlw	-1
  6476  082B  1D03               	skipz
  6477  082C  2825               	goto	u4995
  6478  082D  0855               	movf	??___fltol,w
  6479  082E  00D9               	movwf	??___fltol+4
  6480  082F  0859               	movf	??___fltol+4,w
  6481  0830  00DA               	movwf	___fltol@sign1
  6482  0831                     l3201:
  6483  0831  17D3               	bsf	___fltol@f1+2,7
  6484  0832                     l3203:
  6485  0832  30FF               	movlw	255
  6486  0833  05D1               	andwf	___fltol@f1,f
  6487  0834  30FF               	movlw	255
  6488  0835  05D2               	andwf	___fltol@f1+1,f
  6489  0836  30FF               	movlw	255
  6490  0837  05D3               	andwf	___fltol@f1+2,f
  6491  0838  3000               	movlw	0
  6492  0839  05D4               	andwf	___fltol@f1+3,f
  6493  083A                     l3205:
  6494  083A  3096               	movlw	150
  6495  083B  02DB               	subwf	___fltol@exp1,f
  6496  083C                     l3207:
  6497  083C  1FDB               	btfss	___fltol@exp1,7
  6498  083D  283F               	goto	u5001
  6499  083E  2840               	goto	u5000
  6500  083F                     u5001:
  6501  083F  285A               	goto	l3217
  6502  0840                     u5000:
  6503  0840                     l3209:
  6504  0840  085B               	movf	___fltol@exp1,w
  6505  0841  3A80               	xorlw	128
  6506  0842  3E97               	addlw	151
  6507  0843  1803               	skipnc
  6508  0844  2846               	goto	u5011
  6509  0845  2847               	goto	u5010
  6510  0846                     u5011:
  6511  0846  2848               	goto	l3215
  6512  0847                     u5010:
  6513  0847  2813               	goto	l3195
  6514  0848                     l3215:
  6515  0848  3001               	movlw	1
  6516  0849                     u5025:
  6517  0849  1003               	clrc
  6518  084A  0CD4               	rrf	___fltol@f1+3,f
  6519  084B  0CD3               	rrf	___fltol@f1+2,f
  6520  084C  0CD2               	rrf	___fltol@f1+1,f
  6521  084D  0CD1               	rrf	___fltol@f1,f
  6522  084E  3EFF               	addlw	-1
  6523  084F  1D03               	skipz
  6524  0850  2849               	goto	u5025
  6525  0851  3001               	movlw	1
  6526  0852  00D5               	movwf	??___fltol
  6527  0853  0855               	movf	??___fltol,w
  6528  0854  07DB               	addwf	___fltol@exp1,f
  6529  0855  1D03               	btfss	3,2
  6530  0856  2858               	goto	u5031
  6531  0857  2859               	goto	u5030
  6532  0858                     u5031:
  6533  0858  2848               	goto	l3215
  6534  0859                     u5030:
  6535  0859  2871               	goto	l3225
  6536  085A                     l3217:
  6537  085A  3020               	movlw	32
  6538  085B  025B               	subwf	___fltol@exp1,w
  6539  085C  1C03               	skipc
  6540  085D  285F               	goto	u5041
  6541  085E  2860               	goto	u5040
  6542  085F                     u5041:
  6543  085F  286C               	goto	l626
  6544  0860                     u5040:
  6545  0860  2813               	goto	l3195
  6546  0861                     l3223:
  6547  0861  3001               	movlw	1
  6548  0862  00D5               	movwf	??___fltol
  6549  0863                     u5055:
  6550  0863  1003               	clrc
  6551  0864  0DD1               	rlf	___fltol@f1,f
  6552  0865  0DD2               	rlf	___fltol@f1+1,f
  6553  0866  0DD3               	rlf	___fltol@f1+2,f
  6554  0867  0DD4               	rlf	___fltol@f1+3,f
  6555  0868  0BD5               	decfsz	??___fltol,f
  6556  0869  2863               	goto	u5055
  6557  086A  3001               	movlw	1
  6558  086B  02DB               	subwf	___fltol@exp1,f
  6559  086C                     l626:
  6560  086C  085B               	movf	___fltol@exp1,w
  6561  086D  1D03               	btfss	3,2
  6562  086E  2870               	goto	u5061
  6563  086F  2871               	goto	u5060
  6564  0870                     u5061:
  6565  0870  2861               	goto	l3223
  6566  0871                     u5060:
  6567  0871                     l3225:
  6568  0871  085A               	movf	___fltol@sign1,w
  6569  0872  1903               	btfsc	3,2
  6570  0873  2875               	goto	u5071
  6571  0874  2876               	goto	u5070
  6572  0875                     u5071:
  6573  0875  2881               	goto	l629
  6574  0876                     u5070:
  6575  0876                     l3227:
  6576  0876  09D1               	comf	___fltol@f1,f
  6577  0877  09D2               	comf	___fltol@f1+1,f
  6578  0878  09D3               	comf	___fltol@f1+2,f
  6579  0879  09D4               	comf	___fltol@f1+3,f
  6580  087A  0AD1               	incf	___fltol@f1,f
  6581  087B  1903               	skipnz
  6582  087C  0AD2               	incf	___fltol@f1+1,f
  6583  087D  1903               	skipnz
  6584  087E  0AD3               	incf	___fltol@f1+2,f
  6585  087F  1903               	skipnz
  6586  0880  0AD4               	incf	___fltol@f1+3,f
  6587  0881                     l629:
  6588  0881                     l619:
  6589  0881  0008               	return
  6590  0882                     __end_of___fltol:
  6591                           
  6592                           	psect	text17
  6593  1A34                     __ptext17:	
  6594 ;; *************** function ___flsub *****************
  6595 ;; Defined at:
  6596 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  6597 ;; Parameters:    Size  Location     Type
  6598 ;;  a               4   70[BANK0 ] long 
  6599 ;;  b               4   74[BANK0 ] long 
  6600 ;; Auto vars:     Size  Location     Type
  6601 ;;		None
  6602 ;; Return value:  Size  Location     Type
  6603 ;;                  4   70[BANK0 ] long 
  6604 ;; Registers used:
  6605 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6606 ;; Tracked objects:
  6607 ;;		On entry : 0/0
  6608 ;;		On exit  : 0/0
  6609 ;;		Unchanged: 0/0
  6610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6611 ;;      Params:         0       8       0       0       0
  6612 ;;      Locals:         0       0       0       0       0
  6613 ;;      Temps:          0       0       0       0       0
  6614 ;;      Totals:         0       8       0       0       0
  6615 ;;Total ram usage:        8 bytes
  6616 ;; Hardware stack levels used:    1
  6617 ;; Hardware stack levels required when called:    1
  6618 ;; This function calls:
  6619 ;;		___fladd
  6620 ;; This function is called by:
  6621 ;;		_sprintf
  6622 ;; This function uses a non-reentrant model
  6623 ;;
  6624                           
  6625                           
  6626                           ;psect for function ___flsub
  6627  1A34                     ___flsub:
  6628  1A34                     l3249:	
  6629                           ;incstack = 0
  6630                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6631                           
  6632  1A34  3080               	movlw	128
  6633  1A35  1283               	bcf	3,5	;RP0=0, select bank0
  6634  1A36  1303               	bcf	3,6	;RP1=0, select bank0
  6635  1A37  06E9               	xorwf	___flsub@a+3,f
  6636  1A38                     l3251:
  6637  1A38  086D               	movf	___flsub@b+3,w
  6638  1A39  00D5               	movwf	___fladd@b+3
  6639  1A3A  086C               	movf	___flsub@b+2,w
  6640  1A3B  00D4               	movwf	___fladd@b+2
  6641  1A3C  086B               	movf	___flsub@b+1,w
  6642  1A3D  00D3               	movwf	___fladd@b+1
  6643  1A3E  086A               	movf	___flsub@b,w
  6644  1A3F  00D2               	movwf	___fladd@b
  6645  1A40  0869               	movf	___flsub@a+3,w
  6646  1A41  00D9               	movwf	___fladd@a+3
  6647  1A42  0868               	movf	___flsub@a+2,w
  6648  1A43  00D8               	movwf	___fladd@a+2
  6649  1A44  0867               	movf	___flsub@a+1,w
  6650  1A45  00D7               	movwf	___fladd@a+1
  6651  1A46  0866               	movf	___flsub@a,w
  6652  1A47  00D6               	movwf	___fladd@a
  6653  1A48  160A  118A  22B6  160A  158A  	fcall	___fladd
  6654  1A4D  1283               	bcf	3,5	;RP0=0, select bank0
  6655  1A4E  1303               	bcf	3,6	;RP1=0, select bank0
  6656  1A4F  0855               	movf	?___fladd+3,w
  6657  1A50  00E9               	movwf	?___flsub+3
  6658  1A51  0854               	movf	?___fladd+2,w
  6659  1A52  00E8               	movwf	?___flsub+2
  6660  1A53  0853               	movf	?___fladd+1,w
  6661  1A54  00E7               	movwf	?___flsub+1
  6662  1A55  0852               	movf	?___fladd,w
  6663  1A56  00E6               	movwf	?___flsub
  6664  1A57                     l789:
  6665  1A57  0008               	return
  6666  1A58                     __end_of___flsub:
  6667                           
  6668                           	psect	text18
  6669  12B6                     __ptext18:	
  6670 ;; *************** function ___fladd *****************
  6671 ;; Defined at:
  6672 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  6673 ;; Parameters:    Size  Location     Type
  6674 ;;  b               4   50[BANK0 ] long 
  6675 ;;  a               4   54[BANK0 ] long 
  6676 ;; Auto vars:     Size  Location     Type
  6677 ;;  grs             1   69[BANK0 ] unsigned char 
  6678 ;;  bexp            1   68[BANK0 ] unsigned char 
  6679 ;;  aexp            1   67[BANK0 ] unsigned char 
  6680 ;;  signs           1   66[BANK0 ] unsigned char 
  6681 ;; Return value:  Size  Location     Type
  6682 ;;                  4   50[BANK0 ] unsigned char 
  6683 ;; Registers used:
  6684 ;;		wreg, status,2, status,0, btemp+1
  6685 ;; Tracked objects:
  6686 ;;		On entry : 0/0
  6687 ;;		On exit  : 0/0
  6688 ;;		Unchanged: 0/0
  6689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6690 ;;      Params:         0       8       0       0       0
  6691 ;;      Locals:         0       4       0       0       0
  6692 ;;      Temps:          0       8       0       0       0
  6693 ;;      Totals:         0      20       0       0       0
  6694 ;;Total ram usage:       20 bytes
  6695 ;; Hardware stack levels used:    1
  6696 ;; This function calls:
  6697 ;;		Nothing
  6698 ;; This function is called by:
  6699 ;;		_sprintf
  6700 ;;		___flsub
  6701 ;; This function uses a non-reentrant model
  6702 ;;
  6703                           
  6704                           
  6705                           ;psect for function ___fladd
  6706  12B6                     ___fladd:
  6707  12B6                     l2567:	
  6708                           ;incstack = 0
  6709                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6710                           
  6711  12B6  1283               	bcf	3,5	;RP0=0, select bank0
  6712  12B7  1303               	bcf	3,6	;RP1=0, select bank0
  6713  12B8  0855               	movf	___fladd@b+3,w
  6714  12B9  3980               	andlw	128
  6715  12BA  00DA               	movwf	??___fladd
  6716  12BB  085A               	movf	??___fladd,w
  6717  12BC  00E2               	movwf	___fladd@signs
  6718  12BD                     l2569:
  6719  12BD  0855               	movf	___fladd@b+3,w
  6720  12BE  00DA               	movwf	??___fladd
  6721  12BF  075A               	addwf	??___fladd,w
  6722  12C0  00DB               	movwf	??___fladd+1
  6723  12C1  085B               	movf	??___fladd+1,w
  6724  12C2  00E4               	movwf	___fladd@bexp
  6725  12C3                     l2571:
  6726  12C3  1FD4               	btfss	___fladd@b+2,7
  6727  12C4  2AC6               	goto	u3391
  6728  12C5  2AC7               	goto	u3390
  6729  12C6                     u3391:
  6730  12C6  2AC8               	goto	l2575
  6731  12C7                     u3390:
  6732  12C7                     l2573:
  6733  12C7  1464               	bsf	___fladd@bexp,0
  6734  12C8                     l2575:
  6735  12C8  0864               	movf	___fladd@bexp,w
  6736  12C9  1903               	btfsc	3,2
  6737  12CA  2ACC               	goto	u3401
  6738  12CB  2ACD               	goto	u3400
  6739  12CC                     u3401:
  6740  12CC  2ADD               	goto	l2585
  6741  12CD                     u3400:
  6742  12CD                     l2577:
  6743  12CD  0A64               	incf	___fladd@bexp,w
  6744  12CE  1D03               	btfss	3,2
  6745  12CF  2AD1               	goto	u3411
  6746  12D0  2AD2               	goto	u3410
  6747  12D1                     u3411:
  6748  12D1  2ADA               	goto	l2581
  6749  12D2                     u3410:
  6750  12D2                     l2579:
  6751  12D2  3000               	movlw	0
  6752  12D3  00D5               	movwf	___fladd@b+3
  6753  12D4  3000               	movlw	0
  6754  12D5  00D4               	movwf	___fladd@b+2
  6755  12D6  3000               	movlw	0
  6756  12D7  00D3               	movwf	___fladd@b+1
  6757  12D8  3000               	movlw	0
  6758  12D9  00D2               	movwf	___fladd@b
  6759  12DA                     l2581:
  6760  12DA  17D4               	bsf	___fladd@b+2,7
  6761  12DB                     l2583:
  6762  12DB  01D5               	clrf	___fladd@b+3
  6763  12DC  2AE5               	goto	l2587
  6764  12DD                     l2585:
  6765  12DD  3000               	movlw	0
  6766  12DE  00D5               	movwf	___fladd@b+3
  6767  12DF  3000               	movlw	0
  6768  12E0  00D4               	movwf	___fladd@b+2
  6769  12E1  3000               	movlw	0
  6770  12E2  00D3               	movwf	___fladd@b+1
  6771  12E3  3000               	movlw	0
  6772  12E4  00D2               	movwf	___fladd@b
  6773  12E5                     l2587:
  6774  12E5  0859               	movf	___fladd@a+3,w
  6775  12E6  3980               	andlw	128
  6776  12E7  00DA               	movwf	??___fladd
  6777  12E8  085A               	movf	??___fladd,w
  6778  12E9  00E3               	movwf	___fladd@aexp
  6779  12EA                     l2589:
  6780  12EA  0863               	movf	___fladd@aexp,w
  6781  12EB  0662               	xorwf	___fladd@signs,w
  6782  12EC  1903               	skipnz
  6783  12ED  2AEF               	goto	u3421
  6784  12EE  2AF0               	goto	u3420
  6785  12EF                     u3421:
  6786  12EF  2AF1               	goto	l2593
  6787  12F0                     u3420:
  6788  12F0                     l2591:
  6789  12F0  1762               	bsf	___fladd@signs,6
  6790  12F1                     l2593:
  6791  12F1  0859               	movf	___fladd@a+3,w
  6792  12F2  00DA               	movwf	??___fladd
  6793  12F3  075A               	addwf	??___fladd,w
  6794  12F4  00DB               	movwf	??___fladd+1
  6795  12F5  085B               	movf	??___fladd+1,w
  6796  12F6  00E3               	movwf	___fladd@aexp
  6797  12F7                     l2595:
  6798  12F7  1FD8               	btfss	___fladd@a+2,7
  6799  12F8  2AFA               	goto	u3431
  6800  12F9  2AFB               	goto	u3430
  6801  12FA                     u3431:
  6802  12FA  2AFC               	goto	l2599
  6803  12FB                     u3430:
  6804  12FB                     l2597:
  6805  12FB  1463               	bsf	___fladd@aexp,0
  6806  12FC                     l2599:
  6807  12FC  0863               	movf	___fladd@aexp,w
  6808  12FD  1903               	btfsc	3,2
  6809  12FE  2B00               	goto	u3441
  6810  12FF  2B01               	goto	u3440
  6811  1300                     u3441:
  6812  1300  2B11               	goto	l2609
  6813  1301                     u3440:
  6814  1301                     l2601:
  6815  1301  0A63               	incf	___fladd@aexp,w
  6816  1302  1D03               	btfss	3,2
  6817  1303  2B05               	goto	u3451
  6818  1304  2B06               	goto	u3450
  6819  1305                     u3451:
  6820  1305  2B0E               	goto	l2605
  6821  1306                     u3450:
  6822  1306                     l2603:
  6823  1306  3000               	movlw	0
  6824  1307  00D9               	movwf	___fladd@a+3
  6825  1308  3000               	movlw	0
  6826  1309  00D8               	movwf	___fladd@a+2
  6827  130A  3000               	movlw	0
  6828  130B  00D7               	movwf	___fladd@a+1
  6829  130C  3000               	movlw	0
  6830  130D  00D6               	movwf	___fladd@a
  6831  130E                     l2605:
  6832  130E  17D8               	bsf	___fladd@a+2,7
  6833  130F                     l2607:
  6834  130F  01D9               	clrf	___fladd@a+3
  6835  1310  2B19               	goto	l743
  6836  1311                     l2609:
  6837  1311  3000               	movlw	0
  6838  1312  00D9               	movwf	___fladd@a+3
  6839  1313  3000               	movlw	0
  6840  1314  00D8               	movwf	___fladd@a+2
  6841  1315  3000               	movlw	0
  6842  1316  00D7               	movwf	___fladd@a+1
  6843  1317  3000               	movlw	0
  6844  1318  00D6               	movwf	___fladd@a
  6845  1319                     l743:
  6846  1319  0864               	movf	___fladd@bexp,w
  6847  131A  0263               	subwf	___fladd@aexp,w
  6848  131B  1803               	skipnc
  6849  131C  2B1E               	goto	u3461
  6850  131D  2B1F               	goto	u3460
  6851  131E                     u3461:
  6852  131E  2B63               	goto	l2645
  6853  131F                     u3460:
  6854  131F                     l2611:
  6855  131F  1F62               	btfss	___fladd@signs,6
  6856  1320  2B22               	goto	u3471
  6857  1321  2B23               	goto	u3470
  6858  1322                     u3471:
  6859  1322  2B27               	goto	l2615
  6860  1323                     u3470:
  6861  1323                     l2613:
  6862  1323  3080               	movlw	128
  6863  1324  00DA               	movwf	??___fladd
  6864  1325  085A               	movf	??___fladd,w
  6865  1326  06E2               	xorwf	___fladd@signs,f
  6866  1327                     l2615:
  6867  1327  0864               	movf	___fladd@bexp,w
  6868  1328  00DA               	movwf	??___fladd
  6869  1329  085A               	movf	??___fladd,w
  6870  132A  00E5               	movwf	___fladd@grs
  6871  132B                     l2617:
  6872  132B  0863               	movf	___fladd@aexp,w
  6873  132C  00DA               	movwf	??___fladd
  6874  132D  085A               	movf	??___fladd,w
  6875  132E  00E4               	movwf	___fladd@bexp
  6876  132F                     l2619:
  6877  132F  0865               	movf	___fladd@grs,w
  6878  1330  00DA               	movwf	??___fladd
  6879  1331  085A               	movf	??___fladd,w
  6880  1332  00E3               	movwf	___fladd@aexp
  6881  1333                     l2621:
  6882  1333  0852               	movf	___fladd@b,w
  6883  1334  00DA               	movwf	??___fladd
  6884  1335  085A               	movf	??___fladd,w
  6885  1336  00E5               	movwf	___fladd@grs
  6886  1337                     l2623:
  6887  1337  0856               	movf	___fladd@a,w
  6888  1338  00DA               	movwf	??___fladd
  6889  1339  085A               	movf	??___fladd,w
  6890  133A  00D2               	movwf	___fladd@b
  6891  133B                     l2625:
  6892  133B  0865               	movf	___fladd@grs,w
  6893  133C  00DA               	movwf	??___fladd
  6894  133D  085A               	movf	??___fladd,w
  6895  133E  00D6               	movwf	___fladd@a
  6896  133F                     l2627:
  6897  133F  0853               	movf	___fladd@b+1,w
  6898  1340  00DA               	movwf	??___fladd
  6899  1341  085A               	movf	??___fladd,w
  6900  1342  00E5               	movwf	___fladd@grs
  6901  1343                     l2629:
  6902  1343  0857               	movf	___fladd@a+1,w
  6903  1344  00DA               	movwf	??___fladd
  6904  1345  085A               	movf	??___fladd,w
  6905  1346  00D3               	movwf	___fladd@b+1
  6906  1347                     l2631:
  6907  1347  0865               	movf	___fladd@grs,w
  6908  1348  00DA               	movwf	??___fladd
  6909  1349  085A               	movf	??___fladd,w
  6910  134A  00D7               	movwf	___fladd@a+1
  6911  134B                     l2633:
  6912  134B  0854               	movf	___fladd@b+2,w
  6913  134C  00DA               	movwf	??___fladd
  6914  134D  085A               	movf	??___fladd,w
  6915  134E  00E5               	movwf	___fladd@grs
  6916  134F                     l2635:
  6917  134F  0858               	movf	___fladd@a+2,w
  6918  1350  00DA               	movwf	??___fladd
  6919  1351  085A               	movf	??___fladd,w
  6920  1352  00D4               	movwf	___fladd@b+2
  6921  1353                     l2637:
  6922  1353  0865               	movf	___fladd@grs,w
  6923  1354  00DA               	movwf	??___fladd
  6924  1355  085A               	movf	??___fladd,w
  6925  1356  00D8               	movwf	___fladd@a+2
  6926  1357                     l2639:
  6927  1357  0855               	movf	___fladd@b+3,w
  6928  1358  00DA               	movwf	??___fladd
  6929  1359  085A               	movf	??___fladd,w
  6930  135A  00E5               	movwf	___fladd@grs
  6931  135B                     l2641:
  6932  135B  0859               	movf	___fladd@a+3,w
  6933  135C  00DA               	movwf	??___fladd
  6934  135D  085A               	movf	??___fladd,w
  6935  135E  00D5               	movwf	___fladd@b+3
  6936  135F                     l2643:
  6937  135F  0865               	movf	___fladd@grs,w
  6938  1360  00DA               	movwf	??___fladd
  6939  1361  085A               	movf	??___fladd,w
  6940  1362  00D9               	movwf	___fladd@a+3
  6941  1363                     l2645:
  6942  1363  01E5               	clrf	___fladd@grs
  6943  1364                     l2647:
  6944  1364  0863               	movf	___fladd@aexp,w
  6945  1365  00DA               	movwf	??___fladd
  6946  1366  01DB               	clrf	??___fladd+1
  6947  1367  085B               	movf	??___fladd+1,w
  6948  1368  00DD               	movwf	??___fladd+3
  6949  1369  0864               	movf	___fladd@bexp,w
  6950  136A  025A               	subwf	??___fladd,w
  6951  136B  00DC               	movwf	??___fladd+2
  6952  136C  1C03               	skipc
  6953  136D  03DD               	decf	??___fladd+3,f
  6954  136E  085D               	movf	??___fladd+3,w
  6955  136F  3A80               	xorlw	128
  6956  1370  00FF               	movwf	btemp+1
  6957  1371  3080               	movlw	128
  6958  1372  027F               	subwf	btemp+1,w
  6959  1373  1D03               	skipz
  6960  1374  2B77               	goto	u3485
  6961  1375  301A               	movlw	26
  6962  1376  025C               	subwf	??___fladd+2,w
  6963  1377                     u3485:
  6964  1377  1C03               	skipc
  6965  1378  2B7A               	goto	u3481
  6966  1379  2B7B               	goto	u3480
  6967  137A                     u3481:
  6968  137A  2BB8               	goto	l2663
  6969  137B                     u3480:
  6970  137B                     l2649:
  6971  137B  1283               	bcf	3,5	;RP0=0, select bank0
  6972  137C  1303               	bcf	3,6	;RP1=0, select bank0
  6973  137D  0855               	movf	___fladd@b+3,w
  6974  137E  0454               	iorwf	___fladd@b+2,w
  6975  137F  0453               	iorwf	___fladd@b+1,w
  6976  1380  0452               	iorwf	___fladd@b,w
  6977  1381  1D03               	skipz
  6978  1382  2B84               	goto	u3491
  6979  1383  2B86               	goto	u3490
  6980  1384                     u3491:
  6981  1384  3001               	movlw	1
  6982  1385  2B87               	goto	u3500
  6983  1386                     u3490:
  6984  1386  3000               	movlw	0
  6985  1387                     u3500:
  6986  1387  00DA               	movwf	??___fladd
  6987  1388  085A               	movf	??___fladd,w
  6988  1389  00E5               	movwf	___fladd@grs
  6989  138A  3000               	movlw	0
  6990  138B  00D5               	movwf	___fladd@b+3
  6991  138C  3000               	movlw	0
  6992  138D  00D4               	movwf	___fladd@b+2
  6993  138E  3000               	movlw	0
  6994  138F  00D3               	movwf	___fladd@b+1
  6995  1390  3000               	movlw	0
  6996  1391  00D2               	movwf	___fladd@b
  6997  1392  0863               	movf	___fladd@aexp,w
  6998  1393  00DA               	movwf	??___fladd
  6999  1394  085A               	movf	??___fladd,w
  7000  1395  00E4               	movwf	___fladd@bexp
  7001  1396  2BC0               	goto	l747
  7002  1397                     l749:
  7003  1397  1C65               	btfss	___fladd@grs,0
  7004  1398  2B9A               	goto	u3511
  7005  1399  2B9B               	goto	u3510
  7006  139A                     u3511:
  7007  139A  2BA4               	goto	l2653
  7008  139B                     u3510:
  7009  139B                     l2651:
  7010  139B  0865               	movf	___fladd@grs,w
  7011  139C  00DA               	movwf	??___fladd
  7012  139D  1003               	clrc
  7013  139E  0C5A               	rrf	??___fladd,w
  7014  139F  3801               	iorlw	1
  7015  13A0  00DB               	movwf	??___fladd+1
  7016  13A1  085B               	movf	??___fladd+1,w
  7017  13A2  00E5               	movwf	___fladd@grs
  7018  13A3  2BA6               	goto	l2655
  7019  13A4                     l2653:
  7020  13A4  1003               	clrc
  7021  13A5  0CE5               	rrf	___fladd@grs,f
  7022  13A6                     l2655:
  7023  13A6  1C52               	btfss	___fladd@b,0
  7024  13A7  2BA9               	goto	u3521
  7025  13A8  2BAA               	goto	u3520
  7026  13A9                     u3521:
  7027  13A9  2BAB               	goto	l2659
  7028  13AA                     u3520:
  7029  13AA                     l2657:
  7030  13AA  17E5               	bsf	___fladd@grs,7
  7031  13AB                     l2659:
  7032  13AB  3001               	movlw	1
  7033  13AC  00DA               	movwf	??___fladd
  7034  13AD                     u3535:
  7035  13AD  0D55               	rlf	___fladd@b+3,w
  7036  13AE  0CD5               	rrf	___fladd@b+3,f
  7037  13AF  0CD4               	rrf	___fladd@b+2,f
  7038  13B0  0CD3               	rrf	___fladd@b+1,f
  7039  13B1  0CD2               	rrf	___fladd@b,f
  7040  13B2  0BDA               	decfsz	??___fladd& (0+127),f
  7041  13B3  2BAD               	goto	u3535
  7042  13B4                     l2661:
  7043  13B4  3001               	movlw	1
  7044  13B5  00DA               	movwf	??___fladd
  7045  13B6  085A               	movf	??___fladd,w
  7046  13B7  07E4               	addwf	___fladd@bexp,f
  7047  13B8                     l2663:
  7048  13B8  1283               	bcf	3,5	;RP0=0, select bank0
  7049  13B9  1303               	bcf	3,6	;RP1=0, select bank0
  7050  13BA  0863               	movf	___fladd@aexp,w
  7051  13BB  0264               	subwf	___fladd@bexp,w
  7052  13BC  1C03               	skipc
  7053  13BD  2BBF               	goto	u3541
  7054  13BE  2BC0               	goto	u3540
  7055  13BF                     u3541:
  7056  13BF  2B97               	goto	l749
  7057  13C0                     u3540:
  7058  13C0                     l747:
  7059  13C0  1B62               	btfsc	___fladd@signs,6
  7060  13C1  2BC3               	goto	u3551
  7061  13C2  2BC4               	goto	u3550
  7062  13C3                     u3551:
  7063  13C3  2C0F               	goto	l2689
  7064  13C4                     u3550:
  7065  13C4                     l2665:
  7066  13C4  0864               	movf	___fladd@bexp,w
  7067  13C5  1D03               	btfss	3,2
  7068  13C6  2BC8               	goto	u3561
  7069  13C7  2BC9               	goto	u3560
  7070  13C8                     u3561:
  7071  13C8  2BD2               	goto	l2671
  7072  13C9                     u3560:
  7073  13C9                     l2667:
  7074  13C9  3000               	movlw	0
  7075  13CA  00D5               	movwf	?___fladd+3
  7076  13CB  3000               	movlw	0
  7077  13CC  00D4               	movwf	?___fladd+2
  7078  13CD  3000               	movlw	0
  7079  13CE  00D3               	movwf	?___fladd+1
  7080  13CF  3000               	movlw	0
  7081  13D0  00D2               	movwf	?___fladd
  7082  13D1  2D3D               	goto	l756
  7083  13D2                     l2671:
  7084  13D2  0856               	movf	___fladd@a,w
  7085  13D3  07D2               	addwf	___fladd@b,f
  7086  13D4  0857               	movf	___fladd@a+1,w
  7087  13D5  1103               	clrz
  7088  13D6  1803               	skipnc
  7089  13D7  3E01               	addlw	1
  7090  13D8  1903               	skipnz
  7091  13D9  2BDB               	goto	u3571
  7092  13DA  07D3               	addwf	___fladd@b+1,f
  7093  13DB                     u3571:
  7094  13DB  0858               	movf	___fladd@a+2,w
  7095  13DC  1103               	clrz
  7096  13DD  1803               	skipnc
  7097  13DE  3E01               	addlw	1
  7098  13DF  1903               	skipnz
  7099  13E0  2BE2               	goto	u3572
  7100  13E1  07D4               	addwf	___fladd@b+2,f
  7101  13E2                     u3572:
  7102  13E2  0859               	movf	___fladd@a+3,w
  7103  13E3  1103               	clrz
  7104  13E4  1803               	skipnc
  7105  13E5  3E01               	addlw	1
  7106  13E6  1903               	skipnz
  7107  13E7  2BE9               	goto	u3573
  7108  13E8  07D5               	addwf	___fladd@b+3,f
  7109  13E9                     u3573:
  7110  13E9                     l2673:
  7111  13E9  1C55               	btfss	___fladd@b+3,0
  7112  13EA  2BEC               	goto	u3581
  7113  13EB  2BED               	goto	u3580
  7114  13EC                     u3581:
  7115  13EC  2CC3               	goto	l2723
  7116  13ED                     u3580:
  7117  13ED                     l2675:
  7118  13ED  1C65               	btfss	___fladd@grs,0
  7119  13EE  2BF0               	goto	u3591
  7120  13EF  2BF1               	goto	u3590
  7121  13F0                     u3591:
  7122  13F0  2BFA               	goto	l2679
  7123  13F1                     u3590:
  7124  13F1                     l2677:
  7125  13F1  0865               	movf	___fladd@grs,w
  7126  13F2  00DA               	movwf	??___fladd
  7127  13F3  1003               	clrc
  7128  13F4  0C5A               	rrf	??___fladd,w
  7129  13F5  3801               	iorlw	1
  7130  13F6  00DB               	movwf	??___fladd+1
  7131  13F7  085B               	movf	??___fladd+1,w
  7132  13F8  00E5               	movwf	___fladd@grs
  7133  13F9  2BFC               	goto	l2681
  7134  13FA                     l2679:
  7135  13FA  1003               	clrc
  7136  13FB  0CE5               	rrf	___fladd@grs,f
  7137  13FC                     l2681:
  7138  13FC  1C52               	btfss	___fladd@b,0
  7139  13FD  2BFF               	goto	u3601
  7140  13FE  2C00               	goto	u3600
  7141  13FF                     u3601:
  7142  13FF  2C01               	goto	l2685
  7143  1400                     u3600:
  7144  1400                     l2683:
  7145  1400  17E5               	bsf	___fladd@grs,7
  7146  1401                     l2685:
  7147  1401  3001               	movlw	1
  7148  1402  00DA               	movwf	??___fladd
  7149  1403                     u3615:
  7150  1403  0D55               	rlf	___fladd@b+3,w
  7151  1404  0CD5               	rrf	___fladd@b+3,f
  7152  1405  0CD4               	rrf	___fladd@b+2,f
  7153  1406  0CD3               	rrf	___fladd@b+1,f
  7154  1407  0CD2               	rrf	___fladd@b,f
  7155  1408  0BDA               	decfsz	??___fladd& (0+127),f
  7156  1409  2C03               	goto	u3615
  7157  140A                     l2687:
  7158  140A  3001               	movlw	1
  7159  140B  00DA               	movwf	??___fladd
  7160  140C  085A               	movf	??___fladd,w
  7161  140D  07E4               	addwf	___fladd@bexp,f
  7162  140E  2CC3               	goto	l2723
  7163  140F                     l2689:
  7164  140F  0855               	movf	___fladd@b+3,w
  7165  1410  3A80               	xorlw	128
  7166  1411  00FF               	movwf	btemp+1
  7167  1412  0859               	movf	___fladd@a+3,w
  7168  1413  3A80               	xorlw	128
  7169  1414  027F               	subwf	btemp+1,w
  7170  1415  1D03               	skipz
  7171  1416  2C21               	goto	u3623
  7172  1417  0858               	movf	___fladd@a+2,w
  7173  1418  0254               	subwf	___fladd@b+2,w
  7174  1419  1D03               	skipz
  7175  141A  2C21               	goto	u3623
  7176  141B  0857               	movf	___fladd@a+1,w
  7177  141C  0253               	subwf	___fladd@b+1,w
  7178  141D  1D03               	skipz
  7179  141E  2C21               	goto	u3623
  7180  141F  0856               	movf	___fladd@a,w
  7181  1420  0252               	subwf	___fladd@b,w
  7182  1421                     u3623:
  7183  1421  1803               	skipnc
  7184  1422  2C24               	goto	u3621
  7185  1423  2C25               	goto	u3620
  7186  1424                     u3621:
  7187  1424  2C7D               	goto	l2699
  7188  1425                     u3620:
  7189  1425                     l2691:
  7190  1425  30FF               	movlw	255
  7191  1426  00DA               	movwf	??___fladd
  7192  1427  30FF               	movlw	255
  7193  1428  00DB               	movwf	??___fladd+1
  7194  1429  30FF               	movlw	255
  7195  142A  00DC               	movwf	??___fladd+2
  7196  142B  30FF               	movlw	255
  7197  142C  00DD               	movwf	??___fladd+3
  7198  142D  0856               	movf	___fladd@a,w
  7199  142E  00DE               	movwf	??___fladd+4
  7200  142F  0857               	movf	___fladd@a+1,w
  7201  1430  00DF               	movwf	??___fladd+5
  7202  1431  0858               	movf	___fladd@a+2,w
  7203  1432  00E0               	movwf	??___fladd+6
  7204  1433  0859               	movf	___fladd@a+3,w
  7205  1434  00E1               	movwf	??___fladd+7
  7206  1435  0852               	movf	___fladd@b,w
  7207  1436  02DE               	subwf	??___fladd+4,f
  7208  1437  0853               	movf	___fladd@b+1,w
  7209  1438  1C03               	skipc
  7210  1439  0F53               	incfsz	___fladd@b+1,w
  7211  143A  2C3C               	goto	u3631
  7212  143B  2C3D               	goto	u3632
  7213  143C                     u3631:
  7214  143C  02DF               	subwf	??___fladd+5,f
  7215  143D                     u3632:
  7216  143D  0854               	movf	___fladd@b+2,w
  7217  143E  1C03               	skipc
  7218  143F  0F54               	incfsz	___fladd@b+2,w
  7219  1440  2C42               	goto	u3633
  7220  1441  2C43               	goto	u3634
  7221  1442                     u3633:
  7222  1442  02E0               	subwf	??___fladd+6,f
  7223  1443                     u3634:
  7224  1443  0855               	movf	___fladd@b+3,w
  7225  1444  1C03               	skipc
  7226  1445  0F55               	incfsz	___fladd@b+3,w
  7227  1446  2C48               	goto	u3635
  7228  1447  2C49               	goto	u3636
  7229  1448                     u3635:
  7230  1448  02E1               	subwf	??___fladd+7,f
  7231  1449                     u3636:
  7232  1449  085E               	movf	??___fladd+4,w
  7233  144A  07DA               	addwf	??___fladd,f
  7234  144B  085F               	movf	??___fladd+5,w
  7235  144C  1803               	skipnc
  7236  144D  0F5F               	incfsz	??___fladd+5,w
  7237  144E  2C50               	goto	u3640
  7238  144F  2C51               	goto	u3641
  7239  1450                     u3640:
  7240  1450  07DB               	addwf	??___fladd+1,f
  7241  1451                     u3641:
  7242  1451  0860               	movf	??___fladd+6,w
  7243  1452  1803               	skipnc
  7244  1453  0F60               	incfsz	??___fladd+6,w
  7245  1454  2C56               	goto	u3642
  7246  1455  2C57               	goto	u3643
  7247  1456                     u3642:
  7248  1456  07DC               	addwf	??___fladd+2,f
  7249  1457                     u3643:
  7250  1457  0861               	movf	??___fladd+7,w
  7251  1458  1803               	skipnc
  7252  1459  0A61               	incf	??___fladd+7,w
  7253  145A  07DD               	addwf	??___fladd+3,f
  7254  145B  085D               	movf	??___fladd+3,w
  7255  145C  00D5               	movwf	___fladd@b+3
  7256  145D  085C               	movf	??___fladd+2,w
  7257  145E  00D4               	movwf	___fladd@b+2
  7258  145F  085B               	movf	??___fladd+1,w
  7259  1460  00D3               	movwf	___fladd@b+1
  7260  1461  085A               	movf	??___fladd,w
  7261  1462  00D2               	movwf	___fladd@b
  7262  1463                     l2693:
  7263  1463  3080               	movlw	128
  7264  1464  00DA               	movwf	??___fladd
  7265  1465  085A               	movf	??___fladd,w
  7266  1466  06E2               	xorwf	___fladd@signs,f
  7267  1467  09E5               	comf	___fladd@grs,f
  7268  1468  0AE5               	incf	___fladd@grs,f
  7269  1469                     l2695:
  7270  1469  0865               	movf	___fladd@grs,w
  7271  146A  1D03               	btfss	3,2
  7272  146B  2C6D               	goto	u3651
  7273  146C  2C6E               	goto	u3650
  7274  146D                     u3651:
  7275  146D  2C8B               	goto	l764
  7276  146E                     u3650:
  7277  146E                     l2697:
  7278  146E  3001               	movlw	1
  7279  146F  07D2               	addwf	___fladd@b,f
  7280  1470  3000               	movlw	0
  7281  1471  1803               	skipnc
  7282  1472  3001               	movlw	1
  7283  1473  07D3               	addwf	___fladd@b+1,f
  7284  1474  3000               	movlw	0
  7285  1475  1803               	skipnc
  7286  1476  3001               	movlw	1
  7287  1477  07D4               	addwf	___fladd@b+2,f
  7288  1478  3000               	movlw	0
  7289  1479  1803               	skipnc
  7290  147A  3001               	movlw	1
  7291  147B  07D5               	addwf	___fladd@b+3,f
  7292  147C  2C8B               	goto	l764
  7293  147D                     l2699:
  7294  147D  0856               	movf	___fladd@a,w
  7295  147E  02D2               	subwf	___fladd@b,f
  7296  147F  0857               	movf	___fladd@a+1,w
  7297  1480  1C03               	skipc
  7298  1481  0F57               	incfsz	___fladd@a+1,w
  7299  1482  02D3               	subwf	___fladd@b+1,f
  7300  1483  0858               	movf	___fladd@a+2,w
  7301  1484  1C03               	skipc
  7302  1485  0F58               	incfsz	___fladd@a+2,w
  7303  1486  02D4               	subwf	___fladd@b+2,f
  7304  1487  0859               	movf	___fladd@a+3,w
  7305  1488  1C03               	skipc
  7306  1489  0F59               	incfsz	___fladd@a+3,w
  7307  148A  02D5               	subwf	___fladd@b+3,f
  7308  148B                     l764:
  7309  148B  0855               	movf	___fladd@b+3,w
  7310  148C  0454               	iorwf	___fladd@b+2,w
  7311  148D  0453               	iorwf	___fladd@b+1,w
  7312  148E  0452               	iorwf	___fladd@b,w
  7313  148F  1D03               	skipz
  7314  1490  2C92               	goto	u3661
  7315  1491  2C93               	goto	u3660
  7316  1492                     u3661:
  7317  1492  2CBF               	goto	l2721
  7318  1493                     u3660:
  7319  1493                     l2701:
  7320  1493  0865               	movf	___fladd@grs,w
  7321  1494  1D03               	btfss	3,2
  7322  1495  2C97               	goto	u3671
  7323  1496  2C98               	goto	u3670
  7324  1497                     u3671:
  7325  1497  2CBF               	goto	l2721
  7326  1498                     u3670:
  7327  1498                     l2703:
  7328  1498  3000               	movlw	0
  7329  1499  00D5               	movwf	?___fladd+3
  7330  149A  3000               	movlw	0
  7331  149B  00D4               	movwf	?___fladd+2
  7332  149C  3000               	movlw	0
  7333  149D  00D3               	movwf	?___fladd+1
  7334  149E  3000               	movlw	0
  7335  149F  00D2               	movwf	?___fladd
  7336  14A0  2D3D               	goto	l756
  7337  14A1                     l2707:
  7338  14A1  3001               	movlw	1
  7339  14A2  00DA               	movwf	??___fladd
  7340  14A3                     u3685:
  7341  14A3  1003               	clrc
  7342  14A4  0DD2               	rlf	___fladd@b,f
  7343  14A5  0DD3               	rlf	___fladd@b+1,f
  7344  14A6  0DD4               	rlf	___fladd@b+2,f
  7345  14A7  0DD5               	rlf	___fladd@b+3,f
  7346  14A8  0BDA               	decfsz	??___fladd,f
  7347  14A9  2CA3               	goto	u3685
  7348  14AA                     l2709:
  7349  14AA  1FE5               	btfss	___fladd@grs,7
  7350  14AB  2CAD               	goto	u3691
  7351  14AC  2CAE               	goto	u3690
  7352  14AD                     u3691:
  7353  14AD  2CAF               	goto	l768
  7354  14AE                     u3690:
  7355  14AE                     l2711:
  7356  14AE  1452               	bsf	___fladd@b,0
  7357  14AF                     l768:
  7358  14AF  1C65               	btfss	___fladd@grs,0
  7359  14B0  2CB2               	goto	u3701
  7360  14B1  2CB3               	goto	u3700
  7361  14B2                     u3701:
  7362  14B2  2CB6               	goto	l2715
  7363  14B3                     u3700:
  7364  14B3                     l2713:
  7365  14B3  1403               	setc
  7366  14B4  0DE5               	rlf	___fladd@grs,f
  7367  14B5  2CB8               	goto	l2717
  7368  14B6                     l2715:
  7369  14B6  1003               	clrc
  7370  14B7  0DE5               	rlf	___fladd@grs,f
  7371  14B8                     l2717:
  7372  14B8  0864               	movf	___fladd@bexp,w
  7373  14B9  1903               	btfsc	3,2
  7374  14BA  2CBC               	goto	u3711
  7375  14BB  2CBD               	goto	u3710
  7376  14BC                     u3711:
  7377  14BC  2CBF               	goto	l2721
  7378  14BD                     u3710:
  7379  14BD                     l2719:
  7380  14BD  3001               	movlw	1
  7381  14BE  02E4               	subwf	___fladd@bexp,f
  7382  14BF                     l2721:
  7383  14BF  1FD4               	btfss	___fladd@b+2,7
  7384  14C0  2CC2               	goto	u3721
  7385  14C1  2CC3               	goto	u3720
  7386  14C2                     u3721:
  7387  14C2  2CA1               	goto	l2707
  7388  14C3                     u3720:
  7389  14C3                     l2723:
  7390  14C3  01E3               	clrf	___fladd@aexp
  7391  14C4                     l2725:
  7392  14C4  1FE5               	btfss	___fladd@grs,7
  7393  14C5  2CC7               	goto	u3731
  7394  14C6  2CC8               	goto	u3730
  7395  14C7                     u3731:
  7396  14C7  2CD6               	goto	l2733
  7397  14C8                     u3730:
  7398  14C8                     l2727:
  7399  14C8  0865               	movf	___fladd@grs,w
  7400  14C9  397F               	andlw	127
  7401  14CA  1903               	btfsc	3,2
  7402  14CB  2CCD               	goto	u3741
  7403  14CC  2CCE               	goto	u3740
  7404  14CD                     u3741:
  7405  14CD  2CD1               	goto	l774
  7406  14CE                     u3740:
  7407  14CE                     l2729:
  7408  14CE  01E3               	clrf	___fladd@aexp
  7409  14CF  0AE3               	incf	___fladd@aexp,f
  7410  14D0  2CD6               	goto	l2733
  7411  14D1                     l774:
  7412  14D1  1C52               	btfss	___fladd@b,0
  7413  14D2  2CD4               	goto	u3751
  7414  14D3  2CD5               	goto	u3750
  7415  14D4                     u3751:
  7416  14D4  2CD6               	goto	l2733
  7417  14D5                     u3750:
  7418  14D5  2CCE               	goto	l2729
  7419  14D6                     l2733:
  7420  14D6  0863               	movf	___fladd@aexp,w
  7421  14D7  1903               	btfsc	3,2
  7422  14D8  2CDA               	goto	u3761
  7423  14D9  2CDB               	goto	u3760
  7424  14DA                     u3761:
  7425  14DA  2D0F               	goto	l777
  7426  14DB                     u3760:
  7427  14DB                     l2735:
  7428  14DB  3001               	movlw	1
  7429  14DC  07D2               	addwf	___fladd@b,f
  7430  14DD  3000               	movlw	0
  7431  14DE  1803               	skipnc
  7432  14DF  3001               	movlw	1
  7433  14E0  07D3               	addwf	___fladd@b+1,f
  7434  14E1  3000               	movlw	0
  7435  14E2  1803               	skipnc
  7436  14E3  3001               	movlw	1
  7437  14E4  07D4               	addwf	___fladd@b+2,f
  7438  14E5  3000               	movlw	0
  7439  14E6  1803               	skipnc
  7440  14E7  3001               	movlw	1
  7441  14E8  07D5               	addwf	___fladd@b+3,f
  7442  14E9                     l2737:
  7443  14E9  1C55               	btfss	___fladd@b+3,0
  7444  14EA  2CEC               	goto	u3771
  7445  14EB  2CED               	goto	u3770
  7446  14EC                     u3771:
  7447  14EC  2D0F               	goto	l777
  7448  14ED                     u3770:
  7449  14ED                     l2739:
  7450  14ED  0852               	movf	___fladd@b,w
  7451  14EE  00DA               	movwf	??___fladd
  7452  14EF  0853               	movf	___fladd@b+1,w
  7453  14F0  00DB               	movwf	??___fladd+1
  7454  14F1  0854               	movf	___fladd@b+2,w
  7455  14F2  00DC               	movwf	??___fladd+2
  7456  14F3  0855               	movf	___fladd@b+3,w
  7457  14F4  00DD               	movwf	??___fladd+3
  7458  14F5  3001               	movlw	1
  7459  14F6  00DE               	movwf	??___fladd+4
  7460  14F7                     u3785:
  7461  14F7  0D5D               	rlf	??___fladd+3,w
  7462  14F8  0CDD               	rrf	??___fladd+3,f
  7463  14F9  0CDC               	rrf	??___fladd+2,f
  7464  14FA  0CDB               	rrf	??___fladd+1,f
  7465  14FB  0CDA               	rrf	??___fladd,f
  7466  14FC                     u3780:
  7467  14FC  0BDE               	decfsz	??___fladd+4,f
  7468  14FD  2CF7               	goto	u3785
  7469  14FE  085D               	movf	??___fladd+3,w
  7470  14FF  00D5               	movwf	___fladd@b+3
  7471  1500  085C               	movf	??___fladd+2,w
  7472  1501  00D4               	movwf	___fladd@b+2
  7473  1502  085B               	movf	??___fladd+1,w
  7474  1503  00D3               	movwf	___fladd@b+1
  7475  1504  085A               	movf	??___fladd,w
  7476  1505  00D2               	movwf	___fladd@b
  7477  1506  0A64               	incf	___fladd@bexp,w
  7478  1507  1903               	btfsc	3,2
  7479  1508  2D0A               	goto	u3791
  7480  1509  2D0B               	goto	u3790
  7481  150A                     u3791:
  7482  150A  2D0F               	goto	l777
  7483  150B                     u3790:
  7484  150B                     l2741:
  7485  150B  3001               	movlw	1
  7486  150C  00DA               	movwf	??___fladd
  7487  150D  085A               	movf	??___fladd,w
  7488  150E  07E4               	addwf	___fladd@bexp,f
  7489  150F                     l777:
  7490  150F  0A64               	incf	___fladd@bexp,w
  7491  1510  1903               	btfsc	3,2
  7492  1511  2D13               	goto	u3801
  7493  1512  2D14               	goto	u3800
  7494  1513                     u3801:
  7495  1513  2D19               	goto	l2745
  7496  1514                     u3800:
  7497  1514                     l2743:
  7498  1514  0864               	movf	___fladd@bexp,w
  7499  1515  1D03               	btfss	3,2
  7500  1516  2D18               	goto	u3811
  7501  1517  2D19               	goto	u3810
  7502  1518                     u3811:
  7503  1518  2D27               	goto	l2751
  7504  1519                     u3810:
  7505  1519                     l2745:
  7506  1519  3000               	movlw	0
  7507  151A  00D5               	movwf	___fladd@b+3
  7508  151B  3000               	movlw	0
  7509  151C  00D4               	movwf	___fladd@b+2
  7510  151D  3000               	movlw	0
  7511  151E  00D3               	movwf	___fladd@b+1
  7512  151F  3000               	movlw	0
  7513  1520  00D2               	movwf	___fladd@b
  7514  1521                     l2747:
  7515  1521  0864               	movf	___fladd@bexp,w
  7516  1522  1D03               	btfss	3,2
  7517  1523  2D25               	goto	u3821
  7518  1524  2D26               	goto	u3820
  7519  1525                     u3821:
  7520  1525  2D27               	goto	l2751
  7521  1526                     u3820:
  7522  1526                     l2749:
  7523  1526  01E2               	clrf	___fladd@signs
  7524  1527                     l2751:
  7525  1527  1C64               	btfss	___fladd@bexp,0
  7526  1528  2D2A               	goto	u3831
  7527  1529  2D2B               	goto	u3830
  7528  152A                     u3831:
  7529  152A  2D2D               	goto	l2755
  7530  152B                     u3830:
  7531  152B                     l2753:
  7532  152B  17D4               	bsf	___fladd@b+2,7
  7533  152C  2D31               	goto	l785
  7534  152D                     l2755:
  7535  152D  307F               	movlw	127
  7536  152E  00DA               	movwf	??___fladd
  7537  152F  085A               	movf	??___fladd,w
  7538  1530  05D4               	andwf	___fladd@b+2,f
  7539  1531                     l785:
  7540  1531  0864               	movf	___fladd@bexp,w
  7541  1532  00DA               	movwf	??___fladd
  7542  1533  1003               	clrc
  7543  1534  0C5A               	rrf	??___fladd,w
  7544  1535  00DB               	movwf	??___fladd+1
  7545  1536  085B               	movf	??___fladd+1,w
  7546  1537  00D5               	movwf	___fladd@b+3
  7547  1538                     l2757:
  7548  1538  1FE2               	btfss	___fladd@signs,7
  7549  1539  2D3B               	goto	u3841
  7550  153A  2D3C               	goto	u3840
  7551  153B                     u3841:
  7552  153B  2D3D               	goto	l786
  7553  153C                     u3840:
  7554  153C                     l2759:
  7555  153C  17D5               	bsf	___fladd@b+3,7
  7556  153D                     l786:
  7557  153D                     l756:
  7558  153D  0008               	return
  7559  153E                     __end_of___fladd:
  7560                           
  7561                           	psect	text19
  7562  199B                     __ptext19:	
  7563 ;; *************** function ___flneg *****************
  7564 ;; Defined at:
  7565 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  7566 ;; Parameters:    Size  Location     Type
  7567 ;;  f1              4    0[COMMON] unsigned char 
  7568 ;; Auto vars:     Size  Location     Type
  7569 ;;		None
  7570 ;; Return value:  Size  Location     Type
  7571 ;;                  4    0[COMMON] unsigned char 
  7572 ;; Registers used:
  7573 ;;		wreg
  7574 ;; Tracked objects:
  7575 ;;		On entry : 0/0
  7576 ;;		On exit  : 0/0
  7577 ;;		Unchanged: 0/0
  7578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7579 ;;      Params:         4       0       0       0       0
  7580 ;;      Locals:         0       0       0       0       0
  7581 ;;      Temps:          0       0       0       0       0
  7582 ;;      Totals:         4       0       0       0       0
  7583 ;;Total ram usage:        4 bytes
  7584 ;; Hardware stack levels used:    1
  7585 ;; This function calls:
  7586 ;;		Nothing
  7587 ;; This function is called by:
  7588 ;;		_sprintf
  7589 ;; This function uses a non-reentrant model
  7590 ;;
  7591                           
  7592                           
  7593                           ;psect for function ___flneg
  7594  199B                     ___flneg:
  7595  199B                     l3185:	
  7596                           ;incstack = 0
  7597                           ; Regs used in ___flneg: [wreg]
  7598                           
  7599  199B  0873               	movf	___flneg@f1+3,w
  7600  199C  0472               	iorwf	___flneg@f1+2,w
  7601  199D  0471               	iorwf	___flneg@f1+1,w
  7602  199E  0470               	iorwf	___flneg@f1,w
  7603  199F  1903               	skipnz
  7604  19A0  29A2               	goto	u4971
  7605  19A1  29A3               	goto	u4970
  7606  19A2                     u4971:
  7607  19A2  29A5               	goto	l3189
  7608  19A3                     u4970:
  7609  19A3                     l3187:
  7610  19A3  3080               	movlw	128
  7611  19A4  06F3               	xorwf	___flneg@f1+3,f
  7612  19A5                     l3189:
  7613  19A5                     l615:
  7614  19A5  0008               	return
  7615  19A6                     __end_of___flneg:
  7616                           
  7617                           	psect	text20
  7618  1009                     __ptext20:	
  7619 ;; *************** function ___flge *****************
  7620 ;; Defined at:
  7621 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  7622 ;; Parameters:    Size  Location     Type
  7623 ;;  ff1             4    0[COMMON] unsigned char 
  7624 ;;  ff2             4    4[COMMON] unsigned char 
  7625 ;; Auto vars:     Size  Location     Type
  7626 ;;		None
  7627 ;; Return value:  Size  Location     Type
  7628 ;;		None               void
  7629 ;; Registers used:
  7630 ;;		wreg, status,2, status,0
  7631 ;; Tracked objects:
  7632 ;;		On entry : 0/0
  7633 ;;		On exit  : 0/0
  7634 ;;		Unchanged: 0/0
  7635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7636 ;;      Params:         8       0       0       0       0
  7637 ;;      Locals:         0       0       0       0       0
  7638 ;;      Temps:          4       0       0       0       0
  7639 ;;      Totals:        12       0       0       0       0
  7640 ;;Total ram usage:       12 bytes
  7641 ;; Hardware stack levels used:    1
  7642 ;; This function calls:
  7643 ;;		Nothing
  7644 ;; This function is called by:
  7645 ;;		_sprintf
  7646 ;; This function uses a non-reentrant model
  7647 ;;
  7648                           
  7649                           
  7650                           ;psect for function ___flge
  7651  1009                     ___flge:
  7652  1009                     l3165:	
  7653                           ;incstack = 0
  7654                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7655                           
  7656  1009  3000               	movlw	0
  7657  100A  0570               	andwf	___flge@ff1,w
  7658  100B  00F8               	movwf	??___flge
  7659  100C  3000               	movlw	0
  7660  100D  0571               	andwf	___flge@ff1+1,w
  7661  100E  00F9               	movwf	??___flge+1
  7662  100F  3080               	movlw	128
  7663  1010  0572               	andwf	___flge@ff1+2,w
  7664  1011  00FA               	movwf	??___flge+2
  7665  1012  307F               	movlw	127
  7666  1013  0573               	andwf	___flge@ff1+3,w
  7667  1014  00FB               	movwf	??___flge+3
  7668  1015  087B               	movf	??___flge+3,w
  7669  1016  047A               	iorwf	??___flge+2,w
  7670  1017  0479               	iorwf	??___flge+1,w
  7671  1018  0478               	iorwf	??___flge,w
  7672  1019  1D03               	skipz
  7673  101A  281C               	goto	u4901
  7674  101B  281D               	goto	u4900
  7675  101C                     u4901:
  7676  101C  2825               	goto	l607
  7677  101D                     u4900:
  7678  101D                     l3167:
  7679  101D  3000               	movlw	0
  7680  101E  00F3               	movwf	___flge@ff1+3
  7681  101F  3000               	movlw	0
  7682  1020  00F2               	movwf	___flge@ff1+2
  7683  1021  3000               	movlw	0
  7684  1022  00F1               	movwf	___flge@ff1+1
  7685  1023  3000               	movlw	0
  7686  1024  00F0               	movwf	___flge@ff1
  7687  1025                     l607:
  7688  1025  3000               	movlw	0
  7689  1026  0574               	andwf	___flge@ff2,w
  7690  1027  00F8               	movwf	??___flge
  7691  1028  3000               	movlw	0
  7692  1029  0575               	andwf	___flge@ff2+1,w
  7693  102A  00F9               	movwf	??___flge+1
  7694  102B  3080               	movlw	128
  7695  102C  0576               	andwf	___flge@ff2+2,w
  7696  102D  00FA               	movwf	??___flge+2
  7697  102E  307F               	movlw	127
  7698  102F  0577               	andwf	___flge@ff2+3,w
  7699  1030  00FB               	movwf	??___flge+3
  7700  1031  087B               	movf	??___flge+3,w
  7701  1032  047A               	iorwf	??___flge+2,w
  7702  1033  0479               	iorwf	??___flge+1,w
  7703  1034  0478               	iorwf	??___flge,w
  7704  1035  1D03               	skipz
  7705  1036  2838               	goto	u4911
  7706  1037  2839               	goto	u4910
  7707  1038                     u4911:
  7708  1038  2841               	goto	l3171
  7709  1039                     u4910:
  7710  1039                     l3169:
  7711  1039  3000               	movlw	0
  7712  103A  00F7               	movwf	___flge@ff2+3
  7713  103B  3000               	movlw	0
  7714  103C  00F6               	movwf	___flge@ff2+2
  7715  103D  3000               	movlw	0
  7716  103E  00F5               	movwf	___flge@ff2+1
  7717  103F  3000               	movlw	0
  7718  1040  00F4               	movwf	___flge@ff2
  7719  1041                     l3171:
  7720  1041  1FF3               	btfss	___flge@ff1+3,7
  7721  1042  2844               	goto	u4921
  7722  1043  2845               	goto	u4920
  7723  1044                     u4921:
  7724  1044  2869               	goto	l3175
  7725  1045                     u4920:
  7726  1045                     l3173:
  7727  1045  3000               	movlw	0
  7728  1046  00F8               	movwf	??___flge
  7729  1047  3000               	movlw	0
  7730  1048  00F9               	movwf	??___flge+1
  7731  1049  3000               	movlw	0
  7732  104A  00FA               	movwf	??___flge+2
  7733  104B  3080               	movlw	128
  7734  104C  00FB               	movwf	??___flge+3
  7735  104D  0870               	movf	___flge@ff1,w
  7736  104E  02F8               	subwf	??___flge,f
  7737  104F  0871               	movf	___flge@ff1+1,w
  7738  1050  1C03               	skipc
  7739  1051  0F71               	incfsz	___flge@ff1+1,w
  7740  1052  2854               	goto	u4931
  7741  1053  2855               	goto	u4932
  7742  1054                     u4931:
  7743  1054  02F9               	subwf	??___flge+1,f
  7744  1055                     u4932:
  7745  1055  0872               	movf	___flge@ff1+2,w
  7746  1056  1C03               	skipc
  7747  1057  0F72               	incfsz	___flge@ff1+2,w
  7748  1058  285A               	goto	u4933
  7749  1059  285B               	goto	u4934
  7750  105A                     u4933:
  7751  105A  02FA               	subwf	??___flge+2,f
  7752  105B                     u4934:
  7753  105B  0873               	movf	___flge@ff1+3,w
  7754  105C  1C03               	skipc
  7755  105D  0F73               	incfsz	___flge@ff1+3,w
  7756  105E  2860               	goto	u4935
  7757  105F  2861               	goto	u4936
  7758  1060                     u4935:
  7759  1060  02FB               	subwf	??___flge+3,f
  7760  1061                     u4936:
  7761  1061  087B               	movf	??___flge+3,w
  7762  1062  00F3               	movwf	___flge@ff1+3
  7763  1063  087A               	movf	??___flge+2,w
  7764  1064  00F2               	movwf	___flge@ff1+2
  7765  1065  0879               	movf	??___flge+1,w
  7766  1066  00F1               	movwf	___flge@ff1+1
  7767  1067  0878               	movf	??___flge,w
  7768  1068  00F0               	movwf	___flge@ff1
  7769  1069                     l3175:
  7770  1069  1FF7               	btfss	___flge@ff2+3,7
  7771  106A  286C               	goto	u4941
  7772  106B  286D               	goto	u4940
  7773  106C                     u4941:
  7774  106C  2891               	goto	l610
  7775  106D                     u4940:
  7776  106D                     l3177:
  7777  106D  3000               	movlw	0
  7778  106E  00F8               	movwf	??___flge
  7779  106F  3000               	movlw	0
  7780  1070  00F9               	movwf	??___flge+1
  7781  1071  3000               	movlw	0
  7782  1072  00FA               	movwf	??___flge+2
  7783  1073  3080               	movlw	128
  7784  1074  00FB               	movwf	??___flge+3
  7785  1075  0874               	movf	___flge@ff2,w
  7786  1076  02F8               	subwf	??___flge,f
  7787  1077  0875               	movf	___flge@ff2+1,w
  7788  1078  1C03               	skipc
  7789  1079  0F75               	incfsz	___flge@ff2+1,w
  7790  107A  287C               	goto	u4951
  7791  107B  287D               	goto	u4952
  7792  107C                     u4951:
  7793  107C  02F9               	subwf	??___flge+1,f
  7794  107D                     u4952:
  7795  107D  0876               	movf	___flge@ff2+2,w
  7796  107E  1C03               	skipc
  7797  107F  0F76               	incfsz	___flge@ff2+2,w
  7798  1080  2882               	goto	u4953
  7799  1081  2883               	goto	u4954
  7800  1082                     u4953:
  7801  1082  02FA               	subwf	??___flge+2,f
  7802  1083                     u4954:
  7803  1083  0877               	movf	___flge@ff2+3,w
  7804  1084  1C03               	skipc
  7805  1085  0F77               	incfsz	___flge@ff2+3,w
  7806  1086  2888               	goto	u4955
  7807  1087  2889               	goto	u4956
  7808  1088                     u4955:
  7809  1088  02FB               	subwf	??___flge+3,f
  7810  1089                     u4956:
  7811  1089  087B               	movf	??___flge+3,w
  7812  108A  00F7               	movwf	___flge@ff2+3
  7813  108B  087A               	movf	??___flge+2,w
  7814  108C  00F6               	movwf	___flge@ff2+2
  7815  108D  0879               	movf	??___flge+1,w
  7816  108E  00F5               	movwf	___flge@ff2+1
  7817  108F  0878               	movf	??___flge,w
  7818  1090  00F4               	movwf	___flge@ff2
  7819  1091                     l610:
  7820  1091  3080               	movlw	128
  7821  1092  06F3               	xorwf	___flge@ff1+3,f
  7822  1093  3080               	movlw	128
  7823  1094  06F7               	xorwf	___flge@ff2+3,f
  7824  1095  0877               	movf	___flge@ff2+3,w
  7825  1096  0273               	subwf	___flge@ff1+3,w
  7826  1097  1D03               	skipz
  7827  1098  28A3               	goto	u4965
  7828  1099  0876               	movf	___flge@ff2+2,w
  7829  109A  0272               	subwf	___flge@ff1+2,w
  7830  109B  1D03               	skipz
  7831  109C  28A3               	goto	u4965
  7832  109D  0875               	movf	___flge@ff2+1,w
  7833  109E  0271               	subwf	___flge@ff1+1,w
  7834  109F  1D03               	skipz
  7835  10A0  28A3               	goto	u4965
  7836  10A1  0874               	movf	___flge@ff2,w
  7837  10A2  0270               	subwf	___flge@ff1,w
  7838  10A3                     u4965:
  7839  10A3  1803               	skipnc
  7840  10A4  28A6               	goto	u4961
  7841  10A5  28A7               	goto	u4960
  7842  10A6                     u4961:
  7843  10A6  28A9               	goto	l3181
  7844  10A7                     u4960:
  7845  10A7                     l3179:
  7846  10A7  1003               	clrc
  7847  10A8  28AA               	goto	l611
  7848  10A9                     l3181:
  7849  10A9  1403               	setc
  7850  10AA                     l611:
  7851  10AA  0008               	return
  7852  10AB                     __end_of___flge:
  7853                           
  7854                           	psect	text21
  7855  1C53                     __ptext21:	
  7856 ;; *************** function ___fleq *****************
  7857 ;; Defined at:
  7858 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  7859 ;; Parameters:    Size  Location     Type
  7860 ;;  ff1             4    0[COMMON] unsigned char 
  7861 ;;  ff2             4    4[COMMON] unsigned char 
  7862 ;; Auto vars:     Size  Location     Type
  7863 ;;		None
  7864 ;; Return value:  Size  Location     Type
  7865 ;;		None               void
  7866 ;; Registers used:
  7867 ;;		wreg, status,2, status,0
  7868 ;; Tracked objects:
  7869 ;;		On entry : 0/0
  7870 ;;		On exit  : 0/0
  7871 ;;		Unchanged: 0/0
  7872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7873 ;;      Params:         8       0       0       0       0
  7874 ;;      Locals:         0       0       0       0       0
  7875 ;;      Temps:          4       0       0       0       0
  7876 ;;      Totals:        12       0       0       0       0
  7877 ;;Total ram usage:       12 bytes
  7878 ;; Hardware stack levels used:    1
  7879 ;; This function calls:
  7880 ;;		Nothing
  7881 ;; This function is called by:
  7882 ;;		_sprintf
  7883 ;; This function uses a non-reentrant model
  7884 ;;
  7885                           
  7886                           
  7887                           ;psect for function ___fleq
  7888  1C53                     ___fleq:
  7889  1C53                     l3153:	
  7890                           ;incstack = 0
  7891                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7892                           
  7893  1C53  3000               	movlw	0
  7894  1C54  0570               	andwf	___fleq@ff1,w
  7895  1C55  00F8               	movwf	??___fleq
  7896  1C56  3000               	movlw	0
  7897  1C57  0571               	andwf	___fleq@ff1+1,w
  7898  1C58  00F9               	movwf	??___fleq+1
  7899  1C59  3080               	movlw	128
  7900  1C5A  0572               	andwf	___fleq@ff1+2,w
  7901  1C5B  00FA               	movwf	??___fleq+2
  7902  1C5C  307F               	movlw	127
  7903  1C5D  0573               	andwf	___fleq@ff1+3,w
  7904  1C5E  00FB               	movwf	??___fleq+3
  7905  1C5F  087B               	movf	??___fleq+3,w
  7906  1C60  047A               	iorwf	??___fleq+2,w
  7907  1C61  0479               	iorwf	??___fleq+1,w
  7908  1C62  0478               	iorwf	??___fleq,w
  7909  1C63  1D03               	skipz
  7910  1C64  2C66               	goto	u4871
  7911  1C65  2C67               	goto	u4870
  7912  1C66                     u4871:
  7913  1C66  2C6F               	goto	l602
  7914  1C67                     u4870:
  7915  1C67                     l3155:
  7916  1C67  3000               	movlw	0
  7917  1C68  00F3               	movwf	___fleq@ff1+3
  7918  1C69  3000               	movlw	0
  7919  1C6A  00F2               	movwf	___fleq@ff1+2
  7920  1C6B  3000               	movlw	0
  7921  1C6C  00F1               	movwf	___fleq@ff1+1
  7922  1C6D  3000               	movlw	0
  7923  1C6E  00F0               	movwf	___fleq@ff1
  7924  1C6F                     l602:
  7925  1C6F  3000               	movlw	0
  7926  1C70  0574               	andwf	___fleq@ff2,w
  7927  1C71  00F8               	movwf	??___fleq
  7928  1C72  3000               	movlw	0
  7929  1C73  0575               	andwf	___fleq@ff2+1,w
  7930  1C74  00F9               	movwf	??___fleq+1
  7931  1C75  3080               	movlw	128
  7932  1C76  0576               	andwf	___fleq@ff2+2,w
  7933  1C77  00FA               	movwf	??___fleq+2
  7934  1C78  307F               	movlw	127
  7935  1C79  0577               	andwf	___fleq@ff2+3,w
  7936  1C7A  00FB               	movwf	??___fleq+3
  7937  1C7B  087B               	movf	??___fleq+3,w
  7938  1C7C  047A               	iorwf	??___fleq+2,w
  7939  1C7D  0479               	iorwf	??___fleq+1,w
  7940  1C7E  0478               	iorwf	??___fleq,w
  7941  1C7F  1D03               	skipz
  7942  1C80  2C82               	goto	u4881
  7943  1C81  2C83               	goto	u4880
  7944  1C82                     u4881:
  7945  1C82  2C8B               	goto	l603
  7946  1C83                     u4880:
  7947  1C83                     l3157:
  7948  1C83  3000               	movlw	0
  7949  1C84  00F7               	movwf	___fleq@ff2+3
  7950  1C85  3000               	movlw	0
  7951  1C86  00F6               	movwf	___fleq@ff2+2
  7952  1C87  3000               	movlw	0
  7953  1C88  00F5               	movwf	___fleq@ff2+1
  7954  1C89  3000               	movlw	0
  7955  1C8A  00F4               	movwf	___fleq@ff2
  7956  1C8B                     l603:
  7957  1C8B  0877               	movf	___fleq@ff2+3,w
  7958  1C8C  0673               	xorwf	___fleq@ff1+3,w
  7959  1C8D  1D03               	skipz
  7960  1C8E  2C99               	goto	u4895
  7961  1C8F  0876               	movf	___fleq@ff2+2,w
  7962  1C90  0672               	xorwf	___fleq@ff1+2,w
  7963  1C91  1D03               	skipz
  7964  1C92  2C99               	goto	u4895
  7965  1C93  0875               	movf	___fleq@ff2+1,w
  7966  1C94  0671               	xorwf	___fleq@ff1+1,w
  7967  1C95  1D03               	skipz
  7968  1C96  2C99               	goto	u4895
  7969  1C97  0874               	movf	___fleq@ff2,w
  7970  1C98  0670               	xorwf	___fleq@ff1,w
  7971  1C99                     u4895:
  7972  1C99  1903               	skipnz
  7973  1C9A  2C9C               	goto	u4891
  7974  1C9B  2C9D               	goto	u4890
  7975  1C9C                     u4891:
  7976  1C9C  2C9F               	goto	l3161
  7977  1C9D                     u4890:
  7978  1C9D                     l3159:
  7979  1C9D  1003               	clrc
  7980  1C9E  2CA0               	goto	l604
  7981  1C9F                     l3161:
  7982  1C9F  1403               	setc
  7983  1CA0                     l604:
  7984  1CA0  0008               	return
  7985  1CA1                     __end_of___fleq:
  7986                           
  7987                           	psect	text22
  7988  1B27                     __ptext22:	
  7989 ;; *************** function _setup *****************
  7990 ;; Defined at:
  7991 ;;		line 39 in file "main_master.c"
  7992 ;; Parameters:    Size  Location     Type
  7993 ;;		None
  7994 ;; Auto vars:     Size  Location     Type
  7995 ;;		None
  7996 ;; Return value:  Size  Location     Type
  7997 ;;                  1    wreg      void 
  7998 ;; Registers used:
  7999 ;;		status,2
  8000 ;; Tracked objects:
  8001 ;;		On entry : 0/0
  8002 ;;		On exit  : 0/0
  8003 ;;		Unchanged: 0/0
  8004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8005 ;;      Params:         0       0       0       0       0
  8006 ;;      Locals:         0       0       0       0       0
  8007 ;;      Temps:          0       0       0       0       0
  8008 ;;      Totals:         0       0       0       0       0
  8009 ;;Total ram usage:        0 bytes
  8010 ;; Hardware stack levels used:    1
  8011 ;; This function calls:
  8012 ;;		Nothing
  8013 ;; This function is called by:
  8014 ;;		_main
  8015 ;; This function uses a non-reentrant model
  8016 ;;
  8017                           
  8018                           
  8019                           ;psect for function _setup
  8020  1B27                     _setup:
  8021  1B27                     l3345:	
  8022                           ;incstack = 0
  8023                           ; Regs used in _setup: [status,2]
  8024                           
  8025                           
  8026                           ;main_master.c: 41:     ANSEL=0;
  8027  1B27  1683               	bsf	3,5	;RP0=1, select bank3
  8028  1B28  1703               	bsf	3,6	;RP1=1, select bank3
  8029  1B29  0188               	clrf	8	;volatile
  8030                           
  8031                           ;main_master.c: 42:     ANSELH=0;
  8032  1B2A  0189               	clrf	9	;volatile
  8033                           
  8034                           ;main_master.c: 44:     TRISA=0x00;
  8035  1B2B  1683               	bsf	3,5	;RP0=1, select bank1
  8036  1B2C  1303               	bcf	3,6	;RP1=0, select bank1
  8037  1B2D  0185               	clrf	5	;volatile
  8038                           
  8039                           ;main_master.c: 45:     TRISB=0x00;
  8040  1B2E  0186               	clrf	6	;volatile
  8041                           
  8042                           ;main_master.c: 46:     TRISD=0x00;
  8043  1B2F  0188               	clrf	8	;volatile
  8044                           
  8045                           ;main_master.c: 47:     TRISE=0x00;
  8046  1B30  0189               	clrf	9	;volatile
  8047                           
  8048                           ;main_master.c: 48:     TRISC=0;
  8049  1B31  0187               	clrf	7	;volatile
  8050                           
  8051                           ;main_master.c: 51:     PORTA=0;
  8052  1B32  1283               	bcf	3,5	;RP0=0, select bank0
  8053  1B33  1303               	bcf	3,6	;RP1=0, select bank0
  8054  1B34  0185               	clrf	5	;volatile
  8055                           
  8056                           ;main_master.c: 52:     PORTB=0;
  8057  1B35  0186               	clrf	6	;volatile
  8058                           
  8059                           ;main_master.c: 53:     PORTD=0;
  8060  1B36  0188               	clrf	8	;volatile
  8061                           
  8062                           ;main_master.c: 54:     PORTE=0;
  8063  1B37  0189               	clrf	9	;volatile
  8064  1B38                     l3347:
  8065                           
  8066                           ;main_master.c: 55:     PORTCbits.RC0=1;
  8067  1B38  1407               	bsf	7,0	;volatile
  8068  1B39                     l3349:
  8069                           
  8070                           ;main_master.c: 56:     PORTCbits.RC1=1;
  8071  1B39  1487               	bsf	7,1	;volatile
  8072  1B3A                     l3351:
  8073                           
  8074                           ;main_master.c: 57:     PORTCbits.RC2=1;
  8075  1B3A  1507               	bsf	7,2	;volatile
  8076  1B3B                     l3353:
  8077                           
  8078                           ;main_master.c: 58:     PORTCbits.RC7=1;
  8079  1B3B  1787               	bsf	7,7	;volatile
  8080  1B3C                     l3355:
  8081                           
  8082                           ;main_master.c: 60:     INTCONbits.PEIE=1;
  8083  1B3C  170B               	bsf	11,6	;volatile
  8084  1B3D                     l3357:
  8085                           
  8086                           ;main_master.c: 61:     INTCONbits.GIE=1;
  8087  1B3D  178B               	bsf	11,7	;volatile
  8088  1B3E                     l3359:
  8089                           
  8090                           ;main_master.c: 62:     PIE1bits.RCIE=1;
  8091  1B3E  1683               	bsf	3,5	;RP0=1, select bank1
  8092  1B3F  1303               	bcf	3,6	;RP1=0, select bank1
  8093  1B40  168C               	bsf	12,5	;volatile
  8094  1B41                     l3361:
  8095                           
  8096                           ;main_master.c: 63:     PIR1bits.RCIF=0;
  8097  1B41  1283               	bcf	3,5	;RP0=0, select bank0
  8098  1B42  1303               	bcf	3,6	;RP1=0, select bank0
  8099  1B43  128C               	bcf	12,5	;volatile
  8100  1B44                     l3363:
  8101                           
  8102                           ;main_master.c: 64:     TXSTAbits.CSRC = 0;
  8103  1B44  1683               	bsf	3,5	;RP0=1, select bank1
  8104  1B45  1303               	bcf	3,6	;RP1=0, select bank1
  8105  1B46  1398               	bcf	24,7	;volatile
  8106  1B47                     l3365:
  8107                           
  8108                           ;main_master.c: 65:     TXSTAbits.TX9 = 0;
  8109  1B47  1318               	bcf	24,6	;volatile
  8110  1B48                     l3367:
  8111                           
  8112                           ;main_master.c: 66:     TXSTAbits.TXEN = 1;
  8113  1B48  1698               	bsf	24,5	;volatile
  8114  1B49                     l3369:
  8115                           
  8116                           ;main_master.c: 67:     TXSTAbits.SYNC = 0;
  8117  1B49  1218               	bcf	24,4	;volatile
  8118  1B4A                     l3371:
  8119                           
  8120                           ;main_master.c: 68:     TXSTAbits.BRGH = 0;
  8121  1B4A  1118               	bcf	24,2	;volatile
  8122  1B4B                     l3373:
  8123                           
  8124                           ;main_master.c: 69:     TXSTAbits.TRMT = 0;
  8125  1B4B  1098               	bcf	24,1	;volatile
  8126  1B4C                     l3375:
  8127                           
  8128                           ;main_master.c: 70:     TXSTAbits.TX9D = 0;
  8129  1B4C  1018               	bcf	24,0	;volatile
  8130  1B4D                     l3377:
  8131                           
  8132                           ;main_master.c: 71:     RCSTAbits.SPEN = 1;
  8133  1B4D  1283               	bcf	3,5	;RP0=0, select bank0
  8134  1B4E  1303               	bcf	3,6	;RP1=0, select bank0
  8135  1B4F  1798               	bsf	24,7	;volatile
  8136  1B50                     l3379:
  8137                           
  8138                           ;main_master.c: 72:     RCSTAbits.RX9 = 0;
  8139  1B50  1318               	bcf	24,6	;volatile
  8140  1B51                     l3381:
  8141                           
  8142                           ;main_master.c: 73:     RCSTAbits.SREN = 0;
  8143  1B51  1298               	bcf	24,5	;volatile
  8144  1B52                     l3383:
  8145                           
  8146                           ;main_master.c: 74:     RCSTAbits.CREN = 1;
  8147  1B52  1618               	bsf	24,4	;volatile
  8148                           
  8149                           ;main_master.c: 75:     RCREG = 0;
  8150  1B53  019A               	clrf	26	;volatile
  8151  1B54                     l134:
  8152  1B54  0008               	return
  8153  1B55                     __end_of_setup:
  8154                           
  8155                           	psect	text23
  8156  1AA4                     __ptext23:	
  8157 ;; *************** function _USART_Write_String *****************
  8158 ;; Defined at:
  8159 ;;		line 11 in file "USART.c"
  8160 ;; Parameters:    Size  Location     Type
  8161 ;;  a               2    1[COMMON] PTR unsigned char 
  8162 ;;		 -> data(20), STR_1(18), 
  8163 ;; Auto vars:     Size  Location     Type
  8164 ;;  i               1    4[COMMON] unsigned char 
  8165 ;; Return value:  Size  Location     Type
  8166 ;;                  1    wreg      void 
  8167 ;; Registers used:
  8168 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8169 ;; Tracked objects:
  8170 ;;		On entry : 0/0
  8171 ;;		On exit  : 0/0
  8172 ;;		Unchanged: 0/0
  8173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8174 ;;      Params:         2       0       0       0       0
  8175 ;;      Locals:         1       0       0       0       0
  8176 ;;      Temps:          1       0       0       0       0
  8177 ;;      Totals:         4       0       0       0       0
  8178 ;;Total ram usage:        4 bytes
  8179 ;; Hardware stack levels used:    1
  8180 ;; Hardware stack levels required when called:    1
  8181 ;; This function calls:
  8182 ;;		_USART_Write
  8183 ;; This function is called by:
  8184 ;;		_main
  8185 ;; This function uses a non-reentrant model
  8186 ;;
  8187                           
  8188                           
  8189                           ;psect for function _USART_Write_String
  8190  1AA4                     _USART_Write_String:
  8191  1AA4                     l3417:	
  8192                           ;incstack = 0
  8193                           ; Regs used in _USART_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8194                           
  8195                           
  8196                           ;USART.c: 12:     uint8_t i;;USART.c: 13:     for(i=0;a[i]!='\0';i++){
  8197  1AA4  01F4               	clrf	USART_Write_String@i
  8198  1AA5  2ABB               	goto	l3423
  8199  1AA6                     l3419:
  8200                           
  8201                           ;USART.c: 14:         USART_Write(a[i]);
  8202  1AA6  0874               	movf	USART_Write_String@i,w
  8203  1AA7  0771               	addwf	USART_Write_String@a,w
  8204  1AA8  0084               	movwf	4
  8205  1AA9  0872               	movf	USART_Write_String@a+1,w
  8206  1AAA  1803               	skipnc
  8207  1AAB  0A72               	incf	USART_Write_String@a+1,w
  8208  1AAC  00FF               	movwf	btemp+1
  8209  1AAD  120A  118A  2003  160A  158A  	fcall	stringtab
  8210  1AB2  160A  158A  21A6  160A  158A  	fcall	_USART_Write
  8211  1AB7                     l3421:
  8212                           
  8213                           ;USART.c: 15:     }
  8214  1AB7  3001               	movlw	1
  8215  1AB8  00F3               	movwf	??_USART_Write_String
  8216  1AB9  0873               	movf	??_USART_Write_String,w
  8217  1ABA  07F4               	addwf	USART_Write_String@i,f
  8218  1ABB                     l3423:
  8219  1ABB  0874               	movf	USART_Write_String@i,w
  8220  1ABC  0771               	addwf	USART_Write_String@a,w
  8221  1ABD  0084               	movwf	4
  8222  1ABE  0872               	movf	USART_Write_String@a+1,w
  8223  1ABF  1803               	skipnc
  8224  1AC0  0A72               	incf	USART_Write_String@a+1,w
  8225  1AC1  1283               	bcf	3,5	;RP0=0, select bank0
  8226  1AC2  1303               	bcf	3,6	;RP1=0, select bank0
  8227  1AC3  00FF               	movwf	btemp+1
  8228  1AC4  120A  118A  2003  160A  158A  	fcall	stringtab
  8229  1AC9  3A00               	xorlw	0
  8230  1ACA  1D03               	skipz
  8231  1ACB  2ACD               	goto	u5331
  8232  1ACC  2ACE               	goto	u5330
  8233  1ACD                     u5331:
  8234  1ACD  2AA6               	goto	l3419
  8235  1ACE                     u5330:
  8236  1ACE                     l171:
  8237  1ACE  0008               	return
  8238  1ACF                     __end_of_USART_Write_String:
  8239                           
  8240                           	psect	text24
  8241  19A6                     __ptext24:	
  8242 ;; *************** function _USART_Write *****************
  8243 ;; Defined at:
  8244 ;;		line 7 in file "USART.c"
  8245 ;; Parameters:    Size  Location     Type
  8246 ;;  a               1    wreg     unsigned char 
  8247 ;; Auto vars:     Size  Location     Type
  8248 ;;  a               1    0[COMMON] unsigned char 
  8249 ;; Return value:  Size  Location     Type
  8250 ;;                  1    wreg      void 
  8251 ;; Registers used:
  8252 ;;		wreg
  8253 ;; Tracked objects:
  8254 ;;		On entry : 0/0
  8255 ;;		On exit  : 0/0
  8256 ;;		Unchanged: 0/0
  8257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8258 ;;      Params:         0       0       0       0       0
  8259 ;;      Locals:         1       0       0       0       0
  8260 ;;      Temps:          0       0       0       0       0
  8261 ;;      Totals:         1       0       0       0       0
  8262 ;;Total ram usage:        1 bytes
  8263 ;; Hardware stack levels used:    1
  8264 ;; This function calls:
  8265 ;;		Nothing
  8266 ;; This function is called by:
  8267 ;;		_main
  8268 ;;		_USART_Write_String
  8269 ;; This function uses a non-reentrant model
  8270 ;;
  8271                           
  8272                           
  8273                           ;psect for function _USART_Write
  8274  19A6                     _USART_Write:
  8275                           
  8276                           ;incstack = 0
  8277                           ; Regs used in _USART_Write: [wreg]
  8278                           ;USART_Write@a stored from wreg
  8279  19A6  00F0               	movwf	USART_Write@a
  8280  19A7                     l2937:
  8281  19A7                     l162:	
  8282                           ;USART.c: 8:     while(!TRMT);
  8283                           
  8284  19A7  1683               	bsf	3,5	;RP0=1, select bank1
  8285  19A8  1303               	bcf	3,6	;RP1=0, select bank1
  8286  19A9  1C98               	btfss	24,1	;volatile
  8287  19AA  29AC               	goto	u4221
  8288  19AB  29AD               	goto	u4220
  8289  19AC                     u4221:
  8290  19AC  29A7               	goto	l162
  8291  19AD                     u4220:
  8292  19AD                     l2939:
  8293                           
  8294                           ;USART.c: 9:     TXREG=a;
  8295  19AD  0870               	movf	USART_Write@a,w
  8296  19AE  1283               	bcf	3,5	;RP0=0, select bank0
  8297  19AF  1303               	bcf	3,6	;RP1=0, select bank0
  8298  19B0  0099               	movwf	25	;volatile
  8299  19B1                     l165:
  8300  19B1  0008               	return
  8301  19B2                     __end_of_USART_Write:
  8302                           
  8303                           	psect	text25
  8304  00CC                     __ptext25:	
  8305 ;; *************** function _Slave3 *****************
  8306 ;; Defined at:
  8307 ;;		line 102 in file "main_master.c"
  8308 ;; Parameters:    Size  Location     Type
  8309 ;;		None
  8310 ;; Auto vars:     Size  Location     Type
  8311 ;;		None
  8312 ;; Return value:  Size  Location     Type
  8313 ;;                  4    0[BANK0 ] float 
  8314 ;; Registers used:
  8315 ;;		wreg, status,2, status,0, pclath, cstack
  8316 ;; Tracked objects:
  8317 ;;		On entry : 0/0
  8318 ;;		On exit  : 0/0
  8319 ;;		Unchanged: 0/0
  8320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8321 ;;      Params:         0       4       0       0       0
  8322 ;;      Locals:         0       0       0       0       0
  8323 ;;      Temps:          0       4       0       0       0
  8324 ;;      Totals:         0       8       0       0       0
  8325 ;;Total ram usage:        8 bytes
  8326 ;; Hardware stack levels used:    1
  8327 ;; Hardware stack levels required when called:    2
  8328 ;; This function calls:
  8329 ;;		___xxtofl
  8330 ;;		_spiRead
  8331 ;;		_spiWrite
  8332 ;; This function is called by:
  8333 ;;		_main
  8334 ;; This function uses a non-reentrant model
  8335 ;;
  8336                           
  8337                           
  8338                           ;psect for function _Slave3
  8339  00CC                     _Slave3:
  8340  00CC                     l3405:	
  8341                           ;incstack = 0
  8342                           ; Regs used in _Slave3: [wreg+status,2+status,0+pclath+cstack]
  8343                           
  8344                           
  8345                           ;main_master.c: 103:     PORTCbits.RC2 = 0;
  8346  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  8347  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  8348  00CE  1107               	bcf	7,2	;volatile
  8349  00CF                     l3407:
  8350                           
  8351                           ;main_master.c: 104:     _delay((unsigned long)((1)*(4000000/4000.0)));
  8352  00CF  30C7               	movlw	199
  8353  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  8354  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  8355  00D2  00A4               	movwf	??_Slave3
  8356  00D3                     u5887:
  8357  00D3  28D4               	nop2
  8358  00D4  0BA4               	decfsz	??_Slave3,f
  8359  00D5  28D3               	goto	u5887
  8360  00D6  28D7               	nop2
  8361  00D7                     l3409:
  8362                           
  8363                           ;main_master.c: 105:     spiWrite(1);
  8364  00D7  3001               	movlw	1
  8365  00D8  120A  158A  2000  120A  118A  	fcall	_spiWrite
  8366  00DD                     l3411:
  8367                           
  8368                           ;main_master.c: 107:     TEMP = spiRead();
  8369  00DD  160A  118A  2000  120A  118A  	fcall	_spiRead
  8370  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  8371  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  8372  00E4  00A4               	movwf	??_Slave3
  8373  00E5  01A5               	clrf	??_Slave3+1
  8374  00E6  01A6               	clrf	??_Slave3+2
  8375  00E7  01A7               	clrf	??_Slave3+3
  8376  00E8  0827               	movf	??_Slave3+3,w
  8377  00E9  00F3               	movwf	___xxtofl@val+3
  8378  00EA  0826               	movf	??_Slave3+2,w
  8379  00EB  00F2               	movwf	___xxtofl@val+2
  8380  00EC  0825               	movf	??_Slave3+1,w
  8381  00ED  00F1               	movwf	___xxtofl@val+1
  8382  00EE  0824               	movf	??_Slave3,w
  8383  00EF  00F0               	movwf	___xxtofl@val
  8384  00F0  3000               	movlw	0
  8385  00F1  160A  158A  2689  120A  118A  	fcall	___xxtofl
  8386  00F6  0873               	movf	?___xxtofl+3,w
  8387  00F7  1683               	bsf	3,5	;RP0=1, select bank1
  8388  00F8  1303               	bcf	3,6	;RP1=0, select bank1
  8389  00F9  00D1               	movwf	(_TEMP+3)^(0+128)
  8390  00FA  0872               	movf	?___xxtofl+2,w
  8391  00FB  00D0               	movwf	(_TEMP+2)^(0+128)
  8392  00FC  0871               	movf	?___xxtofl+1,w
  8393  00FD  00CF               	movwf	(_TEMP+1)^(0+128)
  8394  00FE  0870               	movf	?___xxtofl,w
  8395  00FF  00CE               	movwf	_TEMP^(0+128)
  8396                           
  8397                           ;main_master.c: 108:     _delay((unsigned long)((1)*(4000000/4000.0)));
  8398  0100  30C7               	movlw	199
  8399  0101  1283               	bcf	3,5	;RP0=0, select bank0
  8400  0102  1303               	bcf	3,6	;RP1=0, select bank0
  8401  0103  00A4               	movwf	??_Slave3
  8402  0104                     u5897:
  8403  0104  2905               	nop2
  8404  0105  0BA4               	decfsz	??_Slave3,f
  8405  0106  2904               	goto	u5897
  8406  0107  2908               	nop2
  8407  0108                     l3413:
  8408                           
  8409                           ;main_master.c: 109:     PORTCbits.RC2 = 1;
  8410  0108  1283               	bcf	3,5	;RP0=0, select bank0
  8411  0109  1303               	bcf	3,6	;RP1=0, select bank0
  8412  010A  1507               	bsf	7,2	;volatile
  8413                           
  8414                           ;main_master.c: 110:     _delay((unsigned long)((1)*(4000000/4000.0)));
  8415  010B  30C7               	movlw	199
  8416  010C  1283               	bcf	3,5	;RP0=0, select bank0
  8417  010D  1303               	bcf	3,6	;RP1=0, select bank0
  8418  010E  00A4               	movwf	??_Slave3
  8419  010F                     u5907:
  8420  010F  2910               	nop2
  8421  0110  0BA4               	decfsz	??_Slave3,f
  8422  0111  290F               	goto	u5907
  8423  0112  2913               	nop2
  8424                           
  8425                           ;main_master.c: 111:     return TEMP;
  8426  0113  1683               	bsf	3,5	;RP0=1, select bank1
  8427  0114  1303               	bcf	3,6	;RP1=0, select bank1
  8428  0115  0851               	movf	(_TEMP+3)^(0+128),w
  8429  0116  1283               	bcf	3,5	;RP0=0, select bank0
  8430  0117  1303               	bcf	3,6	;RP1=0, select bank0
  8431  0118  00A3               	movwf	?_Slave3+3
  8432  0119  1683               	bsf	3,5	;RP0=1, select bank1
  8433  011A  1303               	bcf	3,6	;RP1=0, select bank1
  8434  011B  0850               	movf	(_TEMP+2)^(0+128),w
  8435  011C  1283               	bcf	3,5	;RP0=0, select bank0
  8436  011D  1303               	bcf	3,6	;RP1=0, select bank0
  8437  011E  00A2               	movwf	?_Slave3+2
  8438  011F  1683               	bsf	3,5	;RP0=1, select bank1
  8439  0120  1303               	bcf	3,6	;RP1=0, select bank1
  8440  0121  084F               	movf	(_TEMP+1)^(0+128),w
  8441  0122  1283               	bcf	3,5	;RP0=0, select bank0
  8442  0123  1303               	bcf	3,6	;RP1=0, select bank0
  8443  0124  00A1               	movwf	?_Slave3+1
  8444  0125  1683               	bsf	3,5	;RP0=1, select bank1
  8445  0126  1303               	bcf	3,6	;RP1=0, select bank1
  8446  0127  084E               	movf	_TEMP^(0+128),w
  8447  0128  1283               	bcf	3,5	;RP0=0, select bank0
  8448  0129  1303               	bcf	3,6	;RP1=0, select bank0
  8449  012A  00A0               	movwf	?_Slave3
  8450  012B                     l143:
  8451  012B  0008               	return
  8452  012C                     __end_of_Slave3:
  8453                           
  8454                           	psect	text26
  8455  1E89                     __ptext26:	
  8456 ;; *************** function ___xxtofl *****************
  8457 ;; Defined at:
  8458 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  8459 ;; Parameters:    Size  Location     Type
  8460 ;;  sign            1    wreg     unsigned char 
  8461 ;;  val             4    0[COMMON] long 
  8462 ;; Auto vars:     Size  Location     Type
  8463 ;;  sign            1    8[COMMON] unsigned char 
  8464 ;;  arg             4   10[COMMON] unsigned long 
  8465 ;;  exp             1    9[COMMON] unsigned char 
  8466 ;; Return value:  Size  Location     Type
  8467 ;;                  4    0[COMMON] unsigned char 
  8468 ;; Registers used:
  8469 ;;		wreg, status,2, status,0
  8470 ;; Tracked objects:
  8471 ;;		On entry : 0/0
  8472 ;;		On exit  : 0/0
  8473 ;;		Unchanged: 0/0
  8474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8475 ;;      Params:         4       0       0       0       0
  8476 ;;      Locals:         6       0       0       0       0
  8477 ;;      Temps:          4       0       0       0       0
  8478 ;;      Totals:        14       0       0       0       0
  8479 ;;Total ram usage:       14 bytes
  8480 ;; Hardware stack levels used:    1
  8481 ;; This function calls:
  8482 ;;		Nothing
  8483 ;; This function is called by:
  8484 ;;		_Slave3
  8485 ;;		_sprintf
  8486 ;; This function uses a non-reentrant model
  8487 ;;
  8488                           
  8489                           
  8490                           ;psect for function ___xxtofl
  8491  1E89                     ___xxtofl:
  8492                           
  8493                           ;incstack = 0
  8494                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8495                           ;___xxtofl@sign stored from wreg
  8496  1E89  00F8               	movwf	___xxtofl@sign
  8497  1E8A                     l3255:
  8498  1E8A  0878               	movf	___xxtofl@sign,w
  8499  1E8B  1903               	btfsc	3,2
  8500  1E8C  2E8E               	goto	u5141
  8501  1E8D  2E8F               	goto	u5140
  8502  1E8E                     u5141:
  8503  1E8E  2EA3               	goto	l3261
  8504  1E8F                     u5140:
  8505  1E8F                     l3257:
  8506  1E8F  1FF3               	btfss	___xxtofl@val+3,7
  8507  1E90  2E92               	goto	u5151
  8508  1E91  2E93               	goto	u5150
  8509  1E92                     u5151:
  8510  1E92  2EA3               	goto	l3261
  8511  1E93                     u5150:
  8512  1E93                     l3259:
  8513  1E93  0970               	comf	___xxtofl@val,w
  8514  1E94  00FA               	movwf	___xxtofl@arg
  8515  1E95  0971               	comf	___xxtofl@val+1,w
  8516  1E96  00FB               	movwf	___xxtofl@arg+1
  8517  1E97  0972               	comf	___xxtofl@val+2,w
  8518  1E98  00FC               	movwf	___xxtofl@arg+2
  8519  1E99  0973               	comf	___xxtofl@val+3,w
  8520  1E9A  00FD               	movwf	___xxtofl@arg+3
  8521  1E9B  0AFA               	incf	___xxtofl@arg,f
  8522  1E9C  1903               	skipnz
  8523  1E9D  0AFB               	incf	___xxtofl@arg+1,f
  8524  1E9E  1903               	skipnz
  8525  1E9F  0AFC               	incf	___xxtofl@arg+2,f
  8526  1EA0  1903               	skipnz
  8527  1EA1  0AFD               	incf	___xxtofl@arg+3,f
  8528  1EA2  2EAB               	goto	l883
  8529  1EA3                     l3261:
  8530  1EA3  0873               	movf	___xxtofl@val+3,w
  8531  1EA4  00FD               	movwf	___xxtofl@arg+3
  8532  1EA5  0872               	movf	___xxtofl@val+2,w
  8533  1EA6  00FC               	movwf	___xxtofl@arg+2
  8534  1EA7  0871               	movf	___xxtofl@val+1,w
  8535  1EA8  00FB               	movwf	___xxtofl@arg+1
  8536  1EA9  0870               	movf	___xxtofl@val,w
  8537  1EAA  00FA               	movwf	___xxtofl@arg
  8538  1EAB                     l883:
  8539  1EAB  0873               	movf	___xxtofl@val+3,w
  8540  1EAC  0472               	iorwf	___xxtofl@val+2,w
  8541  1EAD  0471               	iorwf	___xxtofl@val+1,w
  8542  1EAE  0470               	iorwf	___xxtofl@val,w
  8543  1EAF  1D03               	skipz
  8544  1EB0  2EB2               	goto	u5161
  8545  1EB1  2EB3               	goto	u5160
  8546  1EB2                     u5161:
  8547  1EB2  2EBC               	goto	l3267
  8548  1EB3                     u5160:
  8549  1EB3                     l3263:
  8550  1EB3  3000               	movlw	0
  8551  1EB4  00F3               	movwf	?___xxtofl+3
  8552  1EB5  3000               	movlw	0
  8553  1EB6  00F2               	movwf	?___xxtofl+2
  8554  1EB7  3000               	movlw	0
  8555  1EB8  00F1               	movwf	?___xxtofl+1
  8556  1EB9  3000               	movlw	0
  8557  1EBA  00F0               	movwf	?___xxtofl
  8558  1EBB  2F42               	goto	l885
  8559  1EBC                     l3267:
  8560  1EBC  3096               	movlw	150
  8561  1EBD  00F4               	movwf	??___xxtofl
  8562  1EBE  0874               	movf	??___xxtofl,w
  8563  1EBF  00F9               	movwf	___xxtofl@exp
  8564  1EC0  2ECE               	goto	l3271
  8565  1EC1                     l3269:
  8566  1EC1  3001               	movlw	1
  8567  1EC2  00F4               	movwf	??___xxtofl
  8568  1EC3  0874               	movf	??___xxtofl,w
  8569  1EC4  07F9               	addwf	___xxtofl@exp,f
  8570  1EC5  3001               	movlw	1
  8571  1EC6                     u5175:
  8572  1EC6  1003               	clrc
  8573  1EC7  0CFD               	rrf	___xxtofl@arg+3,f
  8574  1EC8  0CFC               	rrf	___xxtofl@arg+2,f
  8575  1EC9  0CFB               	rrf	___xxtofl@arg+1,f
  8576  1ECA  0CFA               	rrf	___xxtofl@arg,f
  8577  1ECB  3EFF               	addlw	-1
  8578  1ECC  1D03               	skipz
  8579  1ECD  2EC6               	goto	u5175
  8580  1ECE                     l3271:
  8581  1ECE  30FE               	movlw	254
  8582  1ECF  057D               	andwf	___xxtofl@arg+3,w
  8583  1ED0  1D03               	btfss	3,2
  8584  1ED1  2ED3               	goto	u5181
  8585  1ED2  2ED4               	goto	u5180
  8586  1ED3                     u5181:
  8587  1ED3  2EC1               	goto	l3269
  8588  1ED4                     u5180:
  8589  1ED4  2EF0               	goto	l889
  8590  1ED5                     l3273:
  8591  1ED5  3001               	movlw	1
  8592  1ED6  00F4               	movwf	??___xxtofl
  8593  1ED7  0874               	movf	??___xxtofl,w
  8594  1ED8  07F9               	addwf	___xxtofl@exp,f
  8595  1ED9                     l3275:
  8596  1ED9  3001               	movlw	1
  8597  1EDA  07FA               	addwf	___xxtofl@arg,f
  8598  1EDB  3000               	movlw	0
  8599  1EDC  1803               	skipnc
  8600  1EDD  3001               	movlw	1
  8601  1EDE  07FB               	addwf	___xxtofl@arg+1,f
  8602  1EDF  3000               	movlw	0
  8603  1EE0  1803               	skipnc
  8604  1EE1  3001               	movlw	1
  8605  1EE2  07FC               	addwf	___xxtofl@arg+2,f
  8606  1EE3  3000               	movlw	0
  8607  1EE4  1803               	skipnc
  8608  1EE5  3001               	movlw	1
  8609  1EE6  07FD               	addwf	___xxtofl@arg+3,f
  8610  1EE7                     l3277:
  8611  1EE7  3001               	movlw	1
  8612  1EE8                     u5195:
  8613  1EE8  1003               	clrc
  8614  1EE9  0CFD               	rrf	___xxtofl@arg+3,f
  8615  1EEA  0CFC               	rrf	___xxtofl@arg+2,f
  8616  1EEB  0CFB               	rrf	___xxtofl@arg+1,f
  8617  1EEC  0CFA               	rrf	___xxtofl@arg,f
  8618  1EED  3EFF               	addlw	-1
  8619  1EEE  1D03               	skipz
  8620  1EEF  2EE8               	goto	u5195
  8621  1EF0                     l889:
  8622  1EF0  30FF               	movlw	255
  8623  1EF1  057D               	andwf	___xxtofl@arg+3,w
  8624  1EF2  1D03               	btfss	3,2
  8625  1EF3  2EF5               	goto	u5201
  8626  1EF4  2EF6               	goto	u5200
  8627  1EF5                     u5201:
  8628  1EF5  2ED5               	goto	l3273
  8629  1EF6                     u5200:
  8630  1EF6  2F02               	goto	l3281
  8631  1EF7                     l3279:
  8632  1EF7  3001               	movlw	1
  8633  1EF8  02F9               	subwf	___xxtofl@exp,f
  8634  1EF9  3001               	movlw	1
  8635  1EFA  00F4               	movwf	??___xxtofl
  8636  1EFB                     u5215:
  8637  1EFB  1003               	clrc
  8638  1EFC  0DFA               	rlf	___xxtofl@arg,f
  8639  1EFD  0DFB               	rlf	___xxtofl@arg+1,f
  8640  1EFE  0DFC               	rlf	___xxtofl@arg+2,f
  8641  1EFF  0DFD               	rlf	___xxtofl@arg+3,f
  8642  1F00  0BF4               	decfsz	??___xxtofl,f
  8643  1F01  2EFB               	goto	u5215
  8644  1F02                     l3281:
  8645  1F02  1BFC               	btfsc	___xxtofl@arg+2,7
  8646  1F03  2F05               	goto	u5221
  8647  1F04  2F06               	goto	u5220
  8648  1F05                     u5221:
  8649  1F05  2F0C               	goto	l896
  8650  1F06                     u5220:
  8651  1F06                     l3283:
  8652  1F06  3002               	movlw	2
  8653  1F07  0279               	subwf	___xxtofl@exp,w
  8654  1F08  1803               	skipnc
  8655  1F09  2F0B               	goto	u5231
  8656  1F0A  2F0C               	goto	u5230
  8657  1F0B                     u5231:
  8658  1F0B  2EF7               	goto	l3279
  8659  1F0C                     u5230:
  8660  1F0C                     l896:
  8661  1F0C  1879               	btfsc	___xxtofl@exp,0
  8662  1F0D  2F0F               	goto	u5241
  8663  1F0E  2F10               	goto	u5240
  8664  1F0F                     u5241:
  8665  1F0F  2F18               	goto	l897
  8666  1F10                     u5240:
  8667  1F10                     l3285:
  8668  1F10  30FF               	movlw	255
  8669  1F11  05FA               	andwf	___xxtofl@arg,f
  8670  1F12  30FF               	movlw	255
  8671  1F13  05FB               	andwf	___xxtofl@arg+1,f
  8672  1F14  307F               	movlw	127
  8673  1F15  05FC               	andwf	___xxtofl@arg+2,f
  8674  1F16  30FF               	movlw	255
  8675  1F17  05FD               	andwf	___xxtofl@arg+3,f
  8676  1F18                     l897:
  8677  1F18  1003               	clrc
  8678  1F19  0CF9               	rrf	___xxtofl@exp,f
  8679  1F1A                     l3287:
  8680  1F1A  0879               	movf	___xxtofl@exp,w
  8681  1F1B  00F4               	movwf	??___xxtofl
  8682  1F1C  01F5               	clrf	??___xxtofl+1
  8683  1F1D  01F6               	clrf	??___xxtofl+2
  8684  1F1E  01F7               	clrf	??___xxtofl+3
  8685  1F1F  3018               	movlw	24
  8686  1F20                     u5255:
  8687  1F20  1003               	clrc
  8688  1F21  0DF4               	rlf	??___xxtofl,f
  8689  1F22  0DF5               	rlf	??___xxtofl+1,f
  8690  1F23  0DF6               	rlf	??___xxtofl+2,f
  8691  1F24  0DF7               	rlf	??___xxtofl+3,f
  8692  1F25                     u5250:
  8693  1F25  3EFF               	addlw	-1
  8694  1F26  1D03               	skipz
  8695  1F27  2F20               	goto	u5255
  8696  1F28  0874               	movf	??___xxtofl,w
  8697  1F29  04FA               	iorwf	___xxtofl@arg,f
  8698  1F2A  0875               	movf	??___xxtofl+1,w
  8699  1F2B  04FB               	iorwf	___xxtofl@arg+1,f
  8700  1F2C  0876               	movf	??___xxtofl+2,w
  8701  1F2D  04FC               	iorwf	___xxtofl@arg+2,f
  8702  1F2E  0877               	movf	??___xxtofl+3,w
  8703  1F2F  04FD               	iorwf	___xxtofl@arg+3,f
  8704  1F30                     l3289:
  8705  1F30  0878               	movf	___xxtofl@sign,w
  8706  1F31  1903               	btfsc	3,2
  8707  1F32  2F34               	goto	u5261
  8708  1F33  2F35               	goto	u5260
  8709  1F34                     u5261:
  8710  1F34  2F3A               	goto	l3295
  8711  1F35                     u5260:
  8712  1F35                     l3291:
  8713  1F35  1FF3               	btfss	___xxtofl@val+3,7
  8714  1F36  2F38               	goto	u5271
  8715  1F37  2F39               	goto	u5270
  8716  1F38                     u5271:
  8717  1F38  2F3A               	goto	l3295
  8718  1F39                     u5270:
  8719  1F39                     l3293:
  8720  1F39  17FD               	bsf	___xxtofl@arg+3,7
  8721  1F3A                     l3295:
  8722  1F3A  087D               	movf	___xxtofl@arg+3,w
  8723  1F3B  00F3               	movwf	?___xxtofl+3
  8724  1F3C  087C               	movf	___xxtofl@arg+2,w
  8725  1F3D  00F2               	movwf	?___xxtofl+2
  8726  1F3E  087B               	movf	___xxtofl@arg+1,w
  8727  1F3F  00F1               	movwf	?___xxtofl+1
  8728  1F40  087A               	movf	___xxtofl@arg,w
  8729  1F41  00F0               	movwf	?___xxtofl
  8730  1F42                     l885:
  8731  1F42  0008               	return
  8732  1F43                     __end_of___xxtofl:
  8733                           
  8734                           	psect	text27
  8735  1AFB                     __ptext27:	
  8736 ;; *************** function _Slave2 *****************
  8737 ;; Defined at:
  8738 ;;		line 91 in file "main_master.c"
  8739 ;; Parameters:    Size  Location     Type
  8740 ;;		None
  8741 ;; Auto vars:     Size  Location     Type
  8742 ;;		None
  8743 ;; Return value:  Size  Location     Type
  8744 ;;                  1    wreg      void 
  8745 ;; Registers used:
  8746 ;;		wreg, status,2, status,0, pclath, cstack
  8747 ;; Tracked objects:
  8748 ;;		On entry : 0/0
  8749 ;;		On exit  : 0/0
  8750 ;;		Unchanged: 0/0
  8751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8752 ;;      Params:         0       0       0       0       0
  8753 ;;      Locals:         0       0       0       0       0
  8754 ;;      Temps:          1       0       0       0       0
  8755 ;;      Totals:         1       0       0       0       0
  8756 ;;Total ram usage:        1 bytes
  8757 ;; Hardware stack levels used:    1
  8758 ;; Hardware stack levels required when called:    2
  8759 ;; This function calls:
  8760 ;;		_spiRead
  8761 ;;		_spiWrite
  8762 ;; This function is called by:
  8763 ;;		_main
  8764 ;; This function uses a non-reentrant model
  8765 ;;
  8766                           
  8767                           
  8768                           ;psect for function _Slave2
  8769  1AFB                     _Slave2:
  8770  1AFB                     l3395:	
  8771                           ;incstack = 0
  8772                           ; Regs used in _Slave2: [wreg+status,2+status,0+pclath+cstack]
  8773                           
  8774                           
  8775                           ;main_master.c: 92:     PORTCbits.RC1 = 0;
  8776  1AFB  1283               	bcf	3,5	;RP0=0, select bank0
  8777  1AFC  1303               	bcf	3,6	;RP1=0, select bank0
  8778  1AFD  1087               	bcf	7,1	;volatile
  8779  1AFE                     l3397:
  8780                           
  8781                           ;main_master.c: 93:     _delay((unsigned long)((1)*(4000000/4000.0)));
  8782  1AFE  30C7               	movlw	199
  8783  1AFF  00F1               	movwf	??_Slave2
  8784  1B00                     u5917:
  8785  1B00  2B01               	nop2
  8786  1B01  0BF1               	decfsz	??_Slave2,f
  8787  1B02  2B00               	goto	u5917
  8788  1B03  2B04               	nop2
  8789  1B04  2B05               	nop2
  8790  1B05                     l3399:
  8791                           
  8792                           ;main_master.c: 94:     spiWrite(1);
  8793  1B05  3001               	movlw	1
  8794  1B06  120A  158A  2000  160A  158A  	fcall	_spiWrite
  8795  1B0B                     l3401:
  8796                           
  8797                           ;main_master.c: 96:     LEDS = spiRead();
  8798  1B0B  160A  118A  2000  160A  158A  	fcall	_spiRead
  8799  1B10  00F1               	movwf	??_Slave2
  8800  1B11  0871               	movf	??_Slave2,w
  8801  1B12  1683               	bsf	3,5	;RP0=1, select bank1
  8802  1B13  1303               	bcf	3,6	;RP1=0, select bank1
  8803  1B14  00D2               	movwf	_LEDS^(0+128)
  8804                           
  8805                           ;main_master.c: 97:     _delay((unsigned long)((1)*(4000000/4000.0)));
  8806  1B15  30C7               	movlw	199
  8807  1B16  00F1               	movwf	??_Slave2
  8808  1B17                     u5927:
  8809  1B17  2B18               	nop2
  8810  1B18  0BF1               	decfsz	??_Slave2,f
  8811  1B19  2B17               	goto	u5927
  8812  1B1A  2B1B               	nop2
  8813  1B1B  2B1C               	nop2
  8814  1B1C                     l3403:
  8815                           
  8816                           ;main_master.c: 98:     PORTCbits.RC1 = 1;
  8817  1B1C  1283               	bcf	3,5	;RP0=0, select bank0
  8818  1B1D  1303               	bcf	3,6	;RP1=0, select bank0
  8819  1B1E  1487               	bsf	7,1	;volatile
  8820                           
  8821                           ;main_master.c: 99:     _delay((unsigned long)((1)*(4000000/4000.0)));
  8822  1B1F  30C7               	movlw	199
  8823  1B20  00F1               	movwf	??_Slave2
  8824  1B21                     u5937:
  8825  1B21  2B22               	nop2
  8826  1B22  0BF1               	decfsz	??_Slave2,f
  8827  1B23  2B21               	goto	u5937
  8828  1B24  2B25               	nop2
  8829  1B25  2B26               	nop2
  8830  1B26                     l140:
  8831  1B26  0008               	return
  8832  1B27                     __end_of_Slave2:
  8833                           
  8834                           	psect	text28
  8835  1ACF                     __ptext28:	
  8836 ;; *************** function _Slave1 *****************
  8837 ;; Defined at:
  8838 ;;		line 80 in file "main_master.c"
  8839 ;; Parameters:    Size  Location     Type
  8840 ;;		None
  8841 ;; Auto vars:     Size  Location     Type
  8842 ;;		None
  8843 ;; Return value:  Size  Location     Type
  8844 ;;                  1    wreg      void 
  8845 ;; Registers used:
  8846 ;;		wreg, status,2, status,0, pclath, cstack
  8847 ;; Tracked objects:
  8848 ;;		On entry : 0/0
  8849 ;;		On exit  : 0/0
  8850 ;;		Unchanged: 0/0
  8851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8852 ;;      Params:         0       0       0       0       0
  8853 ;;      Locals:         0       0       0       0       0
  8854 ;;      Temps:          1       0       0       0       0
  8855 ;;      Totals:         1       0       0       0       0
  8856 ;;Total ram usage:        1 bytes
  8857 ;; Hardware stack levels used:    1
  8858 ;; Hardware stack levels required when called:    2
  8859 ;; This function calls:
  8860 ;;		_spiRead
  8861 ;;		_spiWrite
  8862 ;; This function is called by:
  8863 ;;		_main
  8864 ;; This function uses a non-reentrant model
  8865 ;;
  8866                           
  8867                           
  8868                           ;psect for function _Slave1
  8869  1ACF                     _Slave1:
  8870  1ACF                     l3385:	
  8871                           ;incstack = 0
  8872                           ; Regs used in _Slave1: [wreg+status,2+status,0+pclath+cstack]
  8873                           
  8874                           
  8875                           ;main_master.c: 81:     PORTCbits.RC0 = 0;
  8876  1ACF  1283               	bcf	3,5	;RP0=0, select bank0
  8877  1AD0  1303               	bcf	3,6	;RP1=0, select bank0
  8878  1AD1  1007               	bcf	7,0	;volatile
  8879  1AD2                     l3387:
  8880                           
  8881                           ;main_master.c: 82:     _delay((unsigned long)((1)*(4000000/4000.0)));
  8882  1AD2  30C7               	movlw	199
  8883  1AD3  00F1               	movwf	??_Slave1
  8884  1AD4                     u5947:
  8885  1AD4  2AD5               	nop2
  8886  1AD5  0BF1               	decfsz	??_Slave1,f
  8887  1AD6  2AD4               	goto	u5947
  8888  1AD7  2AD8               	nop2
  8889  1AD8  2AD9               	nop2
  8890  1AD9                     l3389:
  8891                           
  8892                           ;main_master.c: 83:     spiWrite(1);
  8893  1AD9  3001               	movlw	1
  8894  1ADA  120A  158A  2000  160A  158A  	fcall	_spiWrite
  8895  1ADF                     l3391:
  8896                           
  8897                           ;main_master.c: 85:     V_ADC = spiRead();
  8898  1ADF  160A  118A  2000  160A  158A  	fcall	_spiRead
  8899  1AE4  00F1               	movwf	??_Slave1
  8900  1AE5  0871               	movf	??_Slave1,w
  8901  1AE6  1683               	bsf	3,5	;RP0=1, select bank1
  8902  1AE7  1303               	bcf	3,6	;RP1=0, select bank1
  8903  1AE8  00D3               	movwf	_V_ADC^(0+128)
  8904                           
  8905                           ;main_master.c: 86:     _delay((unsigned long)((1)*(4000000/4000.0)));
  8906  1AE9  30C7               	movlw	199
  8907  1AEA  00F1               	movwf	??_Slave1
  8908  1AEB                     u5957:
  8909  1AEB  2AEC               	nop2
  8910  1AEC  0BF1               	decfsz	??_Slave1,f
  8911  1AED  2AEB               	goto	u5957
  8912  1AEE  2AEF               	nop2
  8913  1AEF  2AF0               	nop2
  8914  1AF0                     l3393:
  8915                           
  8916                           ;main_master.c: 87:     PORTCbits.RC0 = 1;
  8917  1AF0  1283               	bcf	3,5	;RP0=0, select bank0
  8918  1AF1  1303               	bcf	3,6	;RP1=0, select bank0
  8919  1AF2  1407               	bsf	7,0	;volatile
  8920                           
  8921                           ;main_master.c: 88:     _delay((unsigned long)((1)*(4000000/4000.0)));
  8922  1AF3  30C7               	movlw	199
  8923  1AF4  00F1               	movwf	??_Slave1
  8924  1AF5                     u5967:
  8925  1AF5  2AF6               	nop2
  8926  1AF6  0BF1               	decfsz	??_Slave1,f
  8927  1AF7  2AF5               	goto	u5967
  8928  1AF8  2AF9               	nop2
  8929  1AF9  2AFA               	nop2
  8930  1AFA                     l137:
  8931  1AFA  0008               	return
  8932  1AFB                     __end_of_Slave1:
  8933                           
  8934                           	psect	text29
  8935  0800                     __ptext29:	
  8936 ;; *************** function _spiWrite *****************
  8937 ;; Defined at:
  8938 ;;		line 29 in file "SPI.c"
  8939 ;; Parameters:    Size  Location     Type
  8940 ;;  dat             1    wreg     unsigned char 
  8941 ;; Auto vars:     Size  Location     Type
  8942 ;;  dat             1    0[COMMON] unsigned char 
  8943 ;; Return value:  Size  Location     Type
  8944 ;;                  1    wreg      void 
  8945 ;; Registers used:
  8946 ;;		wreg
  8947 ;; Tracked objects:
  8948 ;;		On entry : 0/0
  8949 ;;		On exit  : 0/0
  8950 ;;		Unchanged: 0/0
  8951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8952 ;;      Params:         0       0       0       0       0
  8953 ;;      Locals:         1       0       0       0       0
  8954 ;;      Temps:          0       0       0       0       0
  8955 ;;      Totals:         1       0       0       0       0
  8956 ;;Total ram usage:        1 bytes
  8957 ;; Hardware stack levels used:    1
  8958 ;; This function calls:
  8959 ;;		Nothing
  8960 ;; This function is called by:
  8961 ;;		_Slave1
  8962 ;;		_Slave2
  8963 ;;		_Slave3
  8964 ;; This function uses a non-reentrant model
  8965 ;;
  8966                           
  8967                           
  8968                           ;psect for function _spiWrite
  8969  0800                     _spiWrite:
  8970                           
  8971                           ;incstack = 0
  8972                           ; Regs used in _spiWrite: [wreg]
  8973                           ;spiWrite@dat stored from wreg
  8974  0800  00F0               	movwf	spiWrite@dat
  8975  0801                     l2929:
  8976                           
  8977                           ;SPI.c: 29: void spiWrite(char dat);SPI.c: 30: {;SPI.c: 31:     SSPBUF = dat;
  8978  0801  0870               	movf	spiWrite@dat,w
  8979  0802  1283               	bcf	3,5	;RP0=0, select bank0
  8980  0803  1303               	bcf	3,6	;RP1=0, select bank0
  8981  0804  0093               	movwf	19	;volatile
  8982  0805                     l203:
  8983  0805  0008               	return
  8984  0806                     __end_of_spiWrite:
  8985                           
  8986                           	psect	text30
  8987  1000                     __ptext30:	
  8988 ;; *************** function _spiRead *****************
  8989 ;; Defined at:
  8990 ;;		line 42 in file "SPI.c"
  8991 ;; Parameters:    Size  Location     Type
  8992 ;;		None
  8993 ;; Auto vars:     Size  Location     Type
  8994 ;;		None
  8995 ;; Return value:  Size  Location     Type
  8996 ;;                  1    wreg      unsigned char 
  8997 ;; Registers used:
  8998 ;;		wreg, status,2, status,0, pclath, cstack
  8999 ;; Tracked objects:
  9000 ;;		On entry : 0/0
  9001 ;;		On exit  : 0/0
  9002 ;;		Unchanged: 0/0
  9003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9004 ;;      Params:         0       0       0       0       0
  9005 ;;      Locals:         0       0       0       0       0
  9006 ;;      Temps:          0       0       0       0       0
  9007 ;;      Totals:         0       0       0       0       0
  9008 ;;Total ram usage:        0 bytes
  9009 ;; Hardware stack levels used:    1
  9010 ;; Hardware stack levels required when called:    1
  9011 ;; This function calls:
  9012 ;;		_spiReceiveWait
  9013 ;; This function is called by:
  9014 ;;		_Slave1
  9015 ;;		_Slave2
  9016 ;;		_Slave3
  9017 ;; This function uses a non-reentrant model
  9018 ;;
  9019                           
  9020                           
  9021                           ;psect for function _spiRead
  9022  1000                     _spiRead:
  9023  1000                     l2931:	
  9024                           ;incstack = 0
  9025                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  9026                           
  9027                           
  9028                           ;SPI.c: 44:     spiReceiveWait();
  9029  1000  160A  158A  218C  160A  118A  	fcall	_spiReceiveWait
  9030  1005                     l2933:
  9031                           
  9032                           ;SPI.c: 45:     return(SSPBUF);
  9033  1005  1283               	bcf	3,5	;RP0=0, select bank0
  9034  1006  1303               	bcf	3,6	;RP1=0, select bank0
  9035  1007  0813               	movf	19,w	;volatile
  9036  1008                     l211:
  9037  1008  0008               	return
  9038  1009                     __end_of_spiRead:
  9039                           
  9040                           	psect	text31
  9041  198C                     __ptext31:	
  9042 ;; *************** function _spiReceiveWait *****************
  9043 ;; Defined at:
  9044 ;;		line 24 in file "SPI.c"
  9045 ;; Parameters:    Size  Location     Type
  9046 ;;		None
  9047 ;; Auto vars:     Size  Location     Type
  9048 ;;		None
  9049 ;; Return value:  Size  Location     Type
  9050 ;;                  1    wreg      void 
  9051 ;; Registers used:
  9052 ;;		None
  9053 ;; Tracked objects:
  9054 ;;		On entry : 0/0
  9055 ;;		On exit  : 0/0
  9056 ;;		Unchanged: 0/0
  9057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9058 ;;      Params:         0       0       0       0       0
  9059 ;;      Locals:         0       0       0       0       0
  9060 ;;      Temps:          0       0       0       0       0
  9061 ;;      Totals:         0       0       0       0       0
  9062 ;;Total ram usage:        0 bytes
  9063 ;; Hardware stack levels used:    1
  9064 ;; This function calls:
  9065 ;;		Nothing
  9066 ;; This function is called by:
  9067 ;;		_spiRead
  9068 ;; This function uses a non-reentrant model
  9069 ;;
  9070                           
  9071                           
  9072                           ;psect for function _spiReceiveWait
  9073  198C                     _spiReceiveWait:
  9074  198C                     l2435:	
  9075                           ;incstack = 0
  9076                           ; Regs used in _spiReceiveWait: []
  9077                           
  9078  198C                     l197:	
  9079                           ;SPI.c: 26:     while ( !SSPSTATbits.BF );
  9080                           
  9081  198C  1683               	bsf	3,5	;RP0=1, select bank1
  9082  198D  1303               	bcf	3,6	;RP1=0, select bank1
  9083  198E  1C14               	btfss	20,0	;volatile
  9084  198F  2991               	goto	u3061
  9085  1990  2992               	goto	u3060
  9086  1991                     u3061:
  9087  1991  298C               	goto	l197
  9088  1992                     u3060:
  9089  1992                     l200:
  9090  1992  0008               	return
  9091  1993                     __end_of_spiReceiveWait:
  9092                           
  9093                           	psect	text32
  9094  19B2                     __ptext32:	
  9095 ;; *************** function _LCD_clear *****************
  9096 ;; Defined at:
  9097 ;;		line 42 in file "LCD.c"
  9098 ;; Parameters:    Size  Location     Type
  9099 ;;		None
  9100 ;; Auto vars:     Size  Location     Type
  9101 ;;		None
  9102 ;; Return value:  Size  Location     Type
  9103 ;;                  1    wreg      void 
  9104 ;; Registers used:
  9105 ;;		wreg, status,2, status,0, pclath, cstack
  9106 ;; Tracked objects:
  9107 ;;		On entry : 0/0
  9108 ;;		On exit  : 0/0
  9109 ;;		Unchanged: 0/0
  9110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9111 ;;      Params:         0       0       0       0       0
  9112 ;;      Locals:         0       0       0       0       0
  9113 ;;      Temps:          0       0       0       0       0
  9114 ;;      Totals:         0       0       0       0       0
  9115 ;;Total ram usage:        0 bytes
  9116 ;; Hardware stack levels used:    1
  9117 ;; Hardware stack levels required when called:    2
  9118 ;; This function calls:
  9119 ;;		_LCD_Comandos
  9120 ;; This function is called by:
  9121 ;;		_main
  9122 ;; This function uses a non-reentrant model
  9123 ;;
  9124                           
  9125                           
  9126                           ;psect for function _LCD_clear
  9127  19B2                     _LCD_clear:
  9128  19B2                     l3299:	
  9129                           ;incstack = 0
  9130                           ; Regs used in _LCD_clear: [wreg+status,2+status,0+pclath+cstack]
  9131                           
  9132                           
  9133                           ;LCD.c: 43:     LCD_Comandos(0);
  9134  19B2  3000               	movlw	0
  9135  19B3  160A  158A  21EE  160A  158A  	fcall	_LCD_Comandos
  9136                           
  9137                           ;LCD.c: 44:     LCD_Comandos(1);
  9138  19B8  3001               	movlw	1
  9139  19B9  160A  158A  21EE  160A  158A  	fcall	_LCD_Comandos
  9140  19BE                     l50:
  9141  19BE  0008               	return
  9142  19BF                     __end_of_LCD_clear:
  9143                           
  9144                           	psect	text33
  9145  1BCD                     __ptext33:	
  9146 ;; *************** function _LCD_Texto *****************
  9147 ;; Defined at:
  9148 ;;		line 79 in file "LCD.c"
  9149 ;; Parameters:    Size  Location     Type
  9150 ;;  a               2    3[COMMON] PTR unsigned char 
  9151 ;;		 -> STR_2(18), data(20), 
  9152 ;; Auto vars:     Size  Location     Type
  9153 ;;  i               2    8[COMMON] int 
  9154 ;; Return value:  Size  Location     Type
  9155 ;;                  1    wreg      void 
  9156 ;; Registers used:
  9157 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9158 ;; Tracked objects:
  9159 ;;		On entry : 0/0
  9160 ;;		On exit  : 0/0
  9161 ;;		Unchanged: 0/0
  9162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9163 ;;      Params:         2       0       0       0       0
  9164 ;;      Locals:         2       0       0       0       0
  9165 ;;      Temps:          3       0       0       0       0
  9166 ;;      Totals:         7       0       0       0       0
  9167 ;;Total ram usage:        7 bytes
  9168 ;; Hardware stack levels used:    1
  9169 ;; Hardware stack levels required when called:    2
  9170 ;; This function calls:
  9171 ;;		_LCD_Caracter
  9172 ;; This function is called by:
  9173 ;;		_main
  9174 ;; This function uses a non-reentrant model
  9175 ;;
  9176                           
  9177                           
  9178                           ;psect for function _LCD_Texto
  9179  1BCD                     _LCD_Texto:
  9180  1BCD                     l3337:	
  9181                           ;incstack = 0
  9182                           ; Regs used in _LCD_Texto: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9183                           
  9184                           
  9185                           ;LCD.c: 80:  int i;;LCD.c: 81:  for(i=0;a[i]!='\0';i++)
  9186  1BCD  01F8               	clrf	LCD_Texto@i
  9187  1BCE  01F9               	clrf	LCD_Texto@i+1
  9188  1BCF  2BF2               	goto	l3343
  9189  1BD0                     l3339:
  9190                           
  9191                           ;LCD.c: 82:     LCD_Caracter(a[i]);
  9192  1BD0  0878               	movf	LCD_Texto@i,w
  9193  1BD1  0773               	addwf	LCD_Texto@a,w
  9194  1BD2  00F6               	movwf	??_LCD_Texto+1
  9195  1BD3  0874               	movf	LCD_Texto@a+1,w
  9196  1BD4  00F5               	movwf	??_LCD_Texto
  9197  1BD5  1803               	skipnc
  9198  1BD6  0AF5               	incf	??_LCD_Texto,f
  9199  1BD7  1FF8               	btfss	LCD_Texto@i,7
  9200  1BD8  2BDA               	goto	u5300
  9201  1BD9  03F5               	decf	??_LCD_Texto,f
  9202  1BDA                     u5300:
  9203  1BDA  0875               	movf	??_LCD_Texto,w
  9204  1BDB  00F7               	movwf	??_LCD_Texto+2
  9205  1BDC  0877               	movf	??_LCD_Texto+2,w
  9206  1BDD  1283               	bcf	3,5	;RP0=0, select bank0
  9207  1BDE  1303               	bcf	3,6	;RP1=0, select bank0
  9208  1BDF  00FF               	movwf	btemp+1
  9209  1BE0  0876               	movf	??_LCD_Texto+1,w
  9210  1BE1  0084               	movwf	4
  9211  1BE2  120A  118A  2003  160A  158A  	fcall	stringtab
  9212  1BE7  160A  158A  21D1  160A  158A  	fcall	_LCD_Caracter
  9213  1BEC                     l3341:
  9214  1BEC  3001               	movlw	1
  9215  1BED  07F8               	addwf	LCD_Texto@i,f
  9216  1BEE  1803               	skipnc
  9217  1BEF  0AF9               	incf	LCD_Texto@i+1,f
  9218  1BF0  3000               	movlw	0
  9219  1BF1  07F9               	addwf	LCD_Texto@i+1,f
  9220  1BF2                     l3343:
  9221  1BF2  0878               	movf	LCD_Texto@i,w
  9222  1BF3  0773               	addwf	LCD_Texto@a,w
  9223  1BF4  00F6               	movwf	??_LCD_Texto+1
  9224  1BF5  0874               	movf	LCD_Texto@a+1,w
  9225  1BF6  00F5               	movwf	??_LCD_Texto
  9226  1BF7  1803               	skipnc
  9227  1BF8  0AF5               	incf	??_LCD_Texto,f
  9228  1BF9  1FF8               	btfss	LCD_Texto@i,7
  9229  1BFA  2BFC               	goto	u5310
  9230  1BFB  03F5               	decf	??_LCD_Texto,f
  9231  1BFC                     u5310:
  9232  1BFC  0875               	movf	??_LCD_Texto,w
  9233  1BFD  00F7               	movwf	??_LCD_Texto+2
  9234  1BFE  0877               	movf	??_LCD_Texto+2,w
  9235  1BFF  1283               	bcf	3,5	;RP0=0, select bank0
  9236  1C00  1303               	bcf	3,6	;RP1=0, select bank0
  9237  1C01  00FF               	movwf	btemp+1
  9238  1C02  0876               	movf	??_LCD_Texto+1,w
  9239  1C03  0084               	movwf	4
  9240  1C04  120A  118A  2003  160A  158A  	fcall	stringtab
  9241  1C09  3A00               	xorlw	0
  9242  1C0A  1D03               	skipz
  9243  1C0B  2C0D               	goto	u5321
  9244  1C0C  2C0E               	goto	u5320
  9245  1C0D                     u5321:
  9246  1C0D  2BD0               	goto	l3339
  9247  1C0E                     u5320:
  9248  1C0E                     l65:
  9249  1C0E  0008               	return
  9250  1C0F                     __end_of_LCD_Texto:
  9251                           
  9252                           	psect	text34
  9253  19D1                     __ptext34:	
  9254 ;; *************** function _LCD_Caracter *****************
  9255 ;; Defined at:
  9256 ;;		line 24 in file "LCD.c"
  9257 ;; Parameters:    Size  Location     Type
  9258 ;;  a               1    wreg     unsigned char 
  9259 ;; Auto vars:     Size  Location     Type
  9260 ;;  a               1    2[COMMON] unsigned char 
  9261 ;; Return value:  Size  Location     Type
  9262 ;;                  1    wreg      void 
  9263 ;; Registers used:
  9264 ;;		wreg, status,2, status,0, pclath, cstack
  9265 ;; Tracked objects:
  9266 ;;		On entry : 0/0
  9267 ;;		On exit  : 0/0
  9268 ;;		Unchanged: 0/0
  9269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9270 ;;      Params:         0       0       0       0       0
  9271 ;;      Locals:         1       0       0       0       0
  9272 ;;      Temps:          1       0       0       0       0
  9273 ;;      Totals:         2       0       0       0       0
  9274 ;;Total ram usage:        2 bytes
  9275 ;; Hardware stack levels used:    1
  9276 ;; Hardware stack levels required when called:    1
  9277 ;; This function calls:
  9278 ;;		_Pines
  9279 ;; This function is called by:
  9280 ;;		_LCD_Texto
  9281 ;; This function uses a non-reentrant model
  9282 ;;
  9283                           
  9284                           
  9285                           ;psect for function _LCD_Caracter
  9286  19D1                     _LCD_Caracter:
  9287                           
  9288                           ;incstack = 0
  9289                           ; Regs used in _LCD_Caracter: [wreg+status,2+status,0+pclath+cstack]
  9290                           ;LCD_Caracter@a stored from wreg
  9291  19D1  00F2               	movwf	LCD_Caracter@a
  9292  19D2                     l2901:
  9293                           
  9294                           ;LCD.c: 25:     RE0 = 1;
  9295  19D2  1283               	bcf	3,5	;RP0=0, select bank0
  9296  19D3  1303               	bcf	3,6	;RP1=0, select bank0
  9297  19D4  1409               	bsf	9,0	;volatile
  9298  19D5                     l2903:
  9299                           
  9300                           ;LCD.c: 26:     Pines(a);
  9301  19D5  0872               	movf	LCD_Caracter@a,w
  9302  19D6  160A  158A  238F  160A  158A  	fcall	_Pines
  9303  19DB                     l2905:
  9304                           
  9305                           ;LCD.c: 27:     RE1 = 1;
  9306  19DB  1283               	bcf	3,5	;RP0=0, select bank0
  9307  19DC  1303               	bcf	3,6	;RP1=0, select bank0
  9308  19DD  1489               	bsf	9,1	;volatile
  9309  19DE                     l2907:
  9310                           
  9311                           ;LCD.c: 28:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  9312  19DE  3003               	movlw	3
  9313  19DF  00F1               	movwf	??_LCD_Caracter
  9314  19E0                     u5977:
  9315  19E0  0BF1               	decfsz	??_LCD_Caracter,f
  9316  19E1  29E0               	goto	u5977
  9317  19E2                     l2909:
  9318                           
  9319                           ;LCD.c: 29:     RE1 = 0;
  9320  19E2  1283               	bcf	3,5	;RP0=0, select bank0
  9321  19E3  1303               	bcf	3,6	;RP1=0, select bank0
  9322  19E4  1089               	bcf	9,1	;volatile
  9323  19E5                     l2911:
  9324                           
  9325                           ;LCD.c: 30:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  9326  19E5  3003               	movlw	3
  9327  19E6  00F1               	movwf	??_LCD_Caracter
  9328  19E7                     u5987:
  9329  19E7  0BF1               	decfsz	??_LCD_Caracter,f
  9330  19E8  29E7               	goto	u5987
  9331  19E9                     l2913:
  9332                           
  9333                           ;LCD.c: 31:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  9334  19E9  3021               	movlw	33
  9335  19EA  00F1               	movwf	??_LCD_Caracter
  9336  19EB                     u5997:
  9337  19EB  0BF1               	decfsz	??_LCD_Caracter,f
  9338  19EC  29EB               	goto	u5997
  9339  19ED                     l44:
  9340  19ED  0008               	return
  9341  19EE                     __end_of_LCD_Caracter:
  9342                           
  9343                           	psect	text35
  9344  1E1F                     __ptext35:	
  9345 ;; *************** function _LCD_Init *****************
  9346 ;; Defined at:
  9347 ;;		line 46 in file "LCD.c"
  9348 ;; Parameters:    Size  Location     Type
  9349 ;;		None
  9350 ;; Auto vars:     Size  Location     Type
  9351 ;;		None
  9352 ;; Return value:  Size  Location     Type
  9353 ;;                  1    wreg      void 
  9354 ;; Registers used:
  9355 ;;		wreg, status,2, status,0, pclath, cstack
  9356 ;; Tracked objects:
  9357 ;;		On entry : 0/0
  9358 ;;		On exit  : 0/0
  9359 ;;		Unchanged: 0/0
  9360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9361 ;;      Params:         0       0       0       0       0
  9362 ;;      Locals:         0       0       0       0       0
  9363 ;;      Temps:          2       0       0       0       0
  9364 ;;      Totals:         2       0       0       0       0
  9365 ;;Total ram usage:        2 bytes
  9366 ;; Hardware stack levels used:    1
  9367 ;; Hardware stack levels required when called:    2
  9368 ;; This function calls:
  9369 ;;		_LCD_Comandos
  9370 ;; This function is called by:
  9371 ;;		_main
  9372 ;; This function uses a non-reentrant model
  9373 ;;
  9374                           
  9375                           
  9376                           ;psect for function _LCD_Init
  9377  1E1F                     _LCD_Init:
  9378  1E1F                     l3301:	
  9379                           ;incstack = 0
  9380                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  9381                           
  9382                           
  9383                           ;LCD.c: 47:     _delay((unsigned long)((20)*(8000000/4000.0)));
  9384  1E1F  3034               	movlw	52
  9385  1E20  00F5               	movwf	??_LCD_Init+1
  9386  1E21  30F1               	movlw	241
  9387  1E22  00F4               	movwf	??_LCD_Init
  9388  1E23                     u6007:
  9389  1E23  0BF4               	decfsz	??_LCD_Init,f
  9390  1E24  2E23               	goto	u6007
  9391  1E25  0BF5               	decfsz	??_LCD_Init+1,f
  9392  1E26  2E23               	goto	u6007
  9393  1E27  2E28               	nop2
  9394  1E28                     l3303:
  9395                           
  9396                           ;LCD.c: 48:     LCD_Comandos (0x30);
  9397  1E28  3030               	movlw	48
  9398  1E29  160A  158A  21EE  160A  158A  	fcall	_LCD_Comandos
  9399  1E2E                     l3305:
  9400                           
  9401                           ;LCD.c: 49:     _delay((unsigned long)((5)*(8000000/4000.0)));
  9402  1E2E  300D               	movlw	13
  9403  1E2F  00F5               	movwf	??_LCD_Init+1
  9404  1E30  30FB               	movlw	251
  9405  1E31  00F4               	movwf	??_LCD_Init
  9406  1E32                     u6017:
  9407  1E32  0BF4               	decfsz	??_LCD_Init,f
  9408  1E33  2E32               	goto	u6017
  9409  1E34  0BF5               	decfsz	??_LCD_Init+1,f
  9410  1E35  2E32               	goto	u6017
  9411  1E36  2E37               	nop2
  9412                           
  9413                           ;LCD.c: 50:     LCD_Comandos (0x30);
  9414  1E37  3030               	movlw	48
  9415  1E38  160A  158A  21EE  160A  158A  	fcall	_LCD_Comandos
  9416  1E3D                     l3307:
  9417                           
  9418                           ;LCD.c: 51:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  9419  1E3D  3042               	movlw	66
  9420  1E3E  00F4               	movwf	??_LCD_Init
  9421  1E3F                     u6027:
  9422  1E3F  0BF4               	decfsz	??_LCD_Init,f
  9423  1E40  2E3F               	goto	u6027
  9424  1E41  0000               	nop
  9425  1E42                     l3309:
  9426                           
  9427                           ;LCD.c: 52:     LCD_Comandos (0x30);
  9428  1E42  3030               	movlw	48
  9429  1E43  160A  158A  21EE  160A  158A  	fcall	_LCD_Comandos
  9430                           
  9431                           ;LCD.c: 53:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  9432  1E48  3042               	movlw	66
  9433  1E49  00F4               	movwf	??_LCD_Init
  9434  1E4A                     u6037:
  9435  1E4A  0BF4               	decfsz	??_LCD_Init,f
  9436  1E4B  2E4A               	goto	u6037
  9437  1E4C  0000               	nop
  9438  1E4D                     l3311:
  9439                           
  9440                           ;LCD.c: 54:     LCD_Comandos (0x38);
  9441  1E4D  3038               	movlw	56
  9442  1E4E  160A  158A  21EE  160A  158A  	fcall	_LCD_Comandos
  9443  1E53                     l3313:
  9444                           
  9445                           ;LCD.c: 55:     _delay((unsigned long)((60)*(8000000/4000000.0)));
  9446  1E53  3027               	movlw	39
  9447  1E54  00F4               	movwf	??_LCD_Init
  9448  1E55                     u6047:
  9449  1E55  0BF4               	decfsz	??_LCD_Init,f
  9450  1E56  2E55               	goto	u6047
  9451  1E57  2E58               	nop2
  9452                           
  9453                           ;LCD.c: 56:     LCD_Comandos (0x08);
  9454  1E58  3008               	movlw	8
  9455  1E59  160A  158A  21EE  160A  158A  	fcall	_LCD_Comandos
  9456  1E5E                     l3315:
  9457                           
  9458                           ;LCD.c: 57:     _delay((unsigned long)((60)*(8000000/4000000.0)));
  9459  1E5E  3027               	movlw	39
  9460  1E5F  00F4               	movwf	??_LCD_Init
  9461  1E60                     u6057:
  9462  1E60  0BF4               	decfsz	??_LCD_Init,f
  9463  1E61  2E60               	goto	u6057
  9464  1E62  2E63               	nop2
  9465  1E63                     l3317:
  9466                           
  9467                           ;LCD.c: 58:     LCD_Comandos (0x01);
  9468  1E63  3001               	movlw	1
  9469  1E64  160A  158A  21EE  160A  158A  	fcall	_LCD_Comandos
  9470                           
  9471                           ;LCD.c: 59:     _delay((unsigned long)((5)*(8000000/4000.0)));
  9472  1E69  300D               	movlw	13
  9473  1E6A  00F5               	movwf	??_LCD_Init+1
  9474  1E6B  30FB               	movlw	251
  9475  1E6C  00F4               	movwf	??_LCD_Init
  9476  1E6D                     u6067:
  9477  1E6D  0BF4               	decfsz	??_LCD_Init,f
  9478  1E6E  2E6D               	goto	u6067
  9479  1E6F  0BF5               	decfsz	??_LCD_Init+1,f
  9480  1E70  2E6D               	goto	u6067
  9481  1E71  2E72               	nop2
  9482  1E72                     l3319:
  9483                           
  9484                           ;LCD.c: 60:     LCD_Comandos (0x06);
  9485  1E72  3006               	movlw	6
  9486  1E73  160A  158A  21EE  160A  158A  	fcall	_LCD_Comandos
  9487  1E78                     l3321:
  9488                           
  9489                           ;LCD.c: 61:     _delay((unsigned long)((60)*(8000000/4000000.0)));
  9490  1E78  3027               	movlw	39
  9491  1E79  00F4               	movwf	??_LCD_Init
  9492  1E7A                     u6077:
  9493  1E7A  0BF4               	decfsz	??_LCD_Init,f
  9494  1E7B  2E7A               	goto	u6077
  9495  1E7C  2E7D               	nop2
  9496                           
  9497                           ;LCD.c: 62:     LCD_Comandos (0x0C);
  9498  1E7D  300C               	movlw	12
  9499  1E7E  160A  158A  21EE  160A  158A  	fcall	_LCD_Comandos
  9500  1E83                     l3323:
  9501                           
  9502                           ;LCD.c: 63:     _delay((unsigned long)((60)*(8000000/4000000.0)));
  9503  1E83  3027               	movlw	39
  9504  1E84  00F4               	movwf	??_LCD_Init
  9505  1E85                     u6087:
  9506  1E85  0BF4               	decfsz	??_LCD_Init,f
  9507  1E86  2E85               	goto	u6087
  9508  1E87  2E88               	nop2
  9509  1E88                     l53:
  9510  1E88  0008               	return
  9511  1E89                     __end_of_LCD_Init:
  9512                           
  9513                           	psect	text36
  9514  1A10                     __ptext36:	
  9515 ;; *************** function _LCD_Cursor *****************
  9516 ;; Defined at:
  9517 ;;		line 66 in file "LCD.c"
  9518 ;; Parameters:    Size  Location     Type
  9519 ;;  x               1    wreg     unsigned char 
  9520 ;;  y               1    4[COMMON] unsigned char 
  9521 ;; Auto vars:     Size  Location     Type
  9522 ;;  x               1    6[COMMON] unsigned char 
  9523 ;;  a               1    7[COMMON] unsigned char 
  9524 ;; Return value:  Size  Location     Type
  9525 ;;                  1    wreg      void 
  9526 ;; Registers used:
  9527 ;;		wreg, status,2, status,0, pclath, cstack
  9528 ;; Tracked objects:
  9529 ;;		On entry : 0/0
  9530 ;;		On exit  : 0/0
  9531 ;;		Unchanged: 0/0
  9532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9533 ;;      Params:         1       0       0       0       0
  9534 ;;      Locals:         2       0       0       0       0
  9535 ;;      Temps:          1       0       0       0       0
  9536 ;;      Totals:         4       0       0       0       0
  9537 ;;Total ram usage:        4 bytes
  9538 ;; Hardware stack levels used:    1
  9539 ;; Hardware stack levels required when called:    2
  9540 ;; This function calls:
  9541 ;;		_LCD_Comandos
  9542 ;; This function is called by:
  9543 ;;		_main
  9544 ;; This function uses a non-reentrant model
  9545 ;;
  9546                           
  9547                           
  9548                           ;psect for function _LCD_Cursor
  9549  1A10                     _LCD_Cursor:
  9550                           
  9551                           ;incstack = 0
  9552                           ; Regs used in _LCD_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9553                           ;LCD_Cursor@x stored from wreg
  9554  1A10  00F6               	movwf	LCD_Cursor@x
  9555  1A11                     l3325:
  9556                           
  9557                           ;LCD.c: 67:  uint8_t a;;LCD.c: 68:  if(x == 1){
  9558  1A11  0376               	decf	LCD_Cursor@x,w
  9559  1A12  1D03               	btfss	3,2
  9560  1A13  2A15               	goto	u5281
  9561  1A14  2A16               	goto	u5280
  9562  1A15                     u5281:
  9563  1A15  2A22               	goto	l3331
  9564  1A16                     u5280:
  9565  1A16                     l3327:
  9566                           
  9567                           ;LCD.c: 69:    a = 0x80 + y;
  9568  1A16  0874               	movf	LCD_Cursor@y,w
  9569  1A17  3E80               	addlw	128
  9570  1A18  00F5               	movwf	??_LCD_Cursor
  9571  1A19  0875               	movf	??_LCD_Cursor,w
  9572  1A1A  00F7               	movwf	LCD_Cursor@a
  9573  1A1B                     l3329:
  9574                           
  9575                           ;LCD.c: 71:   LCD_Comandos(a);
  9576  1A1B  0877               	movf	LCD_Cursor@a,w
  9577  1A1C  160A  158A  21EE  160A  158A  	fcall	_LCD_Comandos
  9578                           
  9579                           ;LCD.c: 72:     }
  9580  1A21  2A33               	goto	l59
  9581  1A22                     l3331:
  9582  1A22  3002               	movlw	2
  9583  1A23  0676               	xorwf	LCD_Cursor@x,w
  9584  1A24  1D03               	btfss	3,2
  9585  1A25  2A27               	goto	u5291
  9586  1A26  2A28               	goto	u5290
  9587  1A27                     u5291:
  9588  1A27  2A33               	goto	l59
  9589  1A28                     u5290:
  9590  1A28                     l3333:
  9591                           
  9592                           ;LCD.c: 74:    a = 0xC0 + y;
  9593  1A28  0874               	movf	LCD_Cursor@y,w
  9594  1A29  3EC0               	addlw	192
  9595  1A2A  00F5               	movwf	??_LCD_Cursor
  9596  1A2B  0875               	movf	??_LCD_Cursor,w
  9597  1A2C  00F7               	movwf	LCD_Cursor@a
  9598  1A2D                     l3335:
  9599                           
  9600                           ;LCD.c: 76:   LCD_Comandos(a);
  9601  1A2D  0877               	movf	LCD_Cursor@a,w
  9602  1A2E  160A  158A  21EE  160A  158A  	fcall	_LCD_Comandos
  9603  1A33                     l59:
  9604  1A33  0008               	return
  9605  1A34                     __end_of_LCD_Cursor:
  9606                           
  9607                           	psect	text37
  9608  19EE                     __ptext37:	
  9609 ;; *************** function _LCD_Comandos *****************
  9610 ;; Defined at:
  9611 ;;		line 33 in file "LCD.c"
  9612 ;; Parameters:    Size  Location     Type
  9613 ;;  x               1    wreg     unsigned char 
  9614 ;; Auto vars:     Size  Location     Type
  9615 ;;  x               1    3[COMMON] unsigned char 
  9616 ;; Return value:  Size  Location     Type
  9617 ;;                  1    wreg      void 
  9618 ;; Registers used:
  9619 ;;		wreg, status,2, status,0, pclath, cstack
  9620 ;; Tracked objects:
  9621 ;;		On entry : 0/0
  9622 ;;		On exit  : 0/0
  9623 ;;		Unchanged: 0/0
  9624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9625 ;;      Params:         0       0       0       0       0
  9626 ;;      Locals:         1       0       0       0       0
  9627 ;;      Temps:          2       0       0       0       0
  9628 ;;      Totals:         3       0       0       0       0
  9629 ;;Total ram usage:        3 bytes
  9630 ;; Hardware stack levels used:    1
  9631 ;; Hardware stack levels required when called:    1
  9632 ;; This function calls:
  9633 ;;		_Pines
  9634 ;; This function is called by:
  9635 ;;		_LCD_clear
  9636 ;;		_LCD_Init
  9637 ;;		_LCD_Cursor
  9638 ;; This function uses a non-reentrant model
  9639 ;;
  9640                           
  9641                           
  9642                           ;psect for function _LCD_Comandos
  9643  19EE                     _LCD_Comandos:
  9644                           
  9645                           ;incstack = 0
  9646                           ; Regs used in _LCD_Comandos: [wreg+status,2+status,0+pclath+cstack]
  9647                           ;LCD_Comandos@x stored from wreg
  9648  19EE  00F3               	movwf	LCD_Comandos@x
  9649  19EF                     l2915:
  9650                           
  9651                           ;LCD.c: 34:     RE0 = 0;
  9652  19EF  1283               	bcf	3,5	;RP0=0, select bank0
  9653  19F0  1303               	bcf	3,6	;RP1=0, select bank0
  9654  19F1  1009               	bcf	9,0	;volatile
  9655  19F2                     l2917:
  9656                           
  9657                           ;LCD.c: 35:     Pines(x);
  9658  19F2  0873               	movf	LCD_Comandos@x,w
  9659  19F3  160A  158A  238F  160A  158A  	fcall	_Pines
  9660  19F8                     l2919:
  9661                           
  9662                           ;LCD.c: 36:     RE1 = 1;
  9663  19F8  1283               	bcf	3,5	;RP0=0, select bank0
  9664  19F9  1303               	bcf	3,6	;RP1=0, select bank0
  9665  19FA  1489               	bsf	9,1	;volatile
  9666  19FB                     l2921:
  9667                           
  9668                           ;LCD.c: 37:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  9669  19FB  3003               	movlw	3
  9670  19FC  00F1               	movwf	??_LCD_Comandos
  9671  19FD                     u6097:
  9672  19FD  0BF1               	decfsz	??_LCD_Comandos,f
  9673  19FE  29FD               	goto	u6097
  9674  19FF                     l2923:
  9675                           
  9676                           ;LCD.c: 38:     RE1 = 0;
  9677  19FF  1283               	bcf	3,5	;RP0=0, select bank0
  9678  1A00  1303               	bcf	3,6	;RP1=0, select bank0
  9679  1A01  1089               	bcf	9,1	;volatile
  9680  1A02                     l2925:
  9681                           
  9682                           ;LCD.c: 39:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  9683  1A02  3003               	movlw	3
  9684  1A03  00F1               	movwf	??_LCD_Comandos
  9685  1A04                     u6107:
  9686  1A04  0BF1               	decfsz	??_LCD_Comandos,f
  9687  1A05  2A04               	goto	u6107
  9688  1A06                     l2927:
  9689                           
  9690                           ;LCD.c: 40:     _delay((unsigned long)((2)*(8000000/4000.0)));
  9691  1A06  3006               	movlw	6
  9692  1A07  00F2               	movwf	??_LCD_Comandos+1
  9693  1A08  3030               	movlw	48
  9694  1A09  00F1               	movwf	??_LCD_Comandos
  9695  1A0A                     u6117:
  9696  1A0A  0BF1               	decfsz	??_LCD_Comandos,f
  9697  1A0B  2A0A               	goto	u6117
  9698  1A0C  0BF2               	decfsz	??_LCD_Comandos+1,f
  9699  1A0D  2A0A               	goto	u6117
  9700  1A0E  0000               	nop
  9701  1A0F                     l47:
  9702  1A0F  0008               	return
  9703  1A10                     __end_of_LCD_Comandos:
  9704                           
  9705                           	psect	text38
  9706  1B8F                     __ptext38:	
  9707 ;; *************** function _Pines *****************
  9708 ;; Defined at:
  9709 ;;		line 13 in file "LCD.c"
  9710 ;; Parameters:    Size  Location     Type
  9711 ;;  x               1    wreg     unsigned char 
  9712 ;; Auto vars:     Size  Location     Type
  9713 ;;  x               1    0[COMMON] unsigned char 
  9714 ;; Return value:  Size  Location     Type
  9715 ;;                  1    wreg      void 
  9716 ;; Registers used:
  9717 ;;		wreg
  9718 ;; Tracked objects:
  9719 ;;		On entry : 0/0
  9720 ;;		On exit  : 0/0
  9721 ;;		Unchanged: 0/0
  9722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9723 ;;      Params:         0       0       0       0       0
  9724 ;;      Locals:         1       0       0       0       0
  9725 ;;      Temps:          0       0       0       0       0
  9726 ;;      Totals:         1       0       0       0       0
  9727 ;;Total ram usage:        1 bytes
  9728 ;; Hardware stack levels used:    1
  9729 ;; This function calls:
  9730 ;;		Nothing
  9731 ;; This function is called by:
  9732 ;;		_LCD_Caracter
  9733 ;;		_LCD_Comandos
  9734 ;; This function uses a non-reentrant model
  9735 ;;
  9736                           
  9737                           
  9738                           ;psect for function _Pines
  9739  1B8F                     _Pines:
  9740                           
  9741                           ;incstack = 0
  9742                           ; Regs used in _Pines: [wreg]
  9743                           ;Pines@x stored from wreg
  9744  1B8F  00F0               	movwf	Pines@x
  9745  1B90                     l2417:
  9746                           
  9747                           ;LCD.c: 14:  if(x & 1){RD0 = 1;}else{RD0 = 0;}
  9748  1B90  1C70               	btfss	Pines@x,0
  9749  1B91  2B93               	goto	u2981
  9750  1B92  2B94               	goto	u2980
  9751  1B93                     u2981:
  9752  1B93  2B98               	goto	l25
  9753  1B94                     u2980:
  9754  1B94                     l2419:
  9755  1B94  1283               	bcf	3,5	;RP0=0, select bank0
  9756  1B95  1303               	bcf	3,6	;RP1=0, select bank0
  9757  1B96  1408               	bsf	8,0	;volatile
  9758  1B97  2B9B               	goto	l26
  9759  1B98                     l25:
  9760  1B98  1283               	bcf	3,5	;RP0=0, select bank0
  9761  1B99  1303               	bcf	3,6	;RP1=0, select bank0
  9762  1B9A  1008               	bcf	8,0	;volatile
  9763  1B9B                     l26:
  9764                           
  9765                           ;LCD.c: 15:     if(x & 2){RD1 = 1;}else{RD1 = 0;}
  9766  1B9B  1CF0               	btfss	Pines@x,1
  9767  1B9C  2B9E               	goto	u2991
  9768  1B9D  2B9F               	goto	u2990
  9769  1B9E                     u2991:
  9770  1B9E  2BA1               	goto	l27
  9771  1B9F                     u2990:
  9772  1B9F                     l2421:
  9773  1B9F  1488               	bsf	8,1	;volatile
  9774  1BA0  2BA2               	goto	l28
  9775  1BA1                     l27:
  9776  1BA1  1088               	bcf	8,1	;volatile
  9777  1BA2                     l28:
  9778                           
  9779                           ;LCD.c: 16:     if(x & 4){RD2 = 1;}else{RD2 = 0;}
  9780  1BA2  1D70               	btfss	Pines@x,2
  9781  1BA3  2BA5               	goto	u3001
  9782  1BA4  2BA6               	goto	u3000
  9783  1BA5                     u3001:
  9784  1BA5  2BA8               	goto	l29
  9785  1BA6                     u3000:
  9786  1BA6                     l2423:
  9787  1BA6  1508               	bsf	8,2	;volatile
  9788  1BA7  2BA9               	goto	l30
  9789  1BA8                     l29:
  9790  1BA8  1108               	bcf	8,2	;volatile
  9791  1BA9                     l30:
  9792                           
  9793                           ;LCD.c: 17:     if(x & 8){RD3 = 1;}else{RD3 = 0;}
  9794  1BA9  1DF0               	btfss	Pines@x,3
  9795  1BAA  2BAC               	goto	u3011
  9796  1BAB  2BAD               	goto	u3010
  9797  1BAC                     u3011:
  9798  1BAC  2BAF               	goto	l31
  9799  1BAD                     u3010:
  9800  1BAD                     l2425:
  9801  1BAD  1588               	bsf	8,3	;volatile
  9802  1BAE  2BB0               	goto	l32
  9803  1BAF                     l31:
  9804  1BAF  1188               	bcf	8,3	;volatile
  9805  1BB0                     l32:
  9806                           
  9807                           ;LCD.c: 18:     if(x & 16){RD4 = 1;}else{RD4 = 0;}
  9808  1BB0  1E70               	btfss	Pines@x,4
  9809  1BB1  2BB3               	goto	u3021
  9810  1BB2  2BB4               	goto	u3020
  9811  1BB3                     u3021:
  9812  1BB3  2BB6               	goto	l33
  9813  1BB4                     u3020:
  9814  1BB4                     l2427:
  9815  1BB4  1608               	bsf	8,4	;volatile
  9816  1BB5  2BB7               	goto	l34
  9817  1BB6                     l33:
  9818  1BB6  1208               	bcf	8,4	;volatile
  9819  1BB7                     l34:
  9820                           
  9821                           ;LCD.c: 19:     if(x & 32){RD5 = 1;}else{RD5 = 0;}
  9822  1BB7  1EF0               	btfss	Pines@x,5
  9823  1BB8  2BBA               	goto	u3031
  9824  1BB9  2BBB               	goto	u3030
  9825  1BBA                     u3031:
  9826  1BBA  2BBD               	goto	l35
  9827  1BBB                     u3030:
  9828  1BBB                     l2429:
  9829  1BBB  1688               	bsf	8,5	;volatile
  9830  1BBC  2BBE               	goto	l36
  9831  1BBD                     l35:
  9832  1BBD  1288               	bcf	8,5	;volatile
  9833  1BBE                     l36:
  9834                           
  9835                           ;LCD.c: 20:     if(x & 64){RD6 = 1;}else{RD6 = 0;}
  9836  1BBE  1F70               	btfss	Pines@x,6
  9837  1BBF  2BC1               	goto	u3041
  9838  1BC0  2BC2               	goto	u3040
  9839  1BC1                     u3041:
  9840  1BC1  2BC4               	goto	l37
  9841  1BC2                     u3040:
  9842  1BC2                     l2431:
  9843  1BC2  1708               	bsf	8,6	;volatile
  9844  1BC3  2BC5               	goto	l38
  9845  1BC4                     l37:
  9846  1BC4  1308               	bcf	8,6	;volatile
  9847  1BC5                     l38:
  9848                           
  9849                           ;LCD.c: 21:     if(x & 128){RD7 = 1;}else{RD7 = 0;}
  9850  1BC5  1FF0               	btfss	Pines@x,7
  9851  1BC6  2BC8               	goto	u3051
  9852  1BC7  2BC9               	goto	u3050
  9853  1BC8                     u3051:
  9854  1BC8  2BCB               	goto	l39
  9855  1BC9                     u3050:
  9856  1BC9                     l2433:
  9857  1BC9  1788               	bsf	8,7	;volatile
  9858  1BCA  2BCC               	goto	l41
  9859  1BCB                     l39:
  9860  1BCB  1388               	bcf	8,7	;volatile
  9861  1BCC                     l41:
  9862  1BCC  0008               	return
  9863  1BCD                     __end_of_Pines:
  9864  007E                     btemp	set	126	;btemp
  9865  007E                     wtemp0	set	126
  9866                           
  9867                           	psect	config
  9868                           
  9869                           ;Config register CONFIG1 @ 0x2007
  9870                           ;	Oscillator Selection bits
  9871                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  9872                           ;	Watchdog Timer Enable bit
  9873                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  9874                           ;	Power-up Timer Enable bit
  9875                           ;	PWRTE = OFF, PWRT disabled
  9876                           ;	RE3/MCLR pin function select bit
  9877                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  9878                           ;	Code Protection bit
  9879                           ;	CP = OFF, Program memory code protection is disabled
  9880                           ;	Data Code Protection bit
  9881                           ;	CPD = OFF, Data memory code protection is disabled
  9882                           ;	Brown Out Reset Selection bits
  9883                           ;	BOREN = OFF, BOR disabled
  9884                           ;	Internal External Switchover bit
  9885                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  9886                           ;	Fail-Safe Clock Monitor Enabled bit
  9887                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  9888                           ;	Low Voltage Programming Enable bit
  9889                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  9890                           ;	In-Circuit Debugger Mode bit
  9891                           ;	DEBUG = 0x1, unprogrammed default
  9892  2007                     	org	8199
  9893  2007  20D5               	dw	8405
  9894                           
  9895                           ;Config register CONFIG2 @ 0x2008
  9896                           ;	Brown-out Reset Selection bit
  9897                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  9898                           ;	Flash Program Memory Self Write Enable bits
  9899                           ;	WRT = OFF, Write protection off
  9900  2008                     	org	8200
  9901  2008  3FFF               	dw	16383
  9902                           
  9903                           	psect	text1_split_1
  9904  01EA                     u5470:
  9905  01EA                     l3521:
  9906  01EA  1683               	bsf	3,5	;RP0=1, select bank1
  9907  01EB  1303               	bcf	3,6	;RP1=0, select bank1
  9908  01EC  0844               	movf	(sprintf@fval+3)^(0+128),w
  9909  01ED  00F3               	movwf	___fleq@ff1+3
  9910  01EE  0843               	movf	(sprintf@fval+2)^(0+128),w
  9911  01EF  00F2               	movwf	___fleq@ff1+2
  9912  01F0  0842               	movf	(sprintf@fval+1)^(0+128),w
  9913  01F1  00F1               	movwf	___fleq@ff1+1
  9914  01F2  0841               	movf	sprintf@fval^(0+128),w
  9915  01F3  00F0               	movwf	___fleq@ff1
  9916  01F4  3000               	movlw	0
  9917  01F5  00F7               	movwf	___fleq@ff2+3
  9918  01F6  3000               	movlw	0
  9919  01F7  00F6               	movwf	___fleq@ff2+2
  9920  01F8  3000               	movlw	0
  9921  01F9  00F5               	movwf	___fleq@ff2+1
  9922  01FA  3000               	movlw	0
  9923  01FB  00F4               	movwf	___fleq@ff2
  9924  01FC  160A  158A  2453  120A  118A  	fcall	___fleq
  9925  0201  1803               	btfsc	3,0
  9926  0202  2A04               	goto	u5481
  9927  0203  2A05               	goto	u5480
  9928  0204                     u5481:
  9929  0204  2AAD               	goto	l3541
  9930  0205                     u5480:
  9931  0205                     l3523:
  9932  0205  1683               	bsf	3,5	;RP0=1, select bank1
  9933  0206  1303               	bcf	3,6	;RP1=0, select bank1
  9934  0207  0844               	movf	(sprintf@fval+3)^(0+128),w
  9935  0208  1283               	bcf	3,5	;RP0=0, select bank0
  9936  0209  1303               	bcf	3,6	;RP1=0, select bank0
  9937  020A  00D4               	movwf	___fltol@f1+3
  9938  020B  1683               	bsf	3,5	;RP0=1, select bank1
  9939  020C  1303               	bcf	3,6	;RP1=0, select bank1
  9940  020D  0843               	movf	(sprintf@fval+2)^(0+128),w
  9941  020E  1283               	bcf	3,5	;RP0=0, select bank0
  9942  020F  1303               	bcf	3,6	;RP1=0, select bank0
  9943  0210  00D3               	movwf	___fltol@f1+2
  9944  0211  1683               	bsf	3,5	;RP0=1, select bank1
  9945  0212  1303               	bcf	3,6	;RP1=0, select bank1
  9946  0213  0842               	movf	(sprintf@fval+1)^(0+128),w
  9947  0214  1283               	bcf	3,5	;RP0=0, select bank0
  9948  0215  1303               	bcf	3,6	;RP1=0, select bank0
  9949  0216  00D2               	movwf	___fltol@f1+1
  9950  0217  1683               	bsf	3,5	;RP0=1, select bank1
  9951  0218  1303               	bcf	3,6	;RP1=0, select bank1
  9952  0219  0841               	movf	sprintf@fval^(0+128),w
  9953  021A  1283               	bcf	3,5	;RP0=0, select bank0
  9954  021B  1303               	bcf	3,6	;RP1=0, select bank0
  9955  021C  00D1               	movwf	___fltol@f1
  9956  021D  120A  158A  2006  120A  118A  	fcall	___fltol
  9957  0222  1283               	bcf	3,5	;RP0=0, select bank0
  9958  0223  1303               	bcf	3,6	;RP1=0, select bank0
  9959  0224  0854               	movf	?___fltol+3,w
  9960  0225  0453               	iorwf	?___fltol+2,w
  9961  0226  0452               	iorwf	?___fltol+1,w
  9962  0227  0451               	iorwf	?___fltol,w
  9963  0228  1D03               	skipz
  9964  0229  2A2B               	goto	u5491
  9965  022A  2A2C               	goto	u5490
  9966  022B                     u5491:
  9967  022B  2AAD               	goto	l3541
  9968  022C                     u5490:
  9969  022C                     l3525:
  9970  022C  1683               	bsf	3,5	;RP0=1, select bank1
  9971  022D  1303               	bcf	3,6	;RP1=0, select bank1
  9972  022E  0840               	movf	(sprintf@eexp+1)^(0+128),w
  9973  022F  3A80               	xorlw	128
  9974  0230  00FF               	movwf	btemp+1
  9975  0231  3080               	movlw	128
  9976  0232  027F               	subwf	btemp+1,w
  9977  0233  1D03               	skipz
  9978  0234  2A37               	goto	u5505
  9979  0235  3002               	movlw	2
  9980  0236  023F               	subwf	sprintf@eexp^(0+128),w
  9981  0237                     u5505:
  9982  0237  1C03               	skipc
  9983  0238  2A3A               	goto	u5501
  9984  0239  2A3B               	goto	u5500
  9985  023A                     u5501:
  9986  023A  2AAD               	goto	l3541
  9987  023B                     u5500:
  9988  023B                     l3527:
  9989                           
  9990                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  9991  023B  1683               	bsf	3,5	;RP0=1, select bank1
  9992  023C  1303               	bcf	3,6	;RP1=0, select bank1
  9993  023D  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  9994  023E  00F3               	movwf	___flge@ff1+3
  9995  023F  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  9996  0240  00F2               	movwf	___flge@ff1+2
  9997  0241  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  9998  0242  00F1               	movwf	___flge@ff1+1
  9999  0243  0837               	movf	sprintf@tmpval^(0+128),w
 10000  0244  00F0               	movwf	___flge@ff1
 10001  0245  3040               	movlw	64
 10002  0246  00F7               	movwf	___flge@ff2+3
 10003  0247  3089               	movlw	137
 10004  0248  00F6               	movwf	___flge@ff2+2
 10005  0249  3070               	movlw	112
 10006  024A  00F5               	movwf	___flge@ff2+1
 10007  024B  305F               	movlw	95
 10008  024C  00F4               	movwf	___flge@ff2
 10009  024D  160A  118A  2009  120A  118A  	fcall	___flge
 10010  0252  1803               	btfsc	3,0
 10011  0253  2A55               	goto	u5511
 10012  0254  2A56               	goto	u5510
 10013  0255                     u5511:
 10014  0255  2A5F               	goto	l3531
 10015  0256                     u5510:
 10016  0256                     l3529:
 10017                           
 10018                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
 10019  0256  30F7               	movlw	247
 10020  0257  1683               	bsf	3,5	;RP0=1, select bank1
 10021  0258  1303               	bcf	3,6	;RP1=0, select bank1
 10022  0259  07BF               	addwf	sprintf@eexp^(0+128),f
 10023  025A  1803               	skipnc
 10024  025B  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
 10025  025C  30FF               	movlw	255
 10026  025D  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
 10027                           
 10028                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
 10029  025E  2A67               	goto	l3533
 10030  025F                     l3531:
 10031                           
 10032                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
 10033  025F  30F8               	movlw	248
 10034  0260  1683               	bsf	3,5	;RP0=1, select bank1
 10035  0261  1303               	bcf	3,6	;RP1=0, select bank1
 10036  0262  07BF               	addwf	sprintf@eexp^(0+128),f
 10037  0263  1803               	skipnc
 10038  0264  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
 10039  0265  30FF               	movlw	255
 10040  0266  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
 10041  0267                     l3533:
 10042                           
 10043                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
 10044  0267  083F               	movf	sprintf@eexp^(0+128),w
 10045  0268  120A  158A  2140  120A  118A  	fcall	_scale
 10046  026D  1283               	bcf	3,5	;RP0=0, select bank0
 10047  026E  1303               	bcf	3,6	;RP1=0, select bank0
 10048  026F  0841               	movf	?_scale+3,w
 10049  0270  1683               	bsf	3,5	;RP0=1, select bank1
 10050  0271  1303               	bcf	3,6	;RP1=0, select bank1
 10051  0272  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
 10052  0273  1283               	bcf	3,5	;RP0=0, select bank0
 10053  0274  1303               	bcf	3,6	;RP1=0, select bank0
 10054  0275  0840               	movf	?_scale+2,w
 10055  0276  1683               	bsf	3,5	;RP0=1, select bank1
 10056  0277  1303               	bcf	3,6	;RP1=0, select bank1
 10057  0278  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
 10058  0279  1283               	bcf	3,5	;RP0=0, select bank0
 10059  027A  1303               	bcf	3,6	;RP1=0, select bank0
 10060  027B  083F               	movf	?_scale+1,w
 10061  027C  1683               	bsf	3,5	;RP0=1, select bank1
 10062  027D  1303               	bcf	3,6	;RP1=0, select bank1
 10063  027E  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
 10064  027F  1283               	bcf	3,5	;RP0=0, select bank0
 10065  0280  1303               	bcf	3,6	;RP1=0, select bank0
 10066  0281  083E               	movf	?_scale,w
 10067  0282  1683               	bsf	3,5	;RP0=1, select bank1
 10068  0283  1303               	bcf	3,6	;RP1=0, select bank1
 10069  0284  00B7               	movwf	sprintf@tmpval^(0+128)
 10070  0285                     l3535:
 10071  0285  0844               	movf	(sprintf@fval+3)^(0+128),w
 10072  0286  00F3               	movwf	__div_to_l_@f1+3
 10073  0287  0843               	movf	(sprintf@fval+2)^(0+128),w
 10074  0288  00F2               	movwf	__div_to_l_@f1+2
 10075  0289  0842               	movf	(sprintf@fval+1)^(0+128),w
 10076  028A  00F1               	movwf	__div_to_l_@f1+1
 10077  028B  0841               	movf	sprintf@fval^(0+128),w
 10078  028C  00F0               	movwf	__div_to_l_@f1
 10079  028D  083A               	movf	(sprintf@tmpval+3)^(0+128),w
 10080  028E  00F7               	movwf	__div_to_l_@f2+3
 10081  028F  0839               	movf	(sprintf@tmpval+2)^(0+128),w
 10082  0290  00F6               	movwf	__div_to_l_@f2+2
 10083  0291  0838               	movf	(sprintf@tmpval+1)^(0+128),w
 10084  0292  00F5               	movwf	__div_to_l_@f2+1
 10085  0293  0837               	movf	sprintf@tmpval^(0+128),w
 10086  0294  00F4               	movwf	__div_to_l_@f2
 10087  0295  120A  158A  2082  120A  118A  	fcall	__div_to_l_
 10088  029A  0873               	movf	?__div_to_l_+3,w
 10089  029B  1683               	bsf	3,5	;RP0=1, select bank1
 10090  029C  1303               	bcf	3,6	;RP1=0, select bank1
 10091  029D  00BE               	movwf	(sprintf@val+3)^(0+128)
 10092  029E  0872               	movf	?__div_to_l_+2,w
 10093  029F  00BD               	movwf	(sprintf@val+2)^(0+128)
 10094  02A0  0871               	movf	?__div_to_l_+1,w
 10095  02A1  00BC               	movwf	(sprintf@val+1)^(0+128)
 10096  02A2  0870               	movf	?__div_to_l_,w
 10097  02A3  00BB               	movwf	sprintf@val^(0+128)
 10098  02A4                     l3539:
 10099                           
 10100                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
 10101  02A4  3000               	movlw	0
 10102  02A5  00C4               	movwf	(sprintf@fval+3)^(0+128)
 10103  02A6  3000               	movlw	0
 10104  02A7  00C3               	movwf	(sprintf@fval+2)^(0+128)
 10105  02A8  3000               	movlw	0
 10106  02A9  00C2               	movwf	(sprintf@fval+1)^(0+128)
 10107  02AA  3000               	movlw	0
 10108  02AB  00C1               	movwf	sprintf@fval^(0+128)
 10109                           
 10110                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
 10111  02AC  2B31               	goto	l3547
 10112  02AD                     l3541:
 10113                           
 10114                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
 10115  02AD  1683               	bsf	3,5	;RP0=1, select bank1
 10116  02AE  1303               	bcf	3,6	;RP1=0, select bank1
 10117  02AF  0844               	movf	(sprintf@fval+3)^(0+128),w
 10118  02B0  1283               	bcf	3,5	;RP0=0, select bank0
 10119  02B1  1303               	bcf	3,6	;RP1=0, select bank0
 10120  02B2  00D4               	movwf	___fltol@f1+3
 10121  02B3  1683               	bsf	3,5	;RP0=1, select bank1
 10122  02B4  1303               	bcf	3,6	;RP1=0, select bank1
 10123  02B5  0843               	movf	(sprintf@fval+2)^(0+128),w
 10124  02B6  1283               	bcf	3,5	;RP0=0, select bank0
 10125  02B7  1303               	bcf	3,6	;RP1=0, select bank0
 10126  02B8  00D3               	movwf	___fltol@f1+2
 10127  02B9  1683               	bsf	3,5	;RP0=1, select bank1
 10128  02BA  1303               	bcf	3,6	;RP1=0, select bank1
 10129  02BB  0842               	movf	(sprintf@fval+1)^(0+128),w
 10130  02BC  1283               	bcf	3,5	;RP0=0, select bank0
 10131  02BD  1303               	bcf	3,6	;RP1=0, select bank0
 10132  02BE  00D2               	movwf	___fltol@f1+1
 10133  02BF  1683               	bsf	3,5	;RP0=1, select bank1
 10134  02C0  1303               	bcf	3,6	;RP1=0, select bank1
 10135  02C1  0841               	movf	sprintf@fval^(0+128),w
 10136  02C2  1283               	bcf	3,5	;RP0=0, select bank0
 10137  02C3  1303               	bcf	3,6	;RP1=0, select bank0
 10138  02C4  00D1               	movwf	___fltol@f1
 10139  02C5  120A  158A  2006  120A  118A  	fcall	___fltol
 10140  02CA  1283               	bcf	3,5	;RP0=0, select bank0
 10141  02CB  1303               	bcf	3,6	;RP1=0, select bank0
 10142  02CC  0854               	movf	?___fltol+3,w
 10143  02CD  1683               	bsf	3,5	;RP0=1, select bank1
 10144  02CE  1303               	bcf	3,6	;RP1=0, select bank1
 10145  02CF  00BE               	movwf	(sprintf@val+3)^(0+128)
 10146  02D0  1283               	bcf	3,5	;RP0=0, select bank0
 10147  02D1  1303               	bcf	3,6	;RP1=0, select bank0
 10148  02D2  0853               	movf	?___fltol+2,w
 10149  02D3  1683               	bsf	3,5	;RP0=1, select bank1
 10150  02D4  1303               	bcf	3,6	;RP1=0, select bank1
 10151  02D5  00BD               	movwf	(sprintf@val+2)^(0+128)
 10152  02D6  1283               	bcf	3,5	;RP0=0, select bank0
 10153  02D7  1303               	bcf	3,6	;RP1=0, select bank0
 10154  02D8  0852               	movf	?___fltol+1,w
 10155  02D9  1683               	bsf	3,5	;RP0=1, select bank1
 10156  02DA  1303               	bcf	3,6	;RP1=0, select bank1
 10157  02DB  00BC               	movwf	(sprintf@val+1)^(0+128)
 10158  02DC  1283               	bcf	3,5	;RP0=0, select bank0
 10159  02DD  1303               	bcf	3,6	;RP1=0, select bank0
 10160  02DE  0851               	movf	?___fltol,w
 10161  02DF  1683               	bsf	3,5	;RP0=1, select bank1
 10162  02E0  1303               	bcf	3,6	;RP1=0, select bank1
 10163  02E1  00BB               	movwf	sprintf@val^(0+128)
 10164  02E2                     l3543:
 10165                           
 10166                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
 10167  02E2  083E               	movf	(sprintf@val+3)^(0+128),w
 10168  02E3  00F3               	movwf	___xxtofl@val+3
 10169  02E4  083D               	movf	(sprintf@val+2)^(0+128),w
 10170  02E5  00F2               	movwf	___xxtofl@val+2
 10171  02E6  083C               	movf	(sprintf@val+1)^(0+128),w
 10172  02E7  00F1               	movwf	___xxtofl@val+1
 10173  02E8  083B               	movf	sprintf@val^(0+128),w
 10174  02E9  00F0               	movwf	___xxtofl@val
 10175  02EA  3000               	movlw	0
 10176  02EB  160A  158A  2689  120A  118A  	fcall	___xxtofl
 10177  02F0  0873               	movf	?___xxtofl+3,w
 10178  02F1  1283               	bcf	3,5	;RP0=0, select bank0
 10179  02F2  1303               	bcf	3,6	;RP1=0, select bank0
 10180  02F3  00E9               	movwf	___flsub@a+3
 10181  02F4  0872               	movf	?___xxtofl+2,w
 10182  02F5  00E8               	movwf	___flsub@a+2
 10183  02F6  0871               	movf	?___xxtofl+1,w
 10184  02F7  00E7               	movwf	___flsub@a+1
 10185  02F8  0870               	movf	?___xxtofl,w
 10186  02F9  00E6               	movwf	___flsub@a
 10187  02FA  1683               	bsf	3,5	;RP0=1, select bank1
 10188  02FB  1303               	bcf	3,6	;RP1=0, select bank1
 10189  02FC  0844               	movf	(sprintf@fval+3)^(0+128),w
 10190  02FD  1283               	bcf	3,5	;RP0=0, select bank0
 10191  02FE  1303               	bcf	3,6	;RP1=0, select bank0
 10192  02FF  00ED               	movwf	___flsub@b+3
 10193  0300  1683               	bsf	3,5	;RP0=1, select bank1
 10194  0301  1303               	bcf	3,6	;RP1=0, select bank1
 10195  0302  0843               	movf	(sprintf@fval+2)^(0+128),w
 10196  0303  1283               	bcf	3,5	;RP0=0, select bank0
 10197  0304  1303               	bcf	3,6	;RP1=0, select bank0
 10198  0305  00EC               	movwf	___flsub@b+2
 10199  0306  1683               	bsf	3,5	;RP0=1, select bank1
 10200  0307  1303               	bcf	3,6	;RP1=0, select bank1
 10201  0308  0842               	movf	(sprintf@fval+1)^(0+128),w
 10202  0309  1283               	bcf	3,5	;RP0=0, select bank0
 10203  030A  1303               	bcf	3,6	;RP1=0, select bank0
 10204  030B  00EB               	movwf	___flsub@b+1
 10205  030C  1683               	bsf	3,5	;RP0=1, select bank1
 10206  030D  1303               	bcf	3,6	;RP1=0, select bank1
 10207  030E  0841               	movf	sprintf@fval^(0+128),w
 10208  030F  1283               	bcf	3,5	;RP0=0, select bank0
 10209  0310  1303               	bcf	3,6	;RP1=0, select bank0
 10210  0311  00EA               	movwf	___flsub@b
 10211  0312  160A  158A  2234  120A  118A  	fcall	___flsub
 10212  0317  1283               	bcf	3,5	;RP0=0, select bank0
 10213  0318  1303               	bcf	3,6	;RP1=0, select bank0
 10214  0319  0869               	movf	?___flsub+3,w
 10215  031A  1683               	bsf	3,5	;RP0=1, select bank1
 10216  031B  1303               	bcf	3,6	;RP1=0, select bank1
 10217  031C  00C4               	movwf	(sprintf@fval+3)^(0+128)
 10218  031D  1283               	bcf	3,5	;RP0=0, select bank0
 10219  031E  1303               	bcf	3,6	;RP1=0, select bank0
 10220  031F  0868               	movf	?___flsub+2,w
 10221  0320  1683               	bsf	3,5	;RP0=1, select bank1
 10222  0321  1303               	bcf	3,6	;RP1=0, select bank1
 10223  0322  00C3               	movwf	(sprintf@fval+2)^(0+128)
 10224  0323  1283               	bcf	3,5	;RP0=0, select bank0
 10225  0324  1303               	bcf	3,6	;RP1=0, select bank0
 10226  0325  0867               	movf	?___flsub+1,w
 10227  0326  1683               	bsf	3,5	;RP0=1, select bank1
 10228  0327  1303               	bcf	3,6	;RP1=0, select bank1
 10229  0328  00C2               	movwf	(sprintf@fval+1)^(0+128)
 10230  0329  1283               	bcf	3,5	;RP0=0, select bank0
 10231  032A  1303               	bcf	3,6	;RP1=0, select bank0
 10232  032B  0866               	movf	?___flsub,w
 10233  032C  1683               	bsf	3,5	;RP0=1, select bank1
 10234  032D  1303               	bcf	3,6	;RP1=0, select bank1
 10235  032E  00C1               	movwf	sprintf@fval^(0+128)
 10236  032F                     l3545:
 10237                           
 10238                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
 10239  032F  01BF               	clrf	sprintf@eexp^(0+128)
 10240  0330  01C0               	clrf	(sprintf@eexp+1)^(0+128)
 10241  0331                     l3547:
 10242                           
 10243                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 10244  0331  01C8               	clrf	sprintf@c^(0+128)
 10245  0332  0AC8               	incf	sprintf@c^(0+128),f
 10246  0333                     l3553:
 10247                           
 10248                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
 10249  0333  0848               	movf	sprintf@c^(0+128),w
 10250  0334  00A9               	movwf	??_sprintf^(0+128)
 10251  0335  3001               	movlw	1
 10252  0336                     u5525:
 10253  0336  1003               	clrc
 10254  0337  0DA9               	rlf	??_sprintf^(0+128),f
 10255  0338  3EFF               	addlw	-1
 10256  0339  1D03               	skipz
 10257  033A  2B36               	goto	u5525
 10258  033B  1003               	clrc
 10259  033C  0D29               	rlf	??_sprintf^(0+128),w
 10260  033D  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10261  033E  0084               	movwf	4
 10262  033F  120A  118A  200D  120A  118A  	fcall	stringdir
 10263  0344  00AA               	movwf	(??_sprintf+1)^(0+128)
 10264  0345  120A  118A  200D  120A  118A  	fcall	stringdir
 10265  034A  00AB               	movwf	((??_sprintf+1)^(0+128)+1)
 10266  034B  120A  118A  200D  120A  118A  	fcall	stringdir
 10267  0350  00AC               	movwf	((??_sprintf+1)^(0+128)+2)
 10268  0351  120A  118A  200D  120A  118A  	fcall	stringdir
 10269  0356  00AD               	movwf	((??_sprintf+1)^(0+128)+3)
 10270  0357  082D               	movf	(??_sprintf+4)^(0+128),w
 10271  0358  023E               	subwf	(sprintf@val+3)^(0+128),w
 10272  0359  1D03               	skipz
 10273  035A  2B65               	goto	u5535
 10274  035B  082C               	movf	(??_sprintf+3)^(0+128),w
 10275  035C  023D               	subwf	(sprintf@val+2)^(0+128),w
 10276  035D  1D03               	skipz
 10277  035E  2B65               	goto	u5535
 10278  035F  082B               	movf	(??_sprintf+2)^(0+128),w
 10279  0360  023C               	subwf	(sprintf@val+1)^(0+128),w
 10280  0361  1D03               	skipz
 10281  0362  2B65               	goto	u5535
 10282  0363  082A               	movf	(??_sprintf+1)^(0+128),w
 10283  0364  023B               	subwf	sprintf@val^(0+128),w
 10284  0365                     u5535:
 10285  0365  1803               	skipnc
 10286  0366  2B68               	goto	u5531
 10287  0367  2B69               	goto	u5530
 10288  0368                     u5531:
 10289  0368  2B6A               	goto	l3557
 10290  0369                     u5530:
 10291  0369  2B74               	goto	l3559
 10292  036A                     l3557:
 10293  036A  3001               	movlw	1
 10294  036B  00A9               	movwf	??_sprintf^(0+128)
 10295  036C  0829               	movf	??_sprintf^(0+128),w
 10296  036D  07C8               	addwf	sprintf@c^(0+128),f
 10297  036E  300A               	movlw	10
 10298  036F  0648               	xorwf	sprintf@c^(0+128),w
 10299  0370  1D03               	btfss	3,2
 10300  0371  2B73               	goto	u5541
 10301  0372  2B74               	goto	u5540
 10302  0373                     u5541:
 10303  0373  2B33               	goto	l3553
 10304  0374                     u5540:
 10305  0374                     l3559:
 10306                           
 10307                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
 10308  0374  0848               	movf	sprintf@c^(0+128),w
 10309  0375  0746               	addwf	sprintf@prec^(0+128),w
 10310  0376  00A9               	movwf	??_sprintf^(0+128)
 10311  0377  0847               	movf	(sprintf@prec+1)^(0+128),w
 10312  0378  1803               	skipnc
 10313  0379  0A47               	incf	(sprintf@prec+1)^(0+128),w
 10314  037A  00AA               	movwf	(??_sprintf^(0+128)+1)
 10315  037B  083F               	movf	sprintf@eexp^(0+128),w
 10316  037C  0729               	addwf	??_sprintf^(0+128),w
 10317  037D  00AB               	movwf	(??_sprintf+2)^(0+128)
 10318  037E  0840               	movf	(sprintf@eexp+1)^(0+128),w
 10319  037F  1803               	skipnc
 10320  0380  0A40               	incf	(sprintf@eexp+1)^(0+128),w
 10321  0381  072A               	addwf	(??_sprintf+1)^(0+128),w
 10322  0382  00AC               	movwf	(??_sprintf+3)^(0+128)
 10323  0383  082B               	movf	(??_sprintf+2)^(0+128),w
 10324  0384  02B5               	subwf	sprintf@width^(0+128),f
 10325  0385  082C               	movf	(??_sprintf+3)^(0+128),w
 10326  0386  1C03               	skipc
 10327  0387  03B6               	decf	(sprintf@width+1)^(0+128),f
 10328  0388  02B6               	subwf	(sprintf@width+1)^(0+128),f
 10329                           
 10330                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
 10331  0389  0846               	movf	sprintf@prec^(0+128),w
 10332  038A  0447               	iorwf	(sprintf@prec+1)^(0+128),w
 10333  038B  1903               	btfsc	3,2
 10334  038C  2B8E               	goto	u5551
 10335  038D  2B8F               	goto	u5550
 10336  038E                     u5551:
 10337  038E  2B95               	goto	l3563
 10338  038F                     u5550:
 10339  038F                     l3561:
 10340                           
 10341                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
 10342  038F  30FF               	movlw	255
 10343  0390  07B5               	addwf	sprintf@width^(0+128),f
 10344  0391  1803               	skipnc
 10345  0392  0AB6               	incf	(sprintf@width+1)^(0+128),f
 10346  0393  30FF               	movlw	255
 10347  0394  07B6               	addwf	(sprintf@width+1)^(0+128),f
 10348  0395                     l3563:
 10349                           
 10350                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
 10351  0395  3003               	movlw	3
 10352  0396  0533               	andwf	sprintf@flag^(0+128),w
 10353  0397  00A9               	movwf	??_sprintf^(0+128)
 10354  0398  3000               	movlw	0
 10355  0399  0534               	andwf	(sprintf@flag+1)^(0+128),w
 10356  039A  00AA               	movwf	(??_sprintf+1)^(0+128)
 10357  039B  0829               	movf	??_sprintf^(0+128),w
 10358  039C  042A               	iorwf	(??_sprintf^(0+128)+1),w
 10359  039D  1903               	btfsc	3,2
 10360  039E  2BA0               	goto	u5561
 10361  039F  2BA1               	goto	u5560
 10362  03A0                     u5561:
 10363  03A0  2BB6               	goto	l3573
 10364  03A1                     u5560:
 10365  03A1                     l3565:
 10366                           
 10367                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
 10368  03A1  30FF               	movlw	255
 10369  03A2  07B5               	addwf	sprintf@width^(0+128),f
 10370  03A3  1803               	skipnc
 10371  03A4  0AB6               	incf	(sprintf@width+1)^(0+128),f
 10372  03A5  30FF               	movlw	255
 10373  03A6  07B6               	addwf	(sprintf@width+1)^(0+128),f
 10374  03A7  2BB6               	goto	l3573
 10375  03A8                     l3567:
 10376                           
 10377                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
 10378  03A8  3020               	movlw	32
 10379  03A9  1683               	bsf	3,5	;RP0=1, select bank1
 10380  03AA  1303               	bcf	3,6	;RP1=0, select bank1
 10381  03AB  00A9               	movwf	??_sprintf^(0+128)
 10382  03AC  0845               	movf	sprintf@sp^(0+128),w
 10383  03AD  0084               	movwf	4
 10384  03AE  0829               	movf	??_sprintf^(0+128),w
 10385  03AF  1383               	bcf	3,7	;select IRP bank0
 10386  03B0  0080               	movwf	0
 10387  03B1                     l3569:
 10388  03B1  3001               	movlw	1
 10389  03B2  00A9               	movwf	??_sprintf^(0+128)
 10390  03B3  0829               	movf	??_sprintf^(0+128),w
 10391  03B4  07C5               	addwf	sprintf@sp^(0+128),f
 10392  03B5  2BA1               	goto	l3565
 10393  03B6                     l3573:
 10394                           
 10395                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
 10396  03B6  0836               	movf	(sprintf@width+1)^(0+128),w
 10397  03B7  3A80               	xorlw	128
 10398  03B8  00FF               	movwf	btemp+1
 10399  03B9  3080               	movlw	128
 10400  03BA  027F               	subwf	btemp+1,w
 10401  03BB  1D03               	skipz
 10402  03BC  2BBF               	goto	u5575
 10403  03BD  3001               	movlw	1
 10404  03BE  0235               	subwf	sprintf@width^(0+128),w
 10405  03BF                     u5575:
 10406  03BF  1803               	skipnc
 10407  03C0  2BC2               	goto	u5571
 10408  03C1  2BC3               	goto	u5570
 10409  03C2                     u5571:
 10410  03C2  2BA8               	goto	l3567
 10411  03C3                     u5570:
 10412  03C3                     l3575:
 10413                           
 10414                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
 10415  03C3  3003               	movlw	3
 10416  03C4  1683               	bsf	3,5	;RP0=1, select bank1
 10417  03C5  1303               	bcf	3,6	;RP1=0, select bank1
 10418  03C6  0533               	andwf	sprintf@flag^(0+128),w
 10419  03C7  00A9               	movwf	??_sprintf^(0+128)
 10420  03C8  3000               	movlw	0
 10421  03C9  0534               	andwf	(sprintf@flag+1)^(0+128),w
 10422  03CA  00AA               	movwf	(??_sprintf+1)^(0+128)
 10423  03CB  0829               	movf	??_sprintf^(0+128),w
 10424  03CC  042A               	iorwf	(??_sprintf^(0+128)+1),w
 10425  03CD  1903               	btfsc	3,2
 10426  03CE  2BD0               	goto	u5581
 10427  03CF  2BD1               	goto	u5580
 10428  03D0                     u5581:
 10429  03D0  2C63               	goto	l375
 10430  03D1                     u5580:
 10431  03D1                     l3577:
 10432                           
 10433                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
 10434  03D1  302D               	movlw	45
 10435  03D2  00A9               	movwf	??_sprintf^(0+128)
 10436  03D3  0845               	movf	sprintf@sp^(0+128),w
 10437  03D4  0084               	movwf	4
 10438  03D5  0829               	movf	??_sprintf^(0+128),w
 10439  03D6  1383               	bcf	3,7	;select IRP bank0
 10440  03D7  0080               	movwf	0
 10441  03D8                     l3579:
 10442  03D8  3001               	movlw	1
 10443  03D9  00A9               	movwf	??_sprintf^(0+128)
 10444  03DA  0829               	movf	??_sprintf^(0+128),w
 10445  03DB  07C5               	addwf	sprintf@sp^(0+128),f
 10446  03DC  2C63               	goto	l375
 10447  03DD                     l3581:
 10448                           
 10449                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
 10450  03DD  0848               	movf	sprintf@c^(0+128),w
 10451  03DE  00A9               	movwf	??_sprintf^(0+128)
 10452  03DF  3001               	movlw	1
 10453  03E0                     u5595:
 10454  03E0  1003               	clrc
 10455  03E1  0DA9               	rlf	??_sprintf^(0+128),f
 10456  03E2  3EFF               	addlw	-1
 10457  03E3  1D03               	skipz
 10458  03E4  2BE0               	goto	u5595
 10459  03E5  1003               	clrc
 10460  03E6  0D29               	rlf	??_sprintf^(0+128),w
 10461  03E7  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10462  03E8  0084               	movwf	4
 10463  03E9  120A  118A  200D  120A  118A  	fcall	stringdir
 10464  03EE  00F0               	movwf	___lldiv@divisor
 10465  03EF  120A  118A  200D  120A  118A  	fcall	stringdir
 10466  03F4  00F1               	movwf	___lldiv@divisor+1
 10467  03F5  120A  118A  200D  120A  118A  	fcall	stringdir
 10468  03FA  00F2               	movwf	___lldiv@divisor+2
 10469  03FB  120A  118A  200D  120A  118A  	fcall	stringdir
 10470  0400  00F3               	movwf	___lldiv@divisor+3
 10471  0401  083E               	movf	(sprintf@val+3)^(0+128),w
 10472  0402  00F7               	movwf	___lldiv@dividend+3
 10473  0403  083D               	movf	(sprintf@val+2)^(0+128),w
 10474  0404  00F6               	movwf	___lldiv@dividend+2
 10475  0405  083C               	movf	(sprintf@val+1)^(0+128),w
 10476  0406  00F5               	movwf	___lldiv@dividend+1
 10477  0407  083B               	movf	sprintf@val^(0+128),w
 10478  0408  00F4               	movwf	___lldiv@dividend
 10479  0409  160A  158A  2550  120A  118A  	fcall	___lldiv
 10480  040E  0873               	movf	?___lldiv+3,w
 10481  040F  1683               	bsf	3,5	;RP0=1, select bank1
 10482  0410  1303               	bcf	3,6	;RP1=0, select bank1
 10483  0411  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
 10484  0412  0872               	movf	?___lldiv+2,w
 10485  0413  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
 10486  0414  0871               	movf	?___lldiv+1,w
 10487  0415  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
 10488  0416  0870               	movf	?___lldiv,w
 10489  0417  00B7               	movwf	sprintf@tmpval^(0+128)
 10490  0418                     l3583:
 10491                           
 10492                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
 10493  0418  3000               	movlw	0
 10494  0419  1283               	bcf	3,5	;RP0=0, select bank0
 10495  041A  1303               	bcf	3,6	;RP1=0, select bank0
 10496  041B  00A3               	movwf	___llmod@divisor+3
 10497  041C  3000               	movlw	0
 10498  041D  00A2               	movwf	___llmod@divisor+2
 10499  041E  3000               	movlw	0
 10500  041F  00A1               	movwf	___llmod@divisor+1
 10501  0420  300A               	movlw	10
 10502  0421  00A0               	movwf	___llmod@divisor
 10503  0422  1683               	bsf	3,5	;RP0=1, select bank1
 10504  0423  1303               	bcf	3,6	;RP1=0, select bank1
 10505  0424  083A               	movf	(sprintf@tmpval+3)^(0+128),w
 10506  0425  1283               	bcf	3,5	;RP0=0, select bank0
 10507  0426  1303               	bcf	3,6	;RP1=0, select bank0
 10508  0427  00A7               	movwf	___llmod@dividend+3
 10509  0428  1683               	bsf	3,5	;RP0=1, select bank1
 10510  0429  1303               	bcf	3,6	;RP1=0, select bank1
 10511  042A  0839               	movf	(sprintf@tmpval+2)^(0+128),w
 10512  042B  1283               	bcf	3,5	;RP0=0, select bank0
 10513  042C  1303               	bcf	3,6	;RP1=0, select bank0
 10514  042D  00A6               	movwf	___llmod@dividend+2
 10515  042E  1683               	bsf	3,5	;RP0=1, select bank1
 10516  042F  1303               	bcf	3,6	;RP1=0, select bank1
 10517  0430  0838               	movf	(sprintf@tmpval+1)^(0+128),w
 10518  0431  1283               	bcf	3,5	;RP0=0, select bank0
 10519  0432  1303               	bcf	3,6	;RP1=0, select bank0
 10520  0433  00A5               	movwf	___llmod@dividend+1
 10521  0434  1683               	bsf	3,5	;RP0=1, select bank1
 10522  0435  1303               	bcf	3,6	;RP1=0, select bank1
 10523  0436  0837               	movf	sprintf@tmpval^(0+128),w
 10524  0437  1283               	bcf	3,5	;RP0=0, select bank0
 10525  0438  1303               	bcf	3,6	;RP1=0, select bank0
 10526  0439  00A4               	movwf	___llmod@dividend
 10527  043A  160A  158A  24A1  120A  118A  	fcall	___llmod
 10528  043F  1283               	bcf	3,5	;RP0=0, select bank0
 10529  0440  1303               	bcf	3,6	;RP1=0, select bank0
 10530  0441  0823               	movf	?___llmod+3,w
 10531  0442  1683               	bsf	3,5	;RP0=1, select bank1
 10532  0443  1303               	bcf	3,6	;RP1=0, select bank1
 10533  0444  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
 10534  0445  1283               	bcf	3,5	;RP0=0, select bank0
 10535  0446  1303               	bcf	3,6	;RP1=0, select bank0
 10536  0447  0822               	movf	?___llmod+2,w
 10537  0448  1683               	bsf	3,5	;RP0=1, select bank1
 10538  0449  1303               	bcf	3,6	;RP1=0, select bank1
 10539  044A  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
 10540  044B  1283               	bcf	3,5	;RP0=0, select bank0
 10541  044C  1303               	bcf	3,6	;RP1=0, select bank0
 10542  044D  0821               	movf	?___llmod+1,w
 10543  044E  1683               	bsf	3,5	;RP0=1, select bank1
 10544  044F  1303               	bcf	3,6	;RP1=0, select bank1
 10545  0450  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
 10546  0451  1283               	bcf	3,5	;RP0=0, select bank0
 10547  0452  1303               	bcf	3,6	;RP1=0, select bank0
 10548  0453  0820               	movf	?___llmod,w
 10549  0454  1683               	bsf	3,5	;RP0=1, select bank1
 10550  0455  1303               	bcf	3,6	;RP1=0, select bank1
 10551  0456  00B7               	movwf	sprintf@tmpval^(0+128)
 10552  0457                     l3585:
 10553                           
 10554                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
 10555  0457  0837               	movf	sprintf@tmpval^(0+128),w
 10556  0458  3E30               	addlw	48
 10557  0459  00A9               	movwf	??_sprintf^(0+128)
 10558  045A  0845               	movf	sprintf@sp^(0+128),w
 10559  045B  0084               	movwf	4
 10560  045C  0829               	movf	??_sprintf^(0+128),w
 10561  045D  1383               	bcf	3,7	;select IRP bank0
 10562  045E  0080               	movwf	0
 10563  045F  3001               	movlw	1
 10564  0460  00A9               	movwf	??_sprintf^(0+128)
 10565  0461  0829               	movf	??_sprintf^(0+128),w
 10566  0462  07C5               	addwf	sprintf@sp^(0+128),f
 10567  0463                     l375:	
 10568                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
 10569                           
 10570                           
 10571                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
 10572  0463  3001               	movlw	1
 10573  0464  02C8               	subwf	sprintf@c^(0+128),f
 10574  0465  0A48               	incf	sprintf@c^(0+128),w
 10575  0466  1D03               	btfss	3,2
 10576  0467  2C69               	goto	u5601
 10577  0468  2C6A               	goto	u5600
 10578  0469                     u5601:
 10579  0469  2BDD               	goto	l3581
 10580  046A                     u5600:
 10581  046A  2C7E               	goto	l3593
 10582  046B                     l3587:
 10583                           
 10584                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
 10585  046B  3030               	movlw	48
 10586  046C  1683               	bsf	3,5	;RP0=1, select bank1
 10587  046D  1303               	bcf	3,6	;RP1=0, select bank1
 10588  046E  00A9               	movwf	??_sprintf^(0+128)
 10589  046F  0845               	movf	sprintf@sp^(0+128),w
 10590  0470  0084               	movwf	4
 10591  0471  0829               	movf	??_sprintf^(0+128),w
 10592  0472  1383               	bcf	3,7	;select IRP bank0
 10593  0473  0080               	movwf	0
 10594  0474                     l3589:
 10595  0474  3001               	movlw	1
 10596  0475  00A9               	movwf	??_sprintf^(0+128)
 10597  0476  0829               	movf	??_sprintf^(0+128),w
 10598  0477  07C5               	addwf	sprintf@sp^(0+128),f
 10599  0478                     l3591:
 10600                           
 10601                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 10602  0478  30FF               	movlw	255
 10603  0479  07BF               	addwf	sprintf@eexp^(0+128),f
 10604  047A  1803               	skipnc
 10605  047B  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
 10606  047C  30FF               	movlw	255
 10607  047D  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
 10608  047E                     l3593:
 10609                           
 10610                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
 10611  047E  0840               	movf	(sprintf@eexp+1)^(0+128),w
 10612  047F  3A80               	xorlw	128
 10613  0480  00FF               	movwf	btemp+1
 10614  0481  3080               	movlw	128
 10615  0482  027F               	subwf	btemp+1,w
 10616  0483  1D03               	skipz
 10617  0484  2C87               	goto	u5615
 10618  0485  3001               	movlw	1
 10619  0486  023F               	subwf	sprintf@eexp^(0+128),w
 10620  0487                     u5615:
 10621  0487  1803               	skipnc
 10622  0488  2C8A               	goto	u5611
 10623  0489  2C8B               	goto	u5610
 10624  048A                     u5611:
 10625  048A  2C6B               	goto	l3587
 10626  048B                     u5610:
 10627  048B                     l3595:
 10628                           
 10629                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 10630  048B  1683               	bsf	3,5	;RP0=1, select bank1
 10631  048C  1303               	bcf	3,6	;RP1=0, select bank1
 10632  048D  0847               	movf	(sprintf@prec+1)^(0+128),w
 10633  048E  3A80               	xorlw	128
 10634  048F  00FF               	movwf	btemp+1
 10635  0490  3080               	movlw	128
 10636  0491  027F               	subwf	btemp+1,w
 10637  0492  1D03               	skipz
 10638  0493  2C96               	goto	u5625
 10639  0494  3009               	movlw	9
 10640  0495  0246               	subwf	sprintf@prec^(0+128),w
 10641  0496                     u5625:
 10642  0496  1C03               	skipc
 10643  0497  2C99               	goto	u5621
 10644  0498  2C9A               	goto	u5620
 10645  0499                     u5621:
 10646  0499  2CA1               	goto	l3599
 10647  049A                     u5620:
 10648  049A                     l3597:
 10649                           
 10650                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 10651  049A  3008               	movlw	8
 10652  049B  1683               	bsf	3,5	;RP0=1, select bank1
 10653  049C  1303               	bcf	3,6	;RP1=0, select bank1
 10654  049D  00A9               	movwf	??_sprintf^(0+128)
 10655  049E  0829               	movf	??_sprintf^(0+128),w
 10656  049F  00C8               	movwf	sprintf@c^(0+128)
 10657  04A0  2CA7               	goto	l382
 10658  04A1                     l3599:
 10659                           
 10660                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 10661  04A1  1683               	bsf	3,5	;RP0=1, select bank1
 10662  04A2  1303               	bcf	3,6	;RP1=0, select bank1
 10663  04A3  0846               	movf	sprintf@prec^(0+128),w
 10664  04A4  00A9               	movwf	??_sprintf^(0+128)
 10665  04A5  0829               	movf	??_sprintf^(0+128),w
 10666  04A6  00C8               	movwf	sprintf@c^(0+128)
 10667  04A7                     l382:
 10668                           
 10669                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 10670  04A7  0848               	movf	sprintf@c^(0+128),w
 10671  04A8  00A9               	movwf	??_sprintf^(0+128)
 10672  04A9  01AA               	clrf	(??_sprintf^(0+128)+1)
 10673  04AA  0829               	movf	??_sprintf^(0+128),w
 10674  04AB  02C6               	subwf	sprintf@prec^(0+128),f
 10675  04AC  082A               	movf	(??_sprintf+1)^(0+128),w
 10676  04AD  1C03               	skipc
 10677  04AE  03C7               	decf	(sprintf@prec+1)^(0+128),f
 10678  04AF  02C7               	subwf	(sprintf@prec+1)^(0+128),f
 10679  04B0                     l3601:
 10680                           
 10681                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 10682  04B0  0848               	movf	sprintf@c^(0+128),w
 10683  04B1  1903               	btfsc	3,2
 10684  04B2  2CB4               	goto	u5631
 10685  04B3  2CB5               	goto	u5630
 10686  04B4                     u5631:
 10687  04B4  2CC0               	goto	l3607
 10688  04B5                     u5630:
 10689  04B5                     l3603:
 10690                           
 10691                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 10692  04B5  302E               	movlw	46
 10693  04B6  00A9               	movwf	??_sprintf^(0+128)
 10694  04B7  0845               	movf	sprintf@sp^(0+128),w
 10695  04B8  0084               	movwf	4
 10696  04B9  0829               	movf	??_sprintf^(0+128),w
 10697  04BA  1383               	bcf	3,7	;select IRP bank0
 10698  04BB  0080               	movwf	0
 10699  04BC                     l3605:
 10700  04BC  3001               	movlw	1
 10701  04BD  00A9               	movwf	??_sprintf^(0+128)
 10702  04BE  0829               	movf	??_sprintf^(0+128),w
 10703  04BF  07C5               	addwf	sprintf@sp^(0+128),f
 10704  04C0                     l3607:
 10705                           
 10706                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10707  04C0  0848               	movf	sprintf@c^(0+128),w
 10708  04C1  120A  158A  2140  120A  118A  	fcall	_scale
 10709  04C6  1283               	bcf	3,5	;RP0=0, select bank0
 10710  04C7  1303               	bcf	3,6	;RP1=0, select bank0
 10711  04C8  0841               	movf	?_scale+3,w
 10712  04C9  1683               	bsf	3,5	;RP0=1, select bank1
 10713  04CA  1303               	bcf	3,6	;RP1=0, select bank1
 10714  04CB  00B1               	movwf	(_sprintf$1171+3)^(0+128)
 10715  04CC  1283               	bcf	3,5	;RP0=0, select bank0
 10716  04CD  1303               	bcf	3,6	;RP1=0, select bank0
 10717  04CE  0840               	movf	?_scale+2,w
 10718  04CF  1683               	bsf	3,5	;RP0=1, select bank1
 10719  04D0  1303               	bcf	3,6	;RP1=0, select bank1
 10720  04D1  00B0               	movwf	(_sprintf$1171+2)^(0+128)
 10721  04D2  1283               	bcf	3,5	;RP0=0, select bank0
 10722  04D3  1303               	bcf	3,6	;RP1=0, select bank0
 10723  04D4  083F               	movf	?_scale+1,w
 10724  04D5  1683               	bsf	3,5	;RP0=1, select bank1
 10725  04D6  1303               	bcf	3,6	;RP1=0, select bank1
 10726  04D7  00AF               	movwf	(_sprintf$1171+1)^(0+128)
 10727  04D8  1283               	bcf	3,5	;RP0=0, select bank0
 10728  04D9  1303               	bcf	3,6	;RP1=0, select bank0
 10729  04DA  083E               	movf	?_scale,w
 10730  04DB  1683               	bsf	3,5	;RP0=1, select bank1
 10731  04DC  1303               	bcf	3,6	;RP1=0, select bank1
 10732  04DD  00AE               	movwf	_sprintf$1171^(0+128)
 10733  04DE                     l3609:
 10734                           
 10735                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10736  04DE  0831               	movf	(_sprintf$1171+3)^(0+128),w
 10737  04DF  1283               	bcf	3,5	;RP0=0, select bank0
 10738  04E0  1303               	bcf	3,6	;RP1=0, select bank0
 10739  04E1  00AB               	movwf	___flmul@a+3
 10740  04E2  1683               	bsf	3,5	;RP0=1, select bank1
 10741  04E3  1303               	bcf	3,6	;RP1=0, select bank1
 10742  04E4  0830               	movf	(_sprintf$1171+2)^(0+128),w
 10743  04E5  1283               	bcf	3,5	;RP0=0, select bank0
 10744  04E6  1303               	bcf	3,6	;RP1=0, select bank0
 10745  04E7  00AA               	movwf	___flmul@a+2
 10746  04E8  1683               	bsf	3,5	;RP0=1, select bank1
 10747  04E9  1303               	bcf	3,6	;RP1=0, select bank1
 10748  04EA  082F               	movf	(_sprintf$1171+1)^(0+128),w
 10749  04EB  1283               	bcf	3,5	;RP0=0, select bank0
 10750  04EC  1303               	bcf	3,6	;RP1=0, select bank0
 10751  04ED  00A9               	movwf	___flmul@a+1
 10752  04EE  1683               	bsf	3,5	;RP0=1, select bank1
 10753  04EF  1303               	bcf	3,6	;RP1=0, select bank1
 10754  04F0  082E               	movf	_sprintf$1171^(0+128),w
 10755  04F1  1283               	bcf	3,5	;RP0=0, select bank0
 10756  04F2  1303               	bcf	3,6	;RP1=0, select bank0
 10757  04F3  00A8               	movwf	___flmul@a
 10758  04F4  1683               	bsf	3,5	;RP0=1, select bank1
 10759  04F5  1303               	bcf	3,6	;RP1=0, select bank1
 10760  04F6  0844               	movf	(sprintf@fval+3)^(0+128),w
 10761  04F7  1283               	bcf	3,5	;RP0=0, select bank0
 10762  04F8  1303               	bcf	3,6	;RP1=0, select bank0
 10763  04F9  00A7               	movwf	___flmul@b+3
 10764  04FA  1683               	bsf	3,5	;RP0=1, select bank1
 10765  04FB  1303               	bcf	3,6	;RP1=0, select bank1
 10766  04FC  0843               	movf	(sprintf@fval+2)^(0+128),w
 10767  04FD  1283               	bcf	3,5	;RP0=0, select bank0
 10768  04FE  1303               	bcf	3,6	;RP1=0, select bank0
 10769  04FF  00A6               	movwf	___flmul@b+2
 10770  0500  1683               	bsf	3,5	;RP0=1, select bank1
 10771  0501  1303               	bcf	3,6	;RP1=0, select bank1
 10772  0502  0842               	movf	(sprintf@fval+1)^(0+128),w
 10773  0503  1283               	bcf	3,5	;RP0=0, select bank0
 10774  0504  1303               	bcf	3,6	;RP1=0, select bank0
 10775  0505  00A5               	movwf	___flmul@b+1
 10776  0506  1683               	bsf	3,5	;RP0=1, select bank1
 10777  0507  1303               	bcf	3,6	;RP1=0, select bank1
 10778  0508  0841               	movf	sprintf@fval^(0+128),w
 10779  0509  1283               	bcf	3,5	;RP0=0, select bank0
 10780  050A  1303               	bcf	3,6	;RP1=0, select bank0
 10781  050B  00A4               	movwf	___flmul@b
 10782  050C  120A  158A  249F  120A  118A  	fcall	___flmul
 10783  0511  1283               	bcf	3,5	;RP0=0, select bank0
 10784  0512  1303               	bcf	3,6	;RP1=0, select bank0
 10785  0513  0827               	movf	?___flmul+3,w
 10786  0514  00D4               	movwf	___fltol@f1+3
 10787  0515  0826               	movf	?___flmul+2,w
 10788  0516  00D3               	movwf	___fltol@f1+2
 10789  0517  0825               	movf	?___flmul+1,w
 10790  0518  00D2               	movwf	___fltol@f1+1
 10791  0519  0824               	movf	?___flmul,w
 10792  051A  00D1               	movwf	___fltol@f1
 10793  051B  120A  158A  2006  120A  118A  	fcall	___fltol
 10794  0520  1283               	bcf	3,5	;RP0=0, select bank0
 10795  0521  1303               	bcf	3,6	;RP1=0, select bank0
 10796  0522  0854               	movf	?___fltol+3,w
 10797  0523  1683               	bsf	3,5	;RP0=1, select bank1
 10798  0524  1303               	bcf	3,6	;RP1=0, select bank1
 10799  0525  00BE               	movwf	(sprintf@val+3)^(0+128)
 10800  0526  1283               	bcf	3,5	;RP0=0, select bank0
 10801  0527  1303               	bcf	3,6	;RP1=0, select bank0
 10802  0528  0853               	movf	?___fltol+2,w
 10803  0529  1683               	bsf	3,5	;RP0=1, select bank1
 10804  052A  1303               	bcf	3,6	;RP1=0, select bank1
 10805  052B  00BD               	movwf	(sprintf@val+2)^(0+128)
 10806  052C  1283               	bcf	3,5	;RP0=0, select bank0
 10807  052D  1303               	bcf	3,6	;RP1=0, select bank0
 10808  052E  0852               	movf	?___fltol+1,w
 10809  052F  1683               	bsf	3,5	;RP0=1, select bank1
 10810  0530  1303               	bcf	3,6	;RP1=0, select bank1
 10811  0531  00BC               	movwf	(sprintf@val+1)^(0+128)
 10812  0532  1283               	bcf	3,5	;RP0=0, select bank0
 10813  0533  1303               	bcf	3,6	;RP1=0, select bank0
 10814  0534  0851               	movf	?___fltol,w
 10815  0535  1683               	bsf	3,5	;RP0=1, select bank1
 10816  0536  1303               	bcf	3,6	;RP1=0, select bank1
 10817  0537  00BB               	movwf	sprintf@val^(0+128)
 10818                           
 10819                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10820  0538  2E1A               	goto	l3619
 10821  0539                     l3611:
 10822                           
 10823                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 10824  0539  0848               	movf	sprintf@c^(0+128),w
 10825  053A  00A9               	movwf	??_sprintf^(0+128)
 10826  053B  3001               	movlw	1
 10827  053C                     u5645:
 10828  053C  1003               	clrc
 10829  053D  0DA9               	rlf	??_sprintf^(0+128),f
 10830  053E  3EFF               	addlw	-1
 10831  053F  1D03               	skipz
 10832  0540  2D3C               	goto	u5645
 10833  0541  1003               	clrc
 10834  0542  0D29               	rlf	??_sprintf^(0+128),w
 10835  0543  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10836  0544  0084               	movwf	4
 10837  0545  120A  118A  200D  120A  118A  	fcall	stringdir
 10838  054A  00F0               	movwf	___lldiv@divisor
 10839  054B  120A  118A  200D  120A  118A  	fcall	stringdir
 10840  0550  00F1               	movwf	___lldiv@divisor+1
 10841  0551  120A  118A  200D  120A  118A  	fcall	stringdir
 10842  0556  00F2               	movwf	___lldiv@divisor+2
 10843  0557  120A  118A  200D  120A  118A  	fcall	stringdir
 10844  055C  00F3               	movwf	___lldiv@divisor+3
 10845  055D  083E               	movf	(sprintf@val+3)^(0+128),w
 10846  055E  00F7               	movwf	___lldiv@dividend+3
 10847  055F  083D               	movf	(sprintf@val+2)^(0+128),w
 10848  0560  00F6               	movwf	___lldiv@dividend+2
 10849  0561  083C               	movf	(sprintf@val+1)^(0+128),w
 10850  0562  00F5               	movwf	___lldiv@dividend+1
 10851  0563  083B               	movf	sprintf@val^(0+128),w
 10852  0564  00F4               	movwf	___lldiv@dividend
 10853  0565  160A  158A  2550  120A  118A  	fcall	___lldiv
 10854  056A  0873               	movf	?___lldiv+3,w
 10855  056B  1683               	bsf	3,5	;RP0=1, select bank1
 10856  056C  1303               	bcf	3,6	;RP1=0, select bank1
 10857  056D  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
 10858  056E  0872               	movf	?___lldiv+2,w
 10859  056F  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
 10860  0570  0871               	movf	?___lldiv+1,w
 10861  0571  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
 10862  0572  0870               	movf	?___lldiv,w
 10863  0573  00B7               	movwf	sprintf@tmpval^(0+128)
 10864  0574                     l3613:
 10865                           
 10866                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 10867  0574  3000               	movlw	0
 10868  0575  1283               	bcf	3,5	;RP0=0, select bank0
 10869  0576  1303               	bcf	3,6	;RP1=0, select bank0
 10870  0577  00A3               	movwf	___llmod@divisor+3
 10871  0578  3000               	movlw	0
 10872  0579  00A2               	movwf	___llmod@divisor+2
 10873  057A  3000               	movlw	0
 10874  057B  00A1               	movwf	___llmod@divisor+1
 10875  057C  300A               	movlw	10
 10876  057D  00A0               	movwf	___llmod@divisor
 10877  057E  1683               	bsf	3,5	;RP0=1, select bank1
 10878  057F  1303               	bcf	3,6	;RP1=0, select bank1
 10879  0580  083A               	movf	(sprintf@tmpval+3)^(0+128),w
 10880  0581  1283               	bcf	3,5	;RP0=0, select bank0
 10881  0582  1303               	bcf	3,6	;RP1=0, select bank0
 10882  0583  00A7               	movwf	___llmod@dividend+3
 10883  0584  1683               	bsf	3,5	;RP0=1, select bank1
 10884  0585  1303               	bcf	3,6	;RP1=0, select bank1
 10885  0586  0839               	movf	(sprintf@tmpval+2)^(0+128),w
 10886  0587  1283               	bcf	3,5	;RP0=0, select bank0
 10887  0588  1303               	bcf	3,6	;RP1=0, select bank0
 10888  0589  00A6               	movwf	___llmod@dividend+2
 10889  058A  1683               	bsf	3,5	;RP0=1, select bank1
 10890  058B  1303               	bcf	3,6	;RP1=0, select bank1
 10891  058C  0838               	movf	(sprintf@tmpval+1)^(0+128),w
 10892  058D  1283               	bcf	3,5	;RP0=0, select bank0
 10893  058E  1303               	bcf	3,6	;RP1=0, select bank0
 10894  058F  00A5               	movwf	___llmod@dividend+1
 10895  0590  1683               	bsf	3,5	;RP0=1, select bank1
 10896  0591  1303               	bcf	3,6	;RP1=0, select bank1
 10897  0592  0837               	movf	sprintf@tmpval^(0+128),w
 10898  0593  1283               	bcf	3,5	;RP0=0, select bank0
 10899  0594  1303               	bcf	3,6	;RP1=0, select bank0
 10900  0595  00A4               	movwf	___llmod@dividend
 10901  0596  160A  158A  24A1  120A  118A  	fcall	___llmod
 10902  059B  1283               	bcf	3,5	;RP0=0, select bank0
 10903  059C  1303               	bcf	3,6	;RP1=0, select bank0
 10904  059D  0823               	movf	?___llmod+3,w
 10905  059E  1683               	bsf	3,5	;RP0=1, select bank1
 10906  059F  1303               	bcf	3,6	;RP1=0, select bank1
 10907  05A0  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
 10908  05A1  1283               	bcf	3,5	;RP0=0, select bank0
 10909  05A2  1303               	bcf	3,6	;RP1=0, select bank0
 10910  05A3  0822               	movf	?___llmod+2,w
 10911  05A4  1683               	bsf	3,5	;RP0=1, select bank1
 10912  05A5  1303               	bcf	3,6	;RP1=0, select bank1
 10913  05A6  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
 10914  05A7  1283               	bcf	3,5	;RP0=0, select bank0
 10915  05A8  1303               	bcf	3,6	;RP1=0, select bank0
 10916  05A9  0821               	movf	?___llmod+1,w
 10917  05AA  1683               	bsf	3,5	;RP0=1, select bank1
 10918  05AB  1303               	bcf	3,6	;RP1=0, select bank1
 10919  05AC  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
 10920  05AD  1283               	bcf	3,5	;RP0=0, select bank0
 10921  05AE  1303               	bcf	3,6	;RP1=0, select bank0
 10922  05AF  0820               	movf	?___llmod,w
 10923  05B0  1683               	bsf	3,5	;RP0=1, select bank1
 10924  05B1  1303               	bcf	3,6	;RP1=0, select bank1
 10925  05B2  00B7               	movwf	sprintf@tmpval^(0+128)
 10926  05B3                     l3615:
 10927                           
 10928                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 10929  05B3  0837               	movf	sprintf@tmpval^(0+128),w
 10930  05B4  3E30               	addlw	48
 10931  05B5  00A9               	movwf	??_sprintf^(0+128)
 10932  05B6  0845               	movf	sprintf@sp^(0+128),w
 10933  05B7  0084               	movwf	4
 10934  05B8  0829               	movf	??_sprintf^(0+128),w
 10935  05B9  1383               	bcf	3,7	;select IRP bank0
 10936  05BA  0080               	movwf	0
 10937  05BB  3001               	movlw	1
 10938  05BC  00A9               	movwf	??_sprintf^(0+128)
 10939  05BD  0829               	movf	??_sprintf^(0+128),w
 10940  05BE  07C5               	addwf	sprintf@sp^(0+128),f
 10941  05BF                     l3617:
 10942                           
 10943                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 10944  05BF  0848               	movf	sprintf@c^(0+128),w
 10945  05C0  00A9               	movwf	??_sprintf^(0+128)
 10946  05C1  3001               	movlw	1
 10947  05C2                     u5655:
 10948  05C2  1003               	clrc
 10949  05C3  0DA9               	rlf	??_sprintf^(0+128),f
 10950  05C4  3EFF               	addlw	-1
 10951  05C5  1D03               	skipz
 10952  05C6  2DC2               	goto	u5655
 10953  05C7  1003               	clrc
 10954  05C8  0D29               	rlf	??_sprintf^(0+128),w
 10955  05C9  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10956  05CA  0084               	movwf	4
 10957  05CB  120A  118A  200D  120A  118A  	fcall	stringdir
 10958  05D0  1283               	bcf	3,5	;RP0=0, select bank0
 10959  05D1  1303               	bcf	3,6	;RP1=0, select bank0
 10960  05D2  00A0               	movwf	___llmod@divisor
 10961  05D3  120A  118A  200D  120A  118A  	fcall	stringdir
 10962  05D8  00A1               	movwf	___llmod@divisor+1
 10963  05D9  120A  118A  200D  120A  118A  	fcall	stringdir
 10964  05DE  00A2               	movwf	___llmod@divisor+2
 10965  05DF  120A  118A  200D  120A  118A  	fcall	stringdir
 10966  05E4  00A3               	movwf	___llmod@divisor+3
 10967  05E5  1683               	bsf	3,5	;RP0=1, select bank1
 10968  05E6  1303               	bcf	3,6	;RP1=0, select bank1
 10969  05E7  083E               	movf	(sprintf@val+3)^(0+128),w
 10970  05E8  1283               	bcf	3,5	;RP0=0, select bank0
 10971  05E9  1303               	bcf	3,6	;RP1=0, select bank0
 10972  05EA  00A7               	movwf	___llmod@dividend+3
 10973  05EB  1683               	bsf	3,5	;RP0=1, select bank1
 10974  05EC  1303               	bcf	3,6	;RP1=0, select bank1
 10975  05ED  083D               	movf	(sprintf@val+2)^(0+128),w
 10976  05EE  1283               	bcf	3,5	;RP0=0, select bank0
 10977  05EF  1303               	bcf	3,6	;RP1=0, select bank0
 10978  05F0  00A6               	movwf	___llmod@dividend+2
 10979  05F1  1683               	bsf	3,5	;RP0=1, select bank1
 10980  05F2  1303               	bcf	3,6	;RP1=0, select bank1
 10981  05F3  083C               	movf	(sprintf@val+1)^(0+128),w
 10982  05F4  1283               	bcf	3,5	;RP0=0, select bank0
 10983  05F5  1303               	bcf	3,6	;RP1=0, select bank0
 10984  05F6  00A5               	movwf	___llmod@dividend+1
 10985  05F7  1683               	bsf	3,5	;RP0=1, select bank1
 10986  05F8  1303               	bcf	3,6	;RP1=0, select bank1
 10987  05F9  083B               	movf	sprintf@val^(0+128),w
 10988  05FA  1283               	bcf	3,5	;RP0=0, select bank0
 10989  05FB  1303               	bcf	3,6	;RP1=0, select bank0
 10990  05FC  00A4               	movwf	___llmod@dividend
 10991  05FD  160A  158A  24A1  120A  118A  	fcall	___llmod
 10992  0602  1283               	bcf	3,5	;RP0=0, select bank0
 10993  0603  1303               	bcf	3,6	;RP1=0, select bank0
 10994  0604  0823               	movf	?___llmod+3,w
 10995  0605  1683               	bsf	3,5	;RP0=1, select bank1
 10996  0606  1303               	bcf	3,6	;RP1=0, select bank1
 10997  0607  00BE               	movwf	(sprintf@val+3)^(0+128)
 10998  0608  1283               	bcf	3,5	;RP0=0, select bank0
 10999  0609  1303               	bcf	3,6	;RP1=0, select bank0
 11000  060A  0822               	movf	?___llmod+2,w
 11001  060B  1683               	bsf	3,5	;RP0=1, select bank1
 11002  060C  1303               	bcf	3,6	;RP1=0, select bank1
 11003  060D  00BD               	movwf	(sprintf@val+2)^(0+128)
 11004  060E  1283               	bcf	3,5	;RP0=0, select bank0
 11005  060F  1303               	bcf	3,6	;RP1=0, select bank0
 11006  0610  0821               	movf	?___llmod+1,w
 11007  0611  1683               	bsf	3,5	;RP0=1, select bank1
 11008  0612  1303               	bcf	3,6	;RP1=0, select bank1
 11009  0613  00BC               	movwf	(sprintf@val+1)^(0+128)
 11010  0614  1283               	bcf	3,5	;RP0=0, select bank0
 11011  0615  1303               	bcf	3,6	;RP1=0, select bank0
 11012  0616  0820               	movf	?___llmod,w
 11013  0617  1683               	bsf	3,5	;RP0=1, select bank1
 11014  0618  1303               	bcf	3,6	;RP1=0, select bank1
 11015  0619  00BB               	movwf	sprintf@val^(0+128)
 11016  061A                     l3619:
 11017                           
 11018                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11019  061A  3001               	movlw	1
 11020  061B  02C8               	subwf	sprintf@c^(0+128),f
 11021  061C  0A48               	incf	sprintf@c^(0+128),w
 11022  061D  1D03               	btfss	3,2
 11023  061E  2E20               	goto	u5661
 11024  061F  2E21               	goto	u5660
 11025  0620                     u5661:
 11026  0620  2D39               	goto	l3611
 11027  0621                     u5660:
 11028  0621  2E33               	goto	l3627
 11029  0622                     l3621:
 11030                           
 11031                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 11032  0622  3030               	movlw	48
 11033  0623  00A9               	movwf	??_sprintf^(0+128)
 11034  0624  0845               	movf	sprintf@sp^(0+128),w
 11035  0625  0084               	movwf	4
 11036  0626  0829               	movf	??_sprintf^(0+128),w
 11037  0627  1383               	bcf	3,7	;select IRP bank0
 11038  0628  0080               	movwf	0
 11039  0629                     l3623:
 11040  0629  3001               	movlw	1
 11041  062A  00A9               	movwf	??_sprintf^(0+128)
 11042  062B  0829               	movf	??_sprintf^(0+128),w
 11043  062C  07C5               	addwf	sprintf@sp^(0+128),f
 11044  062D                     l3625:
 11045                           
 11046                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 11047  062D  30FF               	movlw	255
 11048  062E  07C6               	addwf	sprintf@prec^(0+128),f
 11049  062F  1803               	skipnc
 11050  0630  0AC7               	incf	(sprintf@prec+1)^(0+128),f
 11051  0631  30FF               	movlw	255
 11052  0632  07C7               	addwf	(sprintf@prec+1)^(0+128),f
 11053  0633                     l3627:
 11054                           
 11055                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 11056  0633  0846               	movf	sprintf@prec^(0+128),w
 11057  0634  0447               	iorwf	(sprintf@prec+1)^(0+128),w
 11058  0635  1D03               	btfss	3,2
 11059  0636  2E38               	goto	u5671
 11060  0637  2E39               	goto	u5670
 11061  0638                     u5671:
 11062  0638  2E22               	goto	l3621
 11063  0639                     u5670:
 11064  0639  2FD7               	goto	l3707
 11065  063A                     l3629:
 11066                           
 11067                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           long)(*(int *)__va_arg((*(int **)ap), (int)0));
 11068  063A  0832               	movf	sprintf@ap^(0+128),w
 11069  063B  0084               	movwf	4
 11070  063C  1383               	bcf	3,7	;select IRP bank0
 11071  063D  0800               	movf	0,w
 11072  063E  00A9               	movwf	??_sprintf^(0+128)
 11073  063F  0A84               	incf	4,f
 11074  0640  0800               	movf	0,w
 11075  0641  00AA               	movwf	(??_sprintf^(0+128)+1)
 11076  0642  0829               	movf	??_sprintf^(0+128),w
 11077  0643  00BB               	movwf	sprintf@val^(0+128)
 11078  0644  082A               	movf	(??_sprintf+1)^(0+128),w
 11079  0645  00BC               	movwf	(sprintf@val+1)^(0+128)
 11080  0646  3000               	movlw	0
 11081  0647  1BBC               	btfsc	(sprintf@val+1)^(0+128),7
 11082  0648  30FF               	movlw	255
 11083  0649  00BD               	movwf	(sprintf@val+2)^(0+128)
 11084  064A  00BE               	movwf	(sprintf@val+3)^(0+128)
 11085  064B                     l3631:
 11086  064B  3002               	movlw	2
 11087  064C  00A9               	movwf	??_sprintf^(0+128)
 11088  064D  0829               	movf	??_sprintf^(0+128),w
 11089  064E  07B2               	addwf	sprintf@ap^(0+128),f
 11090  064F                     l3633:
 11091                           
 11092                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
 11093  064F  1FBE               	btfss	(sprintf@val+3)^(0+128),7
 11094  0650  2E52               	goto	u5681
 11095  0651  2E53               	goto	u5680
 11096  0652                     u5681:
 11097  0652  2E62               	goto	l3639
 11098  0653                     u5680:
 11099  0653                     l3635:
 11100                           
 11101                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
 11102  0653  3003               	movlw	3
 11103  0654  04B3               	iorwf	sprintf@flag^(0+128),f
 11104  0655  3000               	movlw	0
 11105  0656  04B4               	iorwf	(sprintf@flag+1)^(0+128),f
 11106  0657                     l3637:
 11107                           
 11108                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
 11109  0657  09BB               	comf	sprintf@val^(0+128),f
 11110  0658  09BC               	comf	(sprintf@val+1)^(0+128),f
 11111  0659  09BD               	comf	(sprintf@val+2)^(0+128),f
 11112  065A  09BE               	comf	(sprintf@val+3)^(0+128),f
 11113  065B  0ABB               	incf	sprintf@val^(0+128),f
 11114  065C  1903               	skipnz
 11115  065D  0ABC               	incf	(sprintf@val+1)^(0+128),f
 11116  065E  1903               	skipnz
 11117  065F  0ABD               	incf	(sprintf@val+2)^(0+128),f
 11118  0660  1903               	skipnz
 11119  0661  0ABE               	incf	(sprintf@val+3)^(0+128),f
 11120  0662                     l3639:
 11121                           
 11122                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
 11123  0662  0846               	movf	sprintf@prec^(0+128),w
 11124  0663  0447               	iorwf	(sprintf@prec+1)^(0+128),w
 11125  0664  1D03               	btfss	3,2
 11126  0665  2E67               	goto	u5691
 11127  0666  2E68               	goto	u5690
 11128  0667                     u5691:
 11129  0667  2E76               	goto	l3645
 11130  0668                     u5690:
 11131  0668                     l3641:
 11132  0668  083E               	movf	(sprintf@val+3)^(0+128),w
 11133  0669  043D               	iorwf	(sprintf@val+2)^(0+128),w
 11134  066A  043C               	iorwf	(sprintf@val+1)^(0+128),w
 11135  066B  043B               	iorwf	sprintf@val^(0+128),w
 11136  066C  1D03               	skipz
 11137  066D  2E6F               	goto	u5701
 11138  066E  2E70               	goto	u5700
 11139  066F                     u5701:
 11140  066F  2E76               	goto	l3645
 11141  0670                     u5700:
 11142  0670                     l3643:
 11143                           
 11144                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 11145  0670  3001               	movlw	1
 11146  0671  07C6               	addwf	sprintf@prec^(0+128),f
 11147  0672  1803               	skipnc
 11148  0673  0AC7               	incf	(sprintf@prec+1)^(0+128),f
 11149  0674  3000               	movlw	0
 11150  0675  07C7               	addwf	(sprintf@prec+1)^(0+128),f
 11151  0676                     l3645:
 11152                           
 11153                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 11154  0676  01C8               	clrf	sprintf@c^(0+128)
 11155  0677  0AC8               	incf	sprintf@c^(0+128),f
 11156  0678                     l3651:
 11157                           
 11158                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
 11159  0678  0848               	movf	sprintf@c^(0+128),w
 11160  0679  00A9               	movwf	??_sprintf^(0+128)
 11161  067A  3001               	movlw	1
 11162  067B                     u5715:
 11163  067B  1003               	clrc
 11164  067C  0DA9               	rlf	??_sprintf^(0+128),f
 11165  067D  3EFF               	addlw	-1
 11166  067E  1D03               	skipz
 11167  067F  2E7B               	goto	u5715
 11168  0680  1003               	clrc
 11169  0681  0D29               	rlf	??_sprintf^(0+128),w
 11170  0682  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11171  0683  0084               	movwf	4
 11172  0684  120A  118A  200D  120A  118A  	fcall	stringdir
 11173  0689  00AA               	movwf	(??_sprintf+1)^(0+128)
 11174  068A  120A  118A  200D  120A  118A  	fcall	stringdir
 11175  068F  00AB               	movwf	((??_sprintf+1)^(0+128)+1)
 11176  0690  120A  118A  200D  120A  118A  	fcall	stringdir
 11177  0695  00AC               	movwf	((??_sprintf+1)^(0+128)+2)
 11178  0696  120A  118A  200D  120A  118A  	fcall	stringdir
 11179  069B  00AD               	movwf	((??_sprintf+1)^(0+128)+3)
 11180  069C  082D               	movf	(??_sprintf+4)^(0+128),w
 11181  069D  023E               	subwf	(sprintf@val+3)^(0+128),w
 11182  069E  1D03               	skipz
 11183  069F  2EAA               	goto	u5725
 11184  06A0  082C               	movf	(??_sprintf+3)^(0+128),w
 11185  06A1  023D               	subwf	(sprintf@val+2)^(0+128),w
 11186  06A2  1D03               	skipz
 11187  06A3  2EAA               	goto	u5725
 11188  06A4  082B               	movf	(??_sprintf+2)^(0+128),w
 11189  06A5  023C               	subwf	(sprintf@val+1)^(0+128),w
 11190  06A6  1D03               	skipz
 11191  06A7  2EAA               	goto	u5725
 11192  06A8  082A               	movf	(??_sprintf+1)^(0+128),w
 11193  06A9  023B               	subwf	sprintf@val^(0+128),w
 11194  06AA                     u5725:
 11195  06AA  1803               	skipnc
 11196  06AB  2EAD               	goto	u5721
 11197  06AC  2EAE               	goto	u5720
 11198  06AD                     u5721:
 11199  06AD  2EAF               	goto	l3655
 11200  06AE                     u5720:
 11201  06AE  2EB9               	goto	l3657
 11202  06AF                     l3655:
 11203  06AF  3001               	movlw	1
 11204  06B0  00A9               	movwf	??_sprintf^(0+128)
 11205  06B1  0829               	movf	??_sprintf^(0+128),w
 11206  06B2  07C8               	addwf	sprintf@c^(0+128),f
 11207  06B3  300A               	movlw	10
 11208  06B4  0648               	xorwf	sprintf@c^(0+128),w
 11209  06B5  1D03               	btfss	3,2
 11210  06B6  2EB8               	goto	u5731
 11211  06B7  2EB9               	goto	u5730
 11212  06B8                     u5731:
 11213  06B8  2E78               	goto	l3651
 11214  06B9                     u5730:
 11215  06B9                     l3657:
 11216                           
 11217                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 11218  06B9  0847               	movf	(sprintf@prec+1)^(0+128),w
 11219  06BA  3A80               	xorlw	128
 11220  06BB  3C80               	sublw	128
 11221  06BC  1D03               	skipz
 11222  06BD  2EC0               	goto	u5745
 11223  06BE  0846               	movf	sprintf@prec^(0+128),w
 11224  06BF  0248               	subwf	sprintf@c^(0+128),w
 11225  06C0                     u5745:
 11226  06C0  1803               	skipnc
 11227  06C1  2EC3               	goto	u5741
 11228  06C2  2EC4               	goto	u5740
 11229  06C3                     u5741:
 11230  06C3  2ECB               	goto	l3661
 11231  06C4                     u5740:
 11232  06C4                     l3659:
 11233                           
 11234                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 11235  06C4  1683               	bsf	3,5	;RP0=1, select bank1
 11236  06C5  1303               	bcf	3,6	;RP1=0, select bank1
 11237  06C6  0846               	movf	sprintf@prec^(0+128),w
 11238  06C7  00A9               	movwf	??_sprintf^(0+128)
 11239  06C8  0829               	movf	??_sprintf^(0+128),w
 11240  06C9  00C8               	movwf	sprintf@c^(0+128)
 11241  06CA  2EE3               	goto	l3665
 11242  06CB                     l3661:
 11243  06CB  1683               	bsf	3,5	;RP0=1, select bank1
 11244  06CC  1303               	bcf	3,6	;RP1=0, select bank1
 11245  06CD  0847               	movf	(sprintf@prec+1)^(0+128),w
 11246  06CE  3A80               	xorlw	128
 11247  06CF  00A9               	movwf	??_sprintf^(0+128)
 11248  06D0  3080               	movlw	128
 11249  06D1  0229               	subwf	??_sprintf^(0+128),w
 11250  06D2  1D03               	skipz
 11251  06D3  2ED6               	goto	u5755
 11252  06D4  0848               	movf	sprintf@c^(0+128),w
 11253  06D5  0246               	subwf	sprintf@prec^(0+128),w
 11254  06D6                     u5755:
 11255  06D6  1803               	skipnc
 11256  06D7  2ED9               	goto	u5751
 11257  06D8  2EDA               	goto	u5750
 11258  06D9                     u5751:
 11259  06D9  2EE3               	goto	l3665
 11260  06DA                     u5750:
 11261  06DA                     l3663:
 11262                           
 11263                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 11264  06DA  1683               	bsf	3,5	;RP0=1, select bank1
 11265  06DB  1303               	bcf	3,6	;RP1=0, select bank1
 11266  06DC  0848               	movf	sprintf@c^(0+128),w
 11267  06DD  00A9               	movwf	??_sprintf^(0+128)
 11268  06DE  01AA               	clrf	(??_sprintf^(0+128)+1)
 11269  06DF  0829               	movf	??_sprintf^(0+128),w
 11270  06E0  00C6               	movwf	sprintf@prec^(0+128)
 11271  06E1  082A               	movf	(??_sprintf+1)^(0+128),w
 11272  06E2  00C7               	movwf	(sprintf@prec+1)^(0+128)
 11273  06E3                     l3665:
 11274                           
 11275                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 11276  06E3  1683               	bsf	3,5	;RP0=1, select bank1
 11277  06E4  1303               	bcf	3,6	;RP1=0, select bank1
 11278  06E5  0835               	movf	sprintf@width^(0+128),w
 11279  06E6  0436               	iorwf	(sprintf@width+1)^(0+128),w
 11280  06E7  1903               	btfsc	3,2
 11281  06E8  2EEA               	goto	u5761
 11282  06E9  2EEB               	goto	u5760
 11283  06EA                     u5761:
 11284  06EA  2EFD               	goto	l3671
 11285  06EB                     u5760:
 11286  06EB                     l3667:
 11287  06EB  3003               	movlw	3
 11288  06EC  0533               	andwf	sprintf@flag^(0+128),w
 11289  06ED  00A9               	movwf	??_sprintf^(0+128)
 11290  06EE  3000               	movlw	0
 11291  06EF  0534               	andwf	(sprintf@flag+1)^(0+128),w
 11292  06F0  00AA               	movwf	(??_sprintf+1)^(0+128)
 11293  06F1  0829               	movf	??_sprintf^(0+128),w
 11294  06F2  042A               	iorwf	(??_sprintf^(0+128)+1),w
 11295  06F3  1903               	btfsc	3,2
 11296  06F4  2EF6               	goto	u5771
 11297  06F5  2EF7               	goto	u5770
 11298  06F6                     u5771:
 11299  06F6  2EFD               	goto	l3671
 11300  06F7                     u5770:
 11301  06F7                     l3669:
 11302                           
 11303                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 11304  06F7  30FF               	movlw	255
 11305  06F8  07B5               	addwf	sprintf@width^(0+128),f
 11306  06F9  1803               	skipnc
 11307  06FA  0AB6               	incf	(sprintf@width+1)^(0+128),f
 11308  06FB  30FF               	movlw	255
 11309  06FC  07B6               	addwf	(sprintf@width+1)^(0+128),f
 11310  06FD                     l3671:
 11311                           
 11312                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 11313  06FD  1F34               	btfss	(sprintf@flag+1)^(0+128),6
 11314  06FE  2F00               	goto	u5781
 11315  06FF  2F01               	goto	u5780
 11316  0700                     u5781:
 11317  0700  2F1C               	goto	l3679
 11318  0701                     u5780:
 11319  0701                     l3673:
 11320                           
 11321                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 11322  0701  0847               	movf	(sprintf@prec+1)^(0+128),w
 11323  0702  3A80               	xorlw	128
 11324  0703  00A9               	movwf	??_sprintf^(0+128)
 11325  0704  0836               	movf	(sprintf@width+1)^(0+128),w
 11326  0705  3A80               	xorlw	128
 11327  0706  0229               	subwf	??_sprintf^(0+128),w
 11328  0707  1D03               	skipz
 11329  0708  2F0B               	goto	u5795
 11330  0709  0835               	movf	sprintf@width^(0+128),w
 11331  070A  0246               	subwf	sprintf@prec^(0+128),w
 11332  070B                     u5795:
 11333  070B  1803               	skipnc
 11334  070C  2F0E               	goto	u5791
 11335  070D  2F0F               	goto	u5790
 11336  070E                     u5791:
 11337  070E  2F18               	goto	l3677
 11338  070F                     u5790:
 11339  070F                     l3675:
 11340                           
 11341                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 11342  070F  1683               	bsf	3,5	;RP0=1, select bank1
 11343  0710  1303               	bcf	3,6	;RP1=0, select bank1
 11344  0711  0846               	movf	sprintf@prec^(0+128),w
 11345  0712  02B5               	subwf	sprintf@width^(0+128),f
 11346  0713  0847               	movf	(sprintf@prec+1)^(0+128),w
 11347  0714  1C03               	skipc
 11348  0715  03B6               	decf	(sprintf@width+1)^(0+128),f
 11349  0716  02B6               	subwf	(sprintf@width+1)^(0+128),f
 11350  0717  2F1C               	goto	l3679
 11351  0718                     l3677:
 11352                           
 11353                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 11354  0718  1683               	bsf	3,5	;RP0=1, select bank1
 11355  0719  1303               	bcf	3,6	;RP1=0, select bank1
 11356  071A  01B5               	clrf	sprintf@width^(0+128)
 11357  071B  01B6               	clrf	(sprintf@width+1)^(0+128)
 11358  071C                     l3679:
 11359                           
 11360                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 11361  071C  0836               	movf	(sprintf@width+1)^(0+128),w
 11362  071D  3A80               	xorlw	128
 11363  071E  3C80               	sublw	128
 11364  071F  1D03               	skipz
 11365  0720  2F23               	goto	u5805
 11366  0721  0835               	movf	sprintf@width^(0+128),w
 11367  0722  0248               	subwf	sprintf@c^(0+128),w
 11368  0723                     u5805:
 11369  0723  1803               	skipnc
 11370  0724  2F26               	goto	u5801
 11371  0725  2F27               	goto	u5800
 11372  0726                     u5801:
 11373  0726  2F33               	goto	l3683
 11374  0727                     u5800:
 11375  0727                     l3681:
 11376                           
 11377                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 11378  0727  1683               	bsf	3,5	;RP0=1, select bank1
 11379  0728  1303               	bcf	3,6	;RP1=0, select bank1
 11380  0729  0848               	movf	sprintf@c^(0+128),w
 11381  072A  00A9               	movwf	??_sprintf^(0+128)
 11382  072B  01AA               	clrf	(??_sprintf^(0+128)+1)
 11383  072C  0829               	movf	??_sprintf^(0+128),w
 11384  072D  02B5               	subwf	sprintf@width^(0+128),f
 11385  072E  082A               	movf	(??_sprintf+1)^(0+128),w
 11386  072F  1C03               	skipc
 11387  0730  03B6               	decf	(sprintf@width+1)^(0+128),f
 11388  0731  02B6               	subwf	(sprintf@width+1)^(0+128),f
 11389  0732  2F37               	goto	l3685
 11390  0733                     l3683:
 11391                           
 11392                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 11393  0733  1683               	bsf	3,5	;RP0=1, select bank1
 11394  0734  1303               	bcf	3,6	;RP1=0, select bank1
 11395  0735  01B5               	clrf	sprintf@width^(0+128)
 11396  0736  01B6               	clrf	(sprintf@width+1)^(0+128)
 11397  0737                     l3685:
 11398                           
 11399                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 11400  0737  0835               	movf	sprintf@width^(0+128),w
 11401  0738  0436               	iorwf	(sprintf@width+1)^(0+128),w
 11402  0739  1903               	btfsc	3,2
 11403  073A  2F3C               	goto	u5811
 11404  073B  2F3D               	goto	u5810
 11405  073C                     u5811:
 11406  073C  2F54               	goto	l3693
 11407  073D                     u5810:
 11408  073D                     l3687:
 11409                           
 11410                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 11411  073D  3020               	movlw	32
 11412  073E  00A9               	movwf	??_sprintf^(0+128)
 11413  073F  0845               	movf	sprintf@sp^(0+128),w
 11414  0740  0084               	movwf	4
 11415  0741  0829               	movf	??_sprintf^(0+128),w
 11416  0742  1383               	bcf	3,7	;select IRP bank0
 11417  0743  0080               	movwf	0
 11418  0744                     l3689:
 11419  0744  3001               	movlw	1
 11420  0745  00A9               	movwf	??_sprintf^(0+128)
 11421  0746  0829               	movf	??_sprintf^(0+128),w
 11422  0747  07C5               	addwf	sprintf@sp^(0+128),f
 11423  0748                     l3691:
 11424  0748  30FF               	movlw	255
 11425  0749  07B5               	addwf	sprintf@width^(0+128),f
 11426  074A  1803               	skipnc
 11427  074B  0AB6               	incf	(sprintf@width+1)^(0+128),f
 11428  074C  30FF               	movlw	255
 11429  074D  07B6               	addwf	(sprintf@width+1)^(0+128),f
 11430  074E  0835               	movf	sprintf@width^(0+128),w
 11431  074F  0436               	iorwf	(sprintf@width+1)^(0+128),w
 11432  0750  1D03               	btfss	3,2
 11433  0751  2F53               	goto	u5821
 11434  0752  2F54               	goto	u5820
 11435  0753                     u5821:
 11436  0753  2F3D               	goto	l3687
 11437  0754                     u5820:
 11438  0754                     l3693:
 11439                           
 11440                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 11441  0754  3003               	movlw	3
 11442  0755  0533               	andwf	sprintf@flag^(0+128),w
 11443  0756  00A9               	movwf	??_sprintf^(0+128)
 11444  0757  3000               	movlw	0
 11445  0758  0534               	andwf	(sprintf@flag+1)^(0+128),w
 11446  0759  00AA               	movwf	(??_sprintf+1)^(0+128)
 11447  075A  0829               	movf	??_sprintf^(0+128),w
 11448  075B  042A               	iorwf	(??_sprintf^(0+128)+1),w
 11449  075C  1903               	btfsc	3,2
 11450  075D  2F5F               	goto	u5831
 11451  075E  2F60               	goto	u5830
 11452  075F                     u5831:
 11453  075F  2FC9               	goto	l3705
 11454  0760                     u5830:
 11455  0760                     l3695:
 11456                           
 11457                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 11458  0760  302D               	movlw	45
 11459  0761  00A9               	movwf	??_sprintf^(0+128)
 11460  0762  0845               	movf	sprintf@sp^(0+128),w
 11461  0763  0084               	movwf	4
 11462  0764  0829               	movf	??_sprintf^(0+128),w
 11463  0765  1383               	bcf	3,7	;select IRP bank0
 11464  0766  0080               	movwf	0
 11465  0767                     l3697:
 11466  0767  3001               	movlw	1
 11467  0768  00A9               	movwf	??_sprintf^(0+128)
 11468  0769  0829               	movf	??_sprintf^(0+128),w
 11469  076A  07C5               	addwf	sprintf@sp^(0+128),f
 11470  076B  2FC9               	goto	l3705
 11471  076C                     l3699:
 11472                           
 11473                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
 11474  076C  3000               	movlw	0
 11475  076D  1283               	bcf	3,5	;RP0=0, select bank0
 11476  076E  1303               	bcf	3,6	;RP1=0, select bank0
 11477  076F  00A3               	movwf	___llmod@divisor+3
 11478  0770  3000               	movlw	0
 11479  0771  00A2               	movwf	___llmod@divisor+2
 11480  0772  3000               	movlw	0
 11481  0773  00A1               	movwf	___llmod@divisor+1
 11482  0774  300A               	movlw	10
 11483  0775  00A0               	movwf	___llmod@divisor
 11484  0776  1683               	bsf	3,5	;RP0=1, select bank1
 11485  0777  1303               	bcf	3,6	;RP1=0, select bank1
 11486  0778  0846               	movf	sprintf@prec^(0+128),w
 11487  0779  00A9               	movwf	??_sprintf^(0+128)
 11488  077A  3001               	movlw	1
 11489  077B                     u5845:
 11490  077B  1003               	clrc
 11491  077C  0DA9               	rlf	??_sprintf^(0+128),f
 11492  077D  3EFF               	addlw	-1
 11493  077E  1D03               	skipz
 11494  077F  2F7B               	goto	u5845
 11495  0780  1003               	clrc
 11496  0781  0D29               	rlf	??_sprintf^(0+128),w
 11497  0782  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11498  0783  0084               	movwf	4
 11499  0784  120A  118A  200D  120A  118A  	fcall	stringdir
 11500  0789  00F0               	movwf	___lldiv@divisor
 11501  078A  120A  118A  200D  120A  118A  	fcall	stringdir
 11502  078F  00F1               	movwf	___lldiv@divisor+1
 11503  0790  120A  118A  200D  120A  118A  	fcall	stringdir
 11504  0795  00F2               	movwf	___lldiv@divisor+2
 11505  0796  120A  118A  200D  120A  118A  	fcall	stringdir
 11506  079B  00F3               	movwf	___lldiv@divisor+3
 11507  079C  083E               	movf	(sprintf@val+3)^(0+128),w
 11508  079D  00F7               	movwf	___lldiv@dividend+3
 11509  079E  083D               	movf	(sprintf@val+2)^(0+128),w
 11510  079F  00F6               	movwf	___lldiv@dividend+2
 11511  07A0  083C               	movf	(sprintf@val+1)^(0+128),w
 11512  07A1  00F5               	movwf	___lldiv@dividend+1
 11513  07A2  083B               	movf	sprintf@val^(0+128),w
 11514  07A3  00F4               	movwf	___lldiv@dividend
 11515  07A4  160A  158A  2550  120A  118A  	fcall	___lldiv
 11516  07A9  0873               	movf	?___lldiv+3,w
 11517  07AA  1283               	bcf	3,5	;RP0=0, select bank0
 11518  07AB  1303               	bcf	3,6	;RP1=0, select bank0
 11519  07AC  00A7               	movwf	___llmod@dividend+3
 11520  07AD  0872               	movf	?___lldiv+2,w
 11521  07AE  00A6               	movwf	___llmod@dividend+2
 11522  07AF  0871               	movf	?___lldiv+1,w
 11523  07B0  00A5               	movwf	___llmod@dividend+1
 11524  07B1  0870               	movf	?___lldiv,w
 11525  07B2  00A4               	movwf	___llmod@dividend
 11526  07B3  160A  158A  24A1  120A  118A  	fcall	___llmod
 11527  07B8  1283               	bcf	3,5	;RP0=0, select bank0
 11528  07B9  1303               	bcf	3,6	;RP1=0, select bank0
 11529  07BA  0820               	movf	?___llmod,w
 11530  07BB  3E30               	addlw	48
 11531  07BC  1683               	bsf	3,5	;RP0=1, select bank1
 11532  07BD  1303               	bcf	3,6	;RP1=0, select bank1
 11533  07BE  00AA               	movwf	(??_sprintf+1)^(0+128)
 11534  07BF  082A               	movf	(??_sprintf+1)^(0+128),w
 11535  07C0  00C8               	movwf	sprintf@c^(0+128)
 11536  07C1                     l3701:
 11537                           
 11538                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
 11539  07C1  0848               	movf	sprintf@c^(0+128),w
 11540  07C2  00A9               	movwf	??_sprintf^(0+128)
 11541  07C3  0845               	movf	sprintf@sp^(0+128),w
 11542  07C4  0084               	movwf	4
 11543  07C5  0829               	movf	??_sprintf^(0+128),w
 11544  07C6  1383               	bcf	3,7	;select IRP bank0
 11545  07C7  0080               	movwf	0
 11546  07C8  2F67               	goto	l3697
 11547  07C9                     l3705:
 11548                           
 11549                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
 11550  07C9  30FF               	movlw	255
 11551  07CA  07C6               	addwf	sprintf@prec^(0+128),f
 11552  07CB  1803               	skipnc
 11553  07CC  0AC7               	incf	(sprintf@prec+1)^(0+128),f
 11554  07CD  30FF               	movlw	255
 11555  07CE  07C7               	addwf	(sprintf@prec+1)^(0+128),f
 11556  07CF  0A46               	incf	sprintf@prec^(0+128),w
 11557  07D0  1D03               	skipz
 11558  07D1  2FD6               	goto	u5851
 11559  07D2  0A47               	incf	(sprintf@prec+1)^(0+128),w
 11560  07D3  1D03               	btfss	3,2
 11561  07D4  2FD6               	goto	u5851
 11562  07D5  2FD7               	goto	u5850
 11563  07D6                     u5851:
 11564  07D6  2F6C               	goto	l3699
 11565  07D7                     u5850:
 11566  07D7                     l3707:
 11567                           
 11568                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 11569  07D7  3001               	movlw	1
 11570  07D8  07A0               	addwf	sprintf@f^(0+128),f
 11571  07D9  30FF               	movlw	-1
 11572  07DA  0720               	addwf	sprintf@f^(0+128),w
 11573  07DB  0084               	movwf	4
 11574  07DC  120A  118A  200D  120A  118A  	fcall	stringdir
 11575  07E1  00A9               	movwf	??_sprintf^(0+128)
 11576  07E2  0829               	movf	??_sprintf^(0+128),w
 11577  07E3  00C8               	movwf	sprintf@c^(0+128)
 11578  07E4  0848               	movf	sprintf@c^(0+128),w
 11579  07E5  1D03               	btfss	3,2
 11580  07E6  2FE8               	goto	u5861
 11581  07E7  2FEB               	goto	u5860
 11582  07E8                     u5861:
 11583  07E8  160A  118A  2D48   	goto	l3427
 11584  07EB                     u5860:
 11585  07EB                     l3709:
 11586                           
 11587                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 11588  07EB  0845               	movf	sprintf@sp^(0+128),w
 11589  07EC  0084               	movwf	4
 11590  07ED  1383               	bcf	3,7	;select IRP bank0
 11591  07EE  0180               	clrf	0
 11592  07EF                     l412:
 11593  07EF  0008               	return
 11594  07F0                     __end_of_sprintf:

Data Sizes:
    Strings     37
    Constant    144
    Data        0
    BSS         27
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      79
    BANK1            80     46      72
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_3(CODE[19]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> data(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    USART_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> data(BANK1[20]), STR_1(CODE[18]), 

    LCD_Texto@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_2(CODE[18]), data(BANK1[20]), 


Critical Paths under _main in COMMON

    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___llmod->___lldiv
    ___flsub->___xxtofl
    _USART_Write_String->_USART_Write
    _Slave3->___xxtofl
    _Slave2->_spiWrite
    _Slave1->_spiWrite
    _LCD_clear->_LCD_Comandos
    _LCD_Texto->_LCD_Caracter
    _LCD_Caracter->_Pines
    _LCD_Init->_LCD_Comandos
    _LCD_Cursor->_LCD_Comandos
    _LCD_Comandos->_Pines

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   33894
                                             41 BANK1      5     5      0
                         _LCD_Cursor
                           _LCD_Init
                          _LCD_Texto
                          _LCD_clear
                             _Slave1
                             _Slave2
                             _Slave3
                        _USART_Write
                 _USART_Write_String
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             46    37      9   31748
                                              0 BANK1     41    32      9
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7408
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    5871
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4393
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     767
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Write_String                                   4     2      2     264
                                              1 COMMON     4     2      2
                        _USART_Write
 ---------------------------------------------------------------------------------
 (2) _USART_Write                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Slave3                                               8     4      4     496
                                              0 BANK0      8     4      4
                           ___xxtofl
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
                            _spiRead (ARG)
 ---------------------------------------------------------------------------------
 (1) _Slave2                                               1     1      0      22
                                              1 COMMON     1     1      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _Slave1                                               1     1      0      22
                                              1 COMMON     1     1      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (2) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (3) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_clear                                            0     0      0     198
                       _LCD_Comandos
 ---------------------------------------------------------------------------------
 (1) _LCD_Texto                                            7     5      2     440
                                              3 COMMON     7     5      2
                       _LCD_Caracter
 ---------------------------------------------------------------------------------
 (2) _LCD_Caracter                                         2     2      0     198
                                              1 COMMON     2     2      0
                              _Pines
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                       _LCD_Comandos
 ---------------------------------------------------------------------------------
 (1) _LCD_Cursor                                           4     3      1     484
                                              4 COMMON     4     3      1
                       _LCD_Comandos
 ---------------------------------------------------------------------------------
 (2) _LCD_Comandos                                         3     3      0     198
                                              1 COMMON     3     3      0
                              _Pines
 ---------------------------------------------------------------------------------
 (3) _Pines                                                1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Cursor
     _LCD_Comandos
       _Pines
   _LCD_Init
     _LCD_Comandos
       _Pines
   _LCD_Texto
     _LCD_Caracter
       _Pines
   _LCD_clear
     _LCD_Comandos
       _Pines
   _Slave1
     _spiRead
       _spiReceiveWait
     _spiWrite
   _Slave2
     _spiRead
       _spiReceiveWait
     _spiWrite
   _Slave3
     ___xxtofl
       _spiRead (ARG)
         _spiReceiveWait
     _spiRead
       _spiReceiveWait
     _spiWrite
   _USART_Write
   _USART_Write_String
     _USART_Write
   _setup
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
         _spiRead (ARG)
           _spiReceiveWait
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
       _spiRead (ARG)
         _spiReceiveWait
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A5       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2E      48       7       90.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A5      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 23:12:14 2021

              ?_LCD_Caracter 0070                            pc 0002                  ?_LCD_Cursor 0074  
                _SSPSTATbits 0094                           l30 1BA9                           l31 1BAF  
                         l32 1BB0                           l41 1BCC                           l33 1BB6  
                         l25 1B98                           l34 1BB7                           l26 1B9B  
                         l50 19BE                           l35 1BBD                           l27 1BA1  
                         l36 1BBE                           l28 1BA2                           l44 19ED  
                         l37 1BC4                           l29 1BA8                           l53 1E88  
                         l38 1BC5                           l39 1BCB                           l47 1A0F  
                         l65 1C0E                           l59 1A33                 ___awdiv@sign 0021  
                         fsr 0004          ___wmul@multiplicand 0072          __Umul8_16@word_mpld 0076  
              ?_LCD_Comandos 0070                          l200 1992                          l211 1008  
                        l203 0805                          l140 1B26                          l134 1B54  
                        l143 012B                          l320 0C9E                          l137 1AFA  
                        l313 12B5                          l162 19A7                          l171 1ACE  
                        l412 07EF                          l165 19B1                          l342 1605  
                        l416 1A64                          l602 1C6F                          l610 1091  
                        l418 1A7C                          l603 1C8B                          l611 10AA  
                        l604 1CA0                          l452 1DB5                          l197 198C  
                        l382 04A7                          l607 1025                          l615 19A5  
                        l375 0463                          l633 1FFF                          l626 086C  
                        l634 1F71                          l722 1C52                          l619 0881  
                        l644 1FF2                          l732 1B8E                          l629 0881  
                        l637 1FC2                          l590 0902                          l582 1D4F  
                        l743 1319                          l903 19D0                          l672 1CF6  
                        l569 1E1E                          l586 093F                          l747 13C0  
                        l587 08A4                          l851 0FF3                          l764 148B  
                        l756 153D                          l860 1AA3                          l749 1397  
                        l597 0932                          l845 0F6B                          l774 14D1  
                        l839 0FFF                          l768 14AF                          l785 1531  
                        l777 150F                          l786 153D                          l858 1A91  
                        l883 1EAB                          l885 1F42                          l789 1A57  
                        l896 1F0C                          l897 1F18                          l889 1EF0  
                        _RD0 0040                          _RD1 0041                          _RD2 0042  
                        _RE0 0048                          _RD3 0043                          _RE1 0049  
                        _RD4 0044                          _RD5 0045                          _RD6 0046  
                        _RD7 0047                          fsr0 0004                          indf 0000  
               ___awmod@sign 0076                 ___flmul@aexp 0036                 ___flmul@bexp 0037  
               ___flmul@sign 0031                 ___flmul@temp 003C                 ___flmul@prod 0038  
               ___fltol@exp1 005B                         l3001 19C1                         l3011 1F43  
                       l3003 19C7                         l3101 090E                         l3013 1F56  
                       l3005 19CD                         l3111 0937                         l3103 0920  
                       l3031 1F92                         l3023 1F72                         l3007 19CF  
                       l3201 0831                         l3121 1A6B                         l3041 1FBC  
                       l3033 1F9B                         l3025 1F78                         l3017 1F5F  
                       l3203 0832                         l3131 1D60                         l3123 1A72  
                       l3115 1A58                         l3043 1FC6                         l3051 1FE0  
                       l3035 1FA9                         l3027 1F87                         l2411 1A9A  
                       l2403 1A7E                         l2421 1B9F                         l3301 1E1F  
                       l3205 083A                         l3141 1D8F                         l3133 1D63  
                       l3125 1A78                         l3117 1A5A                         l3109 0927  
                       l3037 1FB3                         l3029 1F89                         l2413 1A9F  
                       l2405 1A80                         l2501 1D20                         l2431 1BC2  
                       l2423 1BA6                         l3311 1E4D                         l3303 1E28  
                       l3223 0861                         l3215 0848                         l3207 083C  
                       l3143 1D9D                         l3135 1D70                         l3231 1CAB  
                       l3119 1A5E                         l3063 0882                         l3039 1FB4  
                       l2407 1A87                         l2503 1D24                         l2511 1D41  
                       l2433 1BC9                         l2425 1BAD                         l2417 1B90  
                       l3321 1E78                         l3313 1E53                         l3305 1E2E  
                       l3401 1B0B                         l3161 1C9F                         l3153 1C53  
                       l2601 1301                         l3225 0871                         l3209 0840  
                       l3217 085A                         l3145 1D9E                         l3137 1D74  
                       l3129 1D50                         l3241 1CDF                         l3233 1CAE  
                       l3081 08C0                         l3065 088F                         l3057 1FE7  
                       l3049 1FCE                         l2409 1A8B                         l2521 1C11  
                       l2441 1DBD                         l2513 1D46                         l2505 1D2E  
                       l2427 1BB4                         l2419 1B94                         l3331 1A22  
                       l3323 1E83                         l3315 1E5E                         l3307 1E3D  
                       l2435 198C                         l3403 1B1C                         l3411 00DD  
                       l3155 1C67                         l3171 1041                         l2611 131F  
                       l2603 1306                         l3251 1A38                         l3227 0876  
                       l3147 1DA7                         l3139 1D7D                         l3243 1CE8  
                       l3235 1CBB                         l3091 08F3                         l3083 08C9  
                       l3075 08A5                         l3059 1FF7                         l2531 1C29  
                       l2523 1C17                         l2451 1DD1                         l2443 1DC2  
                       l2515 1D4B                         l2507 1D34                         l2429 1BBB  
                       l3333 1A28                         l3325 1A11                         l3317 1E63  
                       l3309 1E42                         l3341 1BEC                         l3261 1EA3  
                       l3413 0108                         l3405 00CC                         l3421 1AB7  
                       l3157 1C83                         l3181 10A9                         l3173 1045  
                       l3165 1009                         l2701 1493                         l2621 1333  
                       l2613 1323                         l2605 130E                         l3149 1DAD  
                       l3237 1CBF                         l3245 1CEE                         l3229 1CA1  
                       l3093 08FC                         l3085 08D2                         l3077 08AD  
                       l3069 0898                         l2533 1C3A                         l2525 1C1A  
                       l2541 1C4E                         l2461 1DE7                         l2453 1DD3  
                       l2445 1DC4                         l2437 1DB6                         l2509 1D3B  
                       l3501 16DF                         l3335 1A2D                         l3327 1A16  
                       l3319 1E72                         l3343 1BF2                         l3271 1ECE  
                       l3263 1EB3                         l3255 1E8A                         l3407 00CF  
                       l3423 1ABB                         l3351 1B3A                         l3159 1C9D  
                       l3175 1069                         l3167 101D                         l2711 14AE  
                       l2703 1498                         l2631 1347                         l2623 1337  
                       l2615 1327                         l2607 130F                         l3239 1CD1  
                       l3095 0906                         l3087 08E4                         l3079 08BE  
                       l2535 1C40                         l2527 1C21                         l2519 1C0F  
                       l2551 1B65                         l2471 1E0A                         l2463 1DEB  
                       l2455 1DD9                         l2447 1DC8                         l2439 1DB9  
                       l3511 1771                         l3503 16E5                         l3431 1555  
                       l3329 1A1B                         l3337 1BCD                         l3281 1F02  
                       l3273 1ED5                         l3257 1E8F                         l3409 00D7  
                       l3417 1AA4                         l3361 1B41                         l3353 1B3B  
                       l3345 1B27                         l3177 106D                         l3169 1039  
                       l3185 199B                         l2713 14B3                         l2721 14BF  
                       l2641 135B                         l2633 134B                         l2625 133B  
                       l2617 132B                         l2609 1311                         l3249 1A34  
                       l3193 0806                         l3089 08F2                         l2801 0D03  
                       l2537 1C41                         l2529 1C25                         l2561 1B84  
                       l2553 1B69                         l2545 1B55                         l2465 1DFC  
                       l2457 1DDC                         l2473 1E10                         l2449 1DCD  
                       l2481 1CF7                         l3601 04B0                         l3521 01EA  
                       l3513 178C                         l3505 1704                         l3441 1587  
                       l3433 155A                         l3425 1541                         l3339 1BD0  
                       l3291 1F35                         l3283 1F06                         l3275 1ED9  
                       l3267 1EBC                         l3259 1E93                         l3419 1AA6  
                       l3371 1B4A                         l3363 1B44                         l3355 1B3C  
                       l3347 1B38                         l3179 10A7                         l3187 19A3  
                       l2715 14B6                         l2707 14A1                         l2723 14C3  
                       l2651 139B                         l2643 135F                         l2635 134F  
                       l2627 133F                         l2619 132F                         l2571 12C3  
                       l3195 0813                         l2811 0D46                         l2539 1C48  
                       l2555 1B6D                         l2547 1B5B                         l2563 1B8A  
                       l2475 1E15                         l2467 1E02                         l2459 1DE3  
                       l2491 1D07                         l2483 1CF8                         l3611 0539  
                       l3603 04B5                         l3531 025F                         l3523 0205  
                       l3507 174F                         l3515 1794                         l3451 15BD  
                       l3443 159A                         l3435 155E                         l3427 1548  
                       l2901 19D2                         l3293 1F39                         l3285 1F10  
                       l3277 1EE7                         l3269 1EC1                         l3381 1B51  
                       l3373 1B4B                         l3365 1B47                         l3357 1B3D  
                       l3349 1B39                         l3189 19A5                         l2741 150B  
                       l2733 14D6                         l2725 14C4                         l2717 14B8  
                       l2709 14AA                         l2661 13B4                         l2653 13A4  
                       l2637 1353                         l2629 1343                         l2645 1363  
                       l2581 12DA                         l2573 12C7                         l2821 0DCF  
                       l2813 0D62                         l2805 0D0C                         l2557 1B77  
                       l2549 1B5E                         l2477 1E1A                         l2469 1E03  
                       l2493 1D0C                         l2485 1CFC                         l3701 07C1  
                       l3621 0622                         l3613 0574                         l3605 04BC  
                       l3533 0267                         l3525 022C                         l3541 02AD  
                       l3517 17A3                         l3509 1768                         l3461 15F0  
                       l3453 15C1                         l3445 159E                         l3437 156E  
                       l3429 154E                         l2911 19E5                         l2903 19D5  
                       l3391 1ADF                         l3295 1F3A                         l3287 1F1A  
                       l3279 1EF7                         l3383 1B52                         l3375 1B4C  
                       l3367 1B48                         l3359 1B3E                         l2751 1527  
                       l2743 1514                         l2735 14DB                         l2727 14C8  
                       l2719 14BD                         l2671 13D2                         l2655 13A6  
                       l2663 13B8                         l2647 1364                         l2639 1357  
                       l2591 12F0                         l2583 12DB                         l2575 12C8  
                       l2567 12B6                         l3199 081C                         l2831 0E42  
                       l2823 0DDF                         l2815 0D8E                         l2807 0D1C  
                       l2559 1B7D                         l2495 1D12                         l2487 1D01  
                       l3631 064B                         l3623 0629                         l3615 05B3  
                       l3607 04C0                         l3543 02E2                         l3535 0285  
                       l3527 023B                         l3519 17EA                         l3471 1629  
                       l3455 15C4                         l3463 1601                         l3439 1572  
                       l3447 15AE                         l2921 19FB                         l2913 19E9  
                       l2905 19DB                         l3393 1AF0                         l3385 1ACF  
                       l3289 1F30                         l3377 1B4D                         l3369 1B49  
                       l2753 152B                         l2745 1519                         l2737 14E9  
                       l2729 14CE                         l2681 13FC                         l2673 13E9  
                       l2665 13C4                         l2657 13AA                         l2649 137B  
                       l2593 12F1                         l2577 12CD                         l2585 12DD  
                       l2569 12BD                         l2841 0EEF                         l2833 0E5F  
                       l2825 0DFC                         l2817 0DAA                         l2809 0D29  
                       l2761 0C9F                         l2497 1D15                         l2489 1D03  
                       l3705 07C9                         l3641 0668                         l3633 064F  
                       l3625 062D                         l3617 05BF                         l3609 04DE  
                       l3561 038F                         l3553 0333                         l3545 032F  
                       l3529 0256                         l3481 1651                         l3473 1637  
                       l3465 1603                         l3457 15D9                         l3449 15BC  
                       l3721 0131                         l2923 19FF                         l2915 19EF  
                       l2907 19DE                         l3299 19B2                         l2931 1000  
                       l3387 1AD2                         l3395 1AFB                         l3379 1B50  
                       l2755 152D                         l2747 1521                         l2739 14ED  
                       l2691 1425                         l2683 1400                         l2675 13ED  
                       l2667 13C9                         l2659 13AB                         l2595 12F7  
                       l2587 12E5                         l2579 12D2                         l2851 0F3B  
                       l2843 0F17                         l2835 0E8C                         l2827 0E0C  
                       l2819 0DC6                         l2771 0CB6                         l2763 0CA6  
                       l2499 1D1C                         l3651 0678                         l3643 0670  
                       l3635 0653                         l3627 0633                         l3619 061A  
                       l3563 0395                         l3547 0331                         l3539 02A4  
                       l3491 16A4                         l3483 166A                         l3475 163B  
                       l3459 15EC                         l3707 07D7                         l3731 014A  
                       l3723 0136                         l2925 1A02                         l2917 19F2  
                       l2909 19E2                         l2933 1005                         l3389 1AD9  
                       l3397 1AFE                         l2757 1538                         l2749 1526  
                       l2693 1463                         l2685 1401                         l2677 13F1  
                       l2597 12FB                         l2589 12EA                         l2861 0F50  
                       l2853 0F3C                         l2845 0F20                         l2837 0E9C  
                       l2829 0E29                         l2781 0CD2                         l2773 0CBB  
                       l2765 0CAC                         l2941 10AE                         l3661 06CB  
                       l3645 0676                         l3637 0657                         l3581 03DD  
                       l3565 03A1                         l3573 03B6                         l3557 036A  
                       l3493 16AF                         l3485 1683                         l3477 163F  
                       l3629 063A                         l3709 07EB                         l3469 1607  
                       l3741 016E                         l3733 0153                         l3725 013B  
                       l2927 1A06                         l2919 19F8                         l3399 1B05  
                       l2759 153C                         l2695 1469                         l2687 140A  
                       l2679 13FA                         l2599 12FC                         l2871 0F75  
                       l2863 0F54                         l2855 0F45                         l2847 0F2E  
                       l2839 0EC9                         l2791 0CE7                         l2783 0CD8  
                       l2775 0CC3                         l2767 0CB0                         l2951 11C7  
                       l2943 10B4                         l3671 06FD                         l3663 06DA  
                       l3655 06AF                         l3639 0662                         l3591 0478  
                       l3583 0418                         l3575 03C3                         l3567 03A8  
                       l3559 0374                         l3495 16B5                         l3487 1687  
                       l3479 164D                         l3751 01B5                         l3743 0182  
                       l3735 0159                         l3727 0140                         l3719 012C  
                       l2929 0801                         l2937 19A7                         l2697 146E  
                       l2689 140F                         l2881 0FB3                         l2873 0F83  
                       l2865 0F68                         l2849 0F37                         l2857 0F4B  
                       l2793 0CEF                         l2785 0CDC                         l2777 0CC5  
                       l2769 0CB1                         l2961 0947                         l3681 0727  
                       l3673 0701                         l3665 06E3                         l3657 06B9  
                       l3593 047E                         l3585 0457                         l3577 03D1  
                       l3569 03B1                         l3497 16C8                         l3489 168B  
                       l3753 01D5                         l3745 0187                         l3737 015F  
                       l3729 0145                         l2939 19AD                         l2699 147D  
                       l2891 0FE7                         l2883 0FBE                         l2875 0F87  
                       l2859 0F4F                         l2795 0CF1                         l2787 0CDD  
                       l2779 0CCD                         l2955 1272                         l2971 0A38  
                       l2963 0949                         l3691 0748                         l3683 0733  
                       l3675 070F                         l3667 06EB                         l3659 06C4  
                       l3595 048B                         l3587 046B                         l3579 03D8  
                       l3499 16DB                         l3755 01DD                         l3747 018F  
                       l3739 0168                         l2893 0FEB                         l2885 0FCD  
                       l2877 0FA0                         l2869 0F70                         l2797 0CF9  
                       l2789 0CE2                         l2949 11C1                         l2973 0A3F  
                       l2965 0950                         l2981 0AF4                         l3693 0754  
                       l3685 0737                         l3677 0718                         l3669 06F7  
                       l3597 049A                         l3589 0474                         l3749 0198  
                       l2895 0FEC                         l2887 0FD7                         l2879 0FA6  
                       l2799 0CFE                         l2991 0BEA                         l2983 0AFB  
                       l2959 0943                         l3695 0760                         l3687 073D  
                       l3679 071C                         l3599 04A1                         l2897 0FF7  
                       l2889 0FD9                         l2977 0AC7                         l3697 0767  
                       l3689 0744                         l2995 0C72                         l3699 076C  
                       l3787 161B                         l2989 0BE3                         l2999 19C0  
                       STR_1 00B6                         STR_2 00B6                         STR_3 00A3  
                       u3000 1BA6                         u3001 1BA5                         u3010 1BAD  
                       u3011 1BAC                         u3020 1BB4                         u3021 1BB3  
                       u3030 1BBB                         u3110 1DEB                         u3031 1BBA  
                       u3111 1DEA                         _LEDS 00D2                         u3040 1BC2  
                       u3041 1BC1                         u3105 1DDD                         u3050 1BC9  
                       u3130 1DFC                         u3210 1D24                         u3051 1BC8  
                       u4011 0E51                         u3131 1DFB                         u3211 1D23  
                       u3060 1992                         u4100 0F3B                         u4012 0E58  
                       u3300 1C3A                         u3220 1D2E                         u3061 1991  
                       u4101 0F3A                         u4021 0E7E                         u4013 0E5F  
                       u4005 0E2B                         u3301 1C39                         u3125 1DEC  
                       u3221 1D2D                         u3205 1D16                         u4022 0E85  
                       u3150 1E10                         u3070 1DBD                         u4031 0EAB  
                       u4023 0E8C                         u3151 1E0F                         u3135 1DF8  
                       u3071 1DBC                         u3400 12CD                         u5000 0840  
                       u4200 0FCD                         u4120 0F4F                         u4040 0ED5  
                       u4032 0EB2                         u3320 1C4E                         u3160 1E15  
                       u3080 1DC8                         u3240 1D41                         u3401 12CC  
                       u5001 083F                         u4201 0FCC                         u4121 0F4E  
                       u4033 0EB9                         u3321 1C4D                         u3305 1C36  
                       u3161 1E14                         u3145 1E04                         u3081 1DC7  
                       u3241 1D40                         u3225 1D2A                         u3410 12D2  
                       u5010 0847                         u4210 0FEB                         u4130 0F54  
                       u3330 1B5B                         u3090 1DD9                         u3250 1D46  
                       u3170 1CFC                         u3411 12D1                         u5011 0846  
                       u4211 0FEA                         u4131 0F53                         u4115 0F3E  
                       u4051 0EE1                         u3315 1C42                         u3331 1B5A  
                       u3091 1DD8                         u3251 1D45                         u3235 1D35  
                       u3171 1CFB                         u4220 19AD                         u3500 1387  
                       u3420 12F0                         u5100 1CBF                         u4140 0F68  
                       u4060 0EFD                         u4052 0EE8                         u3260 1C17  
                       u3180 1D07                         u4221 19AC                         u3421 12EF  
                       u5101 1CBE                         u4205 0FC9                         u4141 0F67  
                       u4053 0EEF                         u4045 0ED0                         u3261 1C16  
                       u3181 1D06                         u3510 139B                         u3430 12FB  
                       u5030 0859                         u5110 1CD1                         u4150 0F6F  
                       u3350 1B6D                         u4230 10B4                         u3190 1D12  
                       u4310 0947                         u3511 139A                         u3431 12FA  
                       u5031 0858                         u5111 1CD0                         u4151 0F6E  
                       u4071 0F09                         u3351 1B6C                         u4231 10B3  
                       u3191 1D11                         u4311 0946                         u5200 1EF6  
                       u3600 1400                         u3520 13AA                         u3440 1301  
                       u5040 0860                         u4160 0F75                         u4072 0F10  
                       u3280 1C29                         u3360 1B77                         u4400 0AFB  
                       u4320 0950                         u5201 1EF5                         u3601 13FF  
                       u3521 13A9                         u3441 1300                         u5041 085F  
                       u5025 0849                         u4161 0F74                         u4073 0F17  
                       u4065 0EF8                         u3281 1C28                         u3361 1B76  
                       u3345 1B5F                         u4305 127D                         u4401 0AFA  
                       u4321 094F                         u3450 1306                         u5130 1CEE  
                       u4170 0F87                         u3451 1305                         u5131 1CED  
                       u5115 1CCD                         u4171 0F86                         u3275 1C1B  
                       u5300 1BDA                         u5220 1F06                         u5140 1E8F  
                       u3700 14B3                         u3620 1425                         u3540 13C0  
                       u3460 131F                         u5060 0871                         u4500 1F56  
                       u4180 0F96                         u3380 1B8A                         u5221 1F05  
                       u5141 1E8E                         u3701 14B2                         u3621 1424  
                       u3541 13BF                         u3461 131E                         u5061 0870  
                       u5125 1CE0                         u4501 1F55                         u4085 0F19  
                       u3381 1B89                         u3365 1B73                         u4245 10D1  
                       u5310 1BFC                         u5230 1F0C                         u5150 1E93  
                       u3710 14BD                         u3550 13C4                         u3470 1323  
                       u3390 12C7                         u5070 0876                         u4510 1F70  
                       u4190 0FB3                         u4270 11C7                         u6007 1E23  
                       u5231 1F0B                         u5215 1EFB                         u5151 1E92  
                       u3711 14BC                         u3631 143C                         u3623 1421  
                       u3615 1403                         u3551 13C3                         u3535 13AD  
                       u3471 1322                         u3391 12C6                         u5071 0875  
                       u5055 0863                         u4511 1F6F                         u4191 0FB2  
                       u4095 0F30                         u3295 1C2A                         u3375 1B7E  
                       u4271 11C6                         u4255 112B                         u4415 0B1B  
                       u4335 0970                         u5320 1C0E                         u5240 1F10  
                       u5160 1EB3                         u3800 1514                         u3720 14C3  
                       u3640 1450                         u3632 143D                         u3560 13C9  
                       u3480 137B                         u5080 1CAB                         u4600 1FE6  
                       u4440 0BEA                         u4360 0A3F                         u5400 163B  
                       u6017 1E32                         u5321 1C0D                         u5241 1F0F  
                       u5161 1EB2                         u3801 1513                         u3721 14C2  
                       u3641 1451                         u3633 1442                         u3561 13C8  
                       u3481 137A                         u5081 1CAA                         u4601 1FE5  
                       u4185 0F91                         u4265 1180                         u4441 0BE9  
                       u4425 0B57                         u4361 0A3E                         u4345 09AC  
                       u5401 163A                         u5250 1F25                         u5330 1ACE  
                       u3810 1519                         u3730 14C8                         u3650 146E  
                       u3642 1456                         u3634 1443                         u3490 1386  
                       u4530 1FA9                         u5410 166A                         u6107 1A04  
                       u6027 1E3F                         u5331 1ACD                         u3811 1518  
                       u3731 14C7                         u3651 146D                         u3643 1457  
                       u3635 1448                         u3571 13DB                         u3491 1384  
                       u4531 1FA8                         u4195 0FAF                         u4435 0BA2  
                       u4355 09F7                         u5411 1669                         u5260 1F35  
                       u5180 1ED4                         u3820 1526                         u3740 14CE  
                       u3660 1493                         u3636 1449                         u3580 13ED  
                       u3572 13E2                         u4700 090D                         u4620 1FF7  
                       u3900 0CE7                         u5500 023B                         u5420 16A4  
                       u5340 154E                         u6117 1A0A                         u6037 1E4A  
                       u5261 1F34                         u5181 1ED3                         u3821 1525  
                       u3741 14CD                         u3661 1492                         u3581 13EC  
                       u3573 13E9                         u3485 1377                         u4701 090C  
                       u4621 1FF6                         u4525 1F94                         u3901 0CE6  
                       u4285 11E4                         u5501 023A                         u5421 16A3  
                       u5341 154D                         u5270 1F39                         u3830 152B  
                       u3750 14D5                         u3670 1498                         u3590 13F1  
                       u4630 088F                         u4550 1FC2                         u2950 1A8B  
                       u3910 0CFE                         u5510 0256                         u5430 16DF  
                       u5350 156E                         u6047 1E55                         u5271 1F38  
                       u5255 1F20                         u5175 1EC6                         u3831 152A  
                       u3751 14D4                         u3671 1497                         u3591 13F0  
                       u5095 1CB0                         u4631 088E                         u4615 1FE9  
                       u4551 1FC1                         u4535 1FA5                         u2951 1A8A  
                       u3911 0CFD                         u4295 1231                         u4455 0BFD  
                       u4375 0A52                         u5511 0255                         u5431 16DE  
                       u5351 156D                         u5280 1A16                         u3840 153C  
                       u3760 14DB                         u4800 1D60                         u4720 091F  
                       u4640 08A3                         u4560 1FC6                         u3920 0D03  
                       u4480 19C7                         u5600 046A                         u5440 1768  
                       u5360 15AE                         u5281 1A15                         u6057 1E60  
                       u3841 153B                         u3761 14DA                         u4801 1D5F  
                       u4721 091E                         u4641 08A2                         u4561 1FC5  
                       u4545 1FB5                         u3921 0D02                         u4481 19C6  
                       u4465 0C39                         u4385 0A8E                         u5601 0469  
                       u5505 0237                         u5441 1767                         u5361 15AD  
                       u5290 1A28                         u3770 14ED                         u3690 14AE  
                       u4730 0926                         u4570 1FCD                         u2970 1A9F  
                       u3850 0CB0                         u4490 19CD                         u5610 048B  
                       u5530 0369                         u5450 178C                         u5370 15BC  
                       u5291 1A27                         u6067 1E6D                         u5195 1EE8  
                       u3771 14EC                         u3691 14AD                         u4731 0925  
                       u4715 090F                         u4571 1FCC                         u2971 1A9E  
                       u3931 0D54                         u3851 0CAF                         u4491 19CC  
                       u4475 0C75                         u4395 0ACA                         u5611 048A  
                       u5531 0368                         u5451 178B                         u5371 15BB  
                       u2980 1B94                         u4900 101D                         u3780 14FC  
                       u4820 1D74                         u4660 08E4                         u3932 0D5B  
                       u3860 0CB6                         u5700 0670                         u5620 049A  
                       u5540 0374                         u5460 17A3                         u5380 1600  
                       _RCIF 0065                         u2981 1B93                         u6077 1E7A  
                       u4901 101C                         u3685 14A3                         u4821 1D73  
                       u4661 08E3                         u2965 1A92                         u3941 0D70  
                       u3933 0D62                         u3861 0CB5                         u5701 066F  
                       u5621 0499                         u5541 0373                         u5525 0336  
                       u5461 17A2                         u5381 15FF                         u2990 1B9F  
                       u4910 1039                         u3790 150B                         u4750 0937  
                       u4590 1FDF                         u3942 0D77                         u3870 0CBB  
                       u5630 04B5                         u5550 038F                         u5470 01EA  
                       u5390 1637                         u2991 1B9E                         u6087 1E85  
                       u4911 1038                         u3791 150A                         u4815 1D65  
                       u4751 0936                         u4655 08CB                         u4591 1FDE  
                       u3951 0D9C                         u3943 0D7E                         u3871 0CBA  
                       u5631 04B4                         u5615 0487                         u5551 038E  
                       u5535 0365                         u5471 17FA                         u5391 1634  
                       u4920 1045                         u4840 1D8F                         u4760 1A5E  
                       u4680 0902                         u3952 0DA3                         u3880 0CDC  
                       u5800 0727                         u5720 06AE                         u5560 03A1  
                       u5480 0205                         u6097 19FD                         u4921 1044  
                       u3785 14F7                         u4841 1D8E                         u4761 1A5D  
                       u4745 0929                         u4681 0901                         u4665 08E0  
                       u4585 1FCF                         u3961 0DB8                         u3953 0DAA  
                       u3881 0CDB                         u5801 0726                         u5721 06AD  
                       u5625 0496                         u5561 03A0                         u5481 0204  
                       u5465 179F                         u4690 0906                         u3962 0DBF  
                       u3890 0CE2                         u5810 073D                         u5730 06B9  
                       u5570 03C3                         u5490 022C                         u4931 1054  
                       u4835 1D76                         u4691 0905                         u4675 08F5  
                       u3963 0DC6                         u3891 0CE1                         u5811 073C  
                       u5731 06B8                         u5715 067B                         u5571 03C2  
                       u5491 022B                         u5475 17F5                         u4940 106D  
                       u4932 1055                         u4860 1DAD                         u5820 0754  
                       u5740 06C4                         u5660 0621                         u5580 03D1  
                       u4941 106C                         u4933 105A                         u4861 1DAC  
                       u4845 1D8B                         u3981 0DEE                         u5821 0753  
                       u5805 0723                         u5741 06C3                         u5725 06AA  
                       u5661 0620                         u5645 053C                         u5581 03D0  
                       u4870 1C67                         u4934 105B                         u4790 1A78  
                       u3982 0DF5                         u5830 0760                         u5750 06DA  
                       u5670 0639                         u4871 1C66                         u4951 107C  
                       u4935 1060                         u4855 1D9F                         u4791 1A77  
                       u4775 1A65                         u3991 0E1B                         u3983 0DFC  
                       u3975 0DC8                         u5831 075F                         u5751 06D9  
                       u5671 0638                         u5655 05C2                         u5575 03BF  
                       u4880 1C83                         u4960 10A7                         u4952 107D  
                       u4936 1061                         u3992 0E22                         u5760 06EB  
                       u5680 0653                         u4881 1C82                         u4961 10A6  
                       u4953 1082                         u4785 1A6C                         u3993 0E29  
                       u5761 06EA                         u5745 06C0                         u5681 0652  
                       u4890 1C9D                         u4954 1083                         u4970 19A3  
                       u5850 07D7                         u5770 06F7                         u5690 0668  
                       u5907 010F                         u4891 1C9C                         u4955 1088  
                       u4971 19A2                         u5851 07D6                         u5771 06F6  
                       u5755 06D6                         u5691 0667                         u5595 03E0  
                       u4956 1089                         u4980 0813                         u5860 07EB  
                       u5780 0701                         u5917 1B00                         u4965 10A3  
                       u4981 0812                         u5861 07E8                         u5845 077B  
                       u5781 0700                         u4990 082A                         u5790 070F  
                       u5927 1B17                         u4895 1C99                         u5791 070E  
                       u5937 1B21                         u5947 1AD4                         u4995 0825  
                       u5795 070B                         u5957 1AEB                         u5877 017C  
                       u5967 1AF5                         u5887 00D3                         u5977 19E0  
                       u5897 0104                         u5987 19E7                         u5997 19EB  
                       _TEMP 00CE                         _TRMT 04C1                         _data 00D4  
__size_of_USART_Write_String 002B                         _main 012C                         btemp 007E  
         __size_of_LCD_Texto 0042                         start 0000           __size_of_LCD_clear 000D  
               _sprintf$1171 00AE                  LCD_Cursor@a 0077                  LCD_Cursor@x 0076  
                LCD_Cursor@y 0074               ??_LCD_Caracter 0071             __end_of_LCD_Init 1E89  
             ??_LCD_Comandos 0071                ___fltol@sign1 005A              __end_of___fladd 153E  
                      ?_main 0070              __end_of___awdiv 1E1F              __end_of___flneg 19A6  
            __end_of___awmod 1D50              __end_of___flmul 1000              __end_of___flsub 1A58  
            __end_of___fltol 0882                        _ANSEL 0188              __end_of___lldiv 1DB6  
            ___awdiv@divisor 0077              __end_of___llmod 1CF7              __end_of___lwdiv 1C53  
            __end_of___lwmod 1B8F              ___awdiv@counter 0020                        _RCREG 001A  
                      _PORTA 0005                        _PORTB 0006                        _PORTD 0008  
                      _PORTE 0009                        _TRISA 0085                        _TRISB 0086  
                      _TRISC 0087                        _TRISD 0088                        _TRISE 0089  
                      _TXREG 0019                        _V_ADC 00D3                        _Pines 1B8F  
                      _cont0 006E              __end_of_dpowers 00A3                        _scale 0940  
            __end_of_isdigit 19D1                        _setup 1B27          __size_of_LCD_Cursor 0024  
                      pclath 000A              __end_of_spiRead 1009                        status 0003  
                      wtemp0 007E              __end_of_sprintf 07F0                 USART_Write@a 0070  
            __initialization 07F0                 __end_of_main 01EA                       ??_main 00C9  
       __size_of__tdiv_to_l_ 00BD            __end_of_LCD_Texto 1C0F            __end_of_LCD_clear 19BF  
                     ?_Pines 0070                LCD_Caracter@a 0072             ___llmod@dividend 0024  
                     ?_scale 003E             ___awdiv@dividend 0079                       ?_setup 0070  
                     _ANSELH 0189                       _TRISC3 043B                       _TRISC5 043D  
                     _SSPCON 0014                       _SSPBUF 0013             __end_of___xxtofl 1F43  
                     Pines@x 0070                       _Slave1 1ACF                       _Slave2 1AFB  
                     _Slave3 00CC             __end_of__powers_ 0047                       ___flge 1009  
                     ___fleq 1C53                    ??___fladd 005A                       ___wmul 1A58  
                  ??___awdiv 007B                    ??___flneg 0074                    ??___awmod 0074  
                  ??___flmul 002C                    ??___flsub 007E                    ??___fltol 0055  
                  ??___lldiv 0078                    ??___llmod 0028                    ??___lwdiv 007A  
                  ??___lwmod 0074                       _fround 10AB             ___awdiv@quotient 0022  
            ___awmod@divisor 0070              ___awmod@counter 0075                LCD_Comandos@x 0073  
                  ??_isdigit 0070           __size_of__Umul8_16 0027             __end_of_spiWrite 0806  
                  ??_spiRead 0070         __end_of_LCD_Caracter 19EE                    ??_sprintf 00A9  
                 ___flge@ff1 0070                   ___flge@ff2 0074                 ___xxtofl@arg 007A  
               ___xxtofl@exp 0079                 ___xxtofl@val 0070                   ___fleq@ff1 0070  
                 ___fleq@ff2 0074      __end_of__initialization 07FC                    ?_LCD_Init 0070  
       __end_of_LCD_Comandos 1A10                   ___flneg@f1 0070                   ___fltol@f1 0051  
               ?_USART_Write 0070               __pcstackCOMMON 0070                __end_of_Pines 1BCD  
               ??_LCD_Cursor 0075                __end_of_scale 0C9F                __end_of_setup 1B55  
                 __div_to_l_ 0882                      ??_Pines 0070              __div_to_l_@exp1 0025  
            __div_to_l_@cntr 0024                      ??_scale 0042              __div_to_l_@quot 0020  
               sprintf@width 00B5                      ??_setup 0070                   __pbssBANK0 006E  
                 __pbssBANK1 00CE           __end_of_LCD_Cursor 1A34                   ??_LCD_Init 0074  
              __div_to_l_@f1 0070                __div_to_l_@f2 0074            __end_of__Umul8_16 1AA4  
                    ?_Slave1 0070                      ?_Slave2 0070                      ?_Slave3 0020  
                 __pmaintext 012C                      ?___flge 0070                      ?___fleq 0070  
                    ?___wmul 0070      __size_of_spiReceiveWait 0007                      ?_fround 003E  
                  ?___xxtofl 0070                      _SSPSTAT 0094   __end_of_USART_Write_String 1ACF  
                 __stringtab 0003            __end_of__npowers_ 007B                   _scale$1170 004C  
            __size_of_Slave1 002C              __size_of_Slave2 002C              __size_of_Slave3 0060  
                  ?_spiWrite 0070              __size_of___flge 00A2              __size_of___fleq 004E  
                    ___fladd 12B6                      ___awdiv 1DB6                      ___flneg 199B  
                    ___awmod 1CF7                      ___flmul 0C9F                      ___flsub 1A34  
                    ___fltol 0806                      ___lldiv 1D50              __size_of___wmul 0025  
                    ___llmod 1CA1                      ___lwdiv 1C0F                      ___lwmod 1B55  
            __size_of_fround 020B                      __ptext1 153E                      __ptext2 0940  
                    __ptext3 1CF7                      __ptext4 1DB6                      __ptext5 19BF  
                    __ptext6 10AB                      __ptext7 1B55                      __ptext8 1C0F  
                    __ptext9 0C9F                  ?__div_to_l_ 0070                      _dpowers 007B  
      __size_of_LCD_Caracter 001D                      _isdigit 19BF                   ??___xxtofl 0074  
           ___awmod@dividend 0072                      _spiRead 1000        __size_of_LCD_Comandos 0022  
                    _sprintf 153E                    _LCD_Texto 1BCD                      clrloop0 1994  
                  _LCD_clear 19B2         end_of_initialization 07FC              ___lldiv@divisor 0070  
            ___lldiv@counter 007D                    _RCSTAbits 0018                   ??_spiWrite 0070  
                    psplit$0 B0032         __size_of_USART_Write 000C                 _LCD_Caracter 19D1  
             __tdiv_to_l_@f1 0070               __tdiv_to_l_@f2 0074                ??__tdiv_to_l_ 0078  
                  _PORTCbits 0007                 _LCD_Comandos 19EE                  ___fladd@grs 0065  
              ___xxtofl@sign 0078                   ?_LCD_Texto 0073                  spiWrite@dat 0070  
                 ?_LCD_clear 0070                  ___flmul@grs 0032                    _TXSTAbits 0098  
          __size_of_LCD_Init 006A          __size_of__div_to_l_ 00BE               __end_of_Slave1 1AFB  
             __end_of_Slave2 1B27               __end_of_Slave3 012C               _spiReceiveWait 198C  
             __end_of___flge 10AB               __end_of___fleq 1CA1                   LCD_Texto@a 0073  
                 LCD_Texto@i 0078               __end_of___wmul 1A7D            pnum$text1_split_1 0032  
             __end_of_fround 12B6          start_initialization 07F0          __end_of__tdiv_to_l_ 2000  
            ___llmod@divisor 0020              ___llmod@counter 0029                     ??_Slave1 0071  
                   ??_Slave2 0071                     ??_Slave3 0024       __end_of_spiReceiveWait 1993  
                   ??___flge 0078                     ??___fleq 0078                     ??___wmul 0074  
                  __Umul8_16 1A7D                     ??_fround 0042                sprintf@tmpval 00B7  
                  ___fladd@a 0056                    ___fladd@b 0052                   fround@prec 0051  
                  ___flmul@a 0028                    ___flmul@b 0024                    ___flsub@a 0066  
                  ___flsub@b 006A                    ___latbits 0002                __pcstackBANK0 0020  
              __pcstackBANK1 00A0            __size_of___xxtofl 00BA                  ??_LCD_Texto 0075  
                ??_LCD_clear 0074                  sprintf@flag 00B3                  sprintf@eexp 00BF  
                sprintf@fval 00C1                  sprintf@prec 00C6             ___lwdiv@dividend 0078  
            ?_spiReceiveWait 0070           _USART_Write_String 1AA4                     ?___fladd 0052  
                   ?___awdiv 0077                     ?___flneg 0070                     ?___awmod 0070  
                   ?___flmul 0024                     ?___flsub 0066                     ?___fltol 0051  
                   ?___lldiv 0070                     ?___llmod 0020                    __npowers_ 0047  
                 ?__Umul8_16 0070                     ?___lwdiv 0076                     ?___lwmod 0070  
          __size_of_spiWrite 0006                    __pstrings 0003          ?_USART_Write_String 0071  
                __tdiv_to_l_ 1F43                 ??__div_to_l_ 0078                     ?_isdigit 0070  
                   ?_spiRead 0070               __size_of_Pines 003E             ___lwdiv@quotient 007B  
                   ?_sprintf 00A0               __size_of_scale 035F               __size_of_setup 002E  
       ??_USART_Write_String 0073                     _LCD_Init 1E1F               ___wmul@product 0074  
                  clear_ram0 1993                     _PIE1bits 008C                     _PIR1bits 000C  
         __end_of__div_to_l_ 0940                  __stringbase 0012            ___wmul@multiplier 0070  
              ??_USART_Write 0070                  ??__Umul8_16 0072             __size_of___fladd 0288  
           __size_of___awdiv 0069             __size_of___flneg 000B             __size_of___awmod 0059  
           __size_of___flmul 0361             __size_of___flsub 0024             __size_of___fltol 007C  
           __size_of___lldiv 0066             __size_of___llmod 0056             __size_of___lwdiv 0044  
           __size_of___lwmod 003A                  _fround$1168 004D                  _fround$1169 0049  
         __end_of__stringtab 0013                  _isdigit$969 0070                   sprintf@val 00BB  
                   ___xxtofl 1E89             __size_of_isdigit 0012              ___lwdiv@divisor 0076  
            ___lwdiv@counter 007D                     __ptext10 1A7D                     __ptext11 1F43  
                   __ptext20 1009                     __ptext12 0882                     __ptext21 1C53  
                   __ptext13 1A58                     __ptext30 1000                     __ptext22 1B27  
                   __ptext14 1CA1                     __ptext31 198C                     __ptext23 1AA4  
                   __ptext15 1D50                     __ptext32 19B2                     __ptext24 19A6  
                   __ptext16 0806                     __ptext33 1BCD                     __ptext25 00CC  
                   __ptext17 1A34                     __ptext34 19D1                     __ptext26 1E89  
                   __ptext18 12B6                     __ptext35 1E1F                     __ptext27 1AFB  
                   __ptext19 199B                     __ptext36 1A10                     __ptext28 1ACF  
                   __ptext37 19EE                     __ptext29 0800                     __ptext38 1B8F  
           __size_of_spiRead 0009                     __powers_ 0013             __size_of_sprintf F2B2  
              __size_of_main 00BE                    pnum$text1 000B                     _spiWrite 0800  
                 _LCD_Cursor 1A10          __end_of_USART_Write 19B2                   _INTCONbits 000B  
                   isdigit@c 0071                     scale@scl 0050                    sprintf@ap 00B2  
           __tdiv_to_l_@exp1 0025             __tdiv_to_l_@cntr 0024                    sprintf@sp 00C5  
           __tdiv_to_l_@quot 0020             ___lwmod@dividend 0072             ___lldiv@dividend 0074  
           ??_spiReceiveWait 0070                    stringcode 000D                 ?__tdiv_to_l_ 0070  
     __Umul8_16@multiplicand 0070                     sprintf@c 00C8                     sprintf@f 00A0  
        USART_Write_String@a 0071          USART_Write_String@i 0074             ___lldiv@quotient 0079  
            ___lwmod@divisor 0070              ___lwmod@counter 0075                     stringdir 000D  
                   stringtab 0003                ___fladd@signs 0062                 ___fladd@aexp 0063  
               ___fladd@bexp 0064         __Umul8_16@multiplier 0078                  _USART_Write 19A6  
          __Umul8_16@product 0074  
