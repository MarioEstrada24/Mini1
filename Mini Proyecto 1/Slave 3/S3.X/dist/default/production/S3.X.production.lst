

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 20:06:10 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  0000                     	;# 
   286  0001                     	;# 
   287  0002                     	;# 
   288  0003                     	;# 
   289  0004                     	;# 
   290  0005                     	;# 
   291  0006                     	;# 
   292  0007                     	;# 
   293  0008                     	;# 
   294  0009                     	;# 
   295  000A                     	;# 
   296  000B                     	;# 
   297  000C                     	;# 
   298  000D                     	;# 
   299  000E                     	;# 
   300  000E                     	;# 
   301  000F                     	;# 
   302  0010                     	;# 
   303  0011                     	;# 
   304  0012                     	;# 
   305  0013                     	;# 
   306  0014                     	;# 
   307  0015                     	;# 
   308  0015                     	;# 
   309  0016                     	;# 
   310  0017                     	;# 
   311  0018                     	;# 
   312  0019                     	;# 
   313  001A                     	;# 
   314  001B                     	;# 
   315  001B                     	;# 
   316  001C                     	;# 
   317  001D                     	;# 
   318  001E                     	;# 
   319  001F                     	;# 
   320  0081                     	;# 
   321  0085                     	;# 
   322  0086                     	;# 
   323  0087                     	;# 
   324  0088                     	;# 
   325  0089                     	;# 
   326  008C                     	;# 
   327  008D                     	;# 
   328  008E                     	;# 
   329  008F                     	;# 
   330  0090                     	;# 
   331  0091                     	;# 
   332  0092                     	;# 
   333  0093                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0094                     	;# 
   337  0095                     	;# 
   338  0096                     	;# 
   339  0097                     	;# 
   340  0098                     	;# 
   341  0099                     	;# 
   342  009A                     	;# 
   343  009B                     	;# 
   344  009C                     	;# 
   345  009D                     	;# 
   346  009E                     	;# 
   347  009F                     	;# 
   348  0105                     	;# 
   349  0107                     	;# 
   350  0108                     	;# 
   351  0109                     	;# 
   352  010C                     	;# 
   353  010C                     	;# 
   354  010D                     	;# 
   355  010E                     	;# 
   356  010F                     	;# 
   357  0185                     	;# 
   358  0187                     	;# 
   359  0188                     	;# 
   360  0189                     	;# 
   361  018C                     	;# 
   362  018D                     	;# 
   363  0013                     _SSPBUF	set	19
   364  0014                     _SSPCON	set	20
   365  001F                     _ADCON0bits	set	31
   366  001E                     _ADRESH	set	30
   367  000B                     _INTCONbits	set	11
   368  000C                     _PIR1bits	set	12
   369  0001                     _TMR0	set	1
   370  000B                     _INTCON	set	11
   371  001F                     _ADCON0	set	31
   372  0008                     _PORTD	set	8
   373  0005                     _PORTA	set	5
   374  0063                     _SSPIF	set	99
   375  0094                     _SSPSTATbits	set	148
   376  0094                     _SSPSTAT	set	148
   377  009F                     _ADCON1bits	set	159
   378  008C                     _PIE1bits	set	140
   379  0096                     _IOCBbits	set	150
   380  0081                     _OPTION_REG	set	129
   381  0088                     _TRISD	set	136
   382  0085                     _TRISA	set	133
   383  043B                     _TRISC3	set	1083
   384  043D                     _TRISC5	set	1085
   385  0189                     _ANSELH	set	393
   386  0188                     _ANSEL	set	392
   387                           
   388                           	psect	cinit
   389  000F                     start_initialization:	
   390                           ; #config settings
   391                           
   392  000F                     __initialization:
   393                           
   394                           ; Clear objects allocated to COMMON
   395  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   396  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   397  0011                     end_of_initialization:	
   398                           ;End of C runtime variable initialization code
   399                           
   400  0011                     __end_of__initialization:
   401  0011  0183               	clrf	3
   402  0012  120A  118A  2815   	ljmp	_main	;jump to C main() function
   403                           
   404                           	psect	bssCOMMON
   405  0078                     __pbssCOMMON:
   406  0078                     _FLG0:
   407  0078                     	ds	1
   408  0079                     _TEMP:
   409  0079                     	ds	1
   410                           
   411                           	psect	cstackCOMMON
   412  0070                     __pcstackCOMMON:
   413  0070                     ?_spiWrite:
   414  0070                     ??_spiWrite:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ?_ADC:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ?_Setup:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ?_ISR:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_main:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     spiWrite@dat:	
   430                           ; 1 bytes @ 0x0
   431                           
   432                           
   433                           ; 1 bytes @ 0x0
   434  0070                     	ds	1
   435  0071                     ??_ISR:
   436                           
   437                           ; 1 bytes @ 0x1
   438  0071                     	ds	3
   439  0074                     ?_spiInit:
   440  0074                     ??_ADC:	
   441                           ; 1 bytes @ 0x4
   442                           
   443  0074                     spiInit@sDataSample:	
   444                           ; 1 bytes @ 0x4
   445                           
   446                           
   447                           ; 1 bytes @ 0x4
   448  0074                     	ds	1
   449  0075                     ADC@FLG0:
   450  0075                     spiInit@sClockIdle:	
   451                           ; 1 bytes @ 0x5
   452                           
   453                           
   454                           ; 1 bytes @ 0x5
   455  0075                     	ds	1
   456  0076                     spiInit@sTransmitEdge:
   457                           
   458                           ; 1 bytes @ 0x6
   459  0076                     	ds	1
   460  0077                     ??_spiInit:
   461  0077                     spiInit@sType:	
   462                           ; 1 bytes @ 0x7
   463                           
   464                           
   465                           ; 1 bytes @ 0x7
   466  0077                     	ds	1
   467  0078                     ??_Setup:
   468  0078                     ??_main:	
   469                           ; 1 bytes @ 0x8
   470                           
   471                           
   472                           	psect	maintext
   473  0015                     __pmaintext:	
   474                           ; 1 bytes @ 0x8
   475 ;;
   476 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   477 ;;
   478 ;; *************** function _main *****************
   479 ;; Defined at:
   480 ;;		line 74 in file "main_S3.c"
   481 ;; Parameters:    Size  Location     Type
   482 ;;		None
   483 ;; Auto vars:     Size  Location     Type
   484 ;;		None
   485 ;; Return value:  Size  Location     Type
   486 ;;                  1    wreg      void 
   487 ;; Registers used:
   488 ;;		wreg, status,2, status,0, pclath, cstack
   489 ;; Tracked objects:
   490 ;;		On entry : B00/0
   491 ;;		On exit  : 0/0
   492 ;;		Unchanged: 0/0
   493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   494 ;;      Params:         0       0       0       0       0
   495 ;;      Locals:         0       0       0       0       0
   496 ;;      Temps:          0       0       0       0       0
   497 ;;      Totals:         0       0       0       0       0
   498 ;;Total ram usage:        0 bytes
   499 ;; Hardware stack levels required when called:    4
   500 ;; This function calls:
   501 ;;		_ADC
   502 ;;		_Setup
   503 ;; This function is called by:
   504 ;;		Startup code after reset
   505 ;; This function uses a non-reentrant model
   506 ;;
   507                           
   508                           
   509                           ;psect for function _main
   510  0015                     _main:
   511  0015                     l833:	
   512                           ;incstack = 0
   513                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   514                           
   515                           
   516                           ;main_S3.c: 75:     Setup();
   517  0015  120A  118A  2046  120A  118A  	fcall	_Setup
   518  001A                     l835:
   519                           
   520                           ;main_S3.c: 76:     FLG0=1;
   521  001A  01F8               	clrf	_FLG0
   522  001B  0AF8               	incf	_FLG0,f
   523  001C                     l58:	
   524                           ;main_S3.c: 77:     while (1) {
   525                           
   526                           
   527                           ;main_S3.c: 78:         ADC(FLG0);
   528  001C  0878               	movf	_FLG0,w
   529  001D  120A  118A  20B2  120A  118A  	fcall	_ADC
   530  0022                     l837:
   531                           
   532                           ;main_S3.c: 79:         if (TEMP<=12){
   533  0022  300D               	movlw	13
   534  0023  0279               	subwf	_TEMP,w
   535  0024  1803               	skipnc
   536  0025  2827               	goto	u111
   537  0026  2828               	goto	u110
   538  0027                     u111:
   539  0027  282D               	goto	l841
   540  0028                     u110:
   541  0028                     l839:
   542                           
   543                           ;main_S3.c: 80:             PORTD = 0x01;
   544  0028  3001               	movlw	1
   545  0029  1283               	bcf	3,5	;RP0=0, select bank0
   546  002A  1303               	bcf	3,6	;RP1=0, select bank0
   547  002B  0088               	movwf	8	;volatile
   548                           
   549                           ;main_S3.c: 81:         }else if(12<=TEMP & TEMP<=18){
   550  002C  281C               	goto	l58
   551  002D                     l841:
   552  002D  300C               	movlw	12
   553  002E  0279               	subwf	_TEMP,w
   554  002F  1C03               	skipc
   555  0030  2832               	goto	u121
   556  0031  2833               	goto	u120
   557  0032                     u121:
   558  0032  283E               	goto	l847
   559  0033                     u120:
   560  0033                     l843:
   561  0033  3013               	movlw	19
   562  0034  0279               	subwf	_TEMP,w
   563  0035  1803               	skipnc
   564  0036  2838               	goto	u131
   565  0037  2839               	goto	u130
   566  0038                     u131:
   567  0038  283E               	goto	l847
   568  0039                     u130:
   569  0039                     l845:
   570                           
   571                           ;main_S3.c: 82:             PORTD = 0x02;
   572  0039  3002               	movlw	2
   573  003A  1283               	bcf	3,5	;RP0=0, select bank0
   574  003B  1303               	bcf	3,6	;RP1=0, select bank0
   575  003C  0088               	movwf	8	;volatile
   576                           
   577                           ;main_S3.c: 83:         }else{
   578  003D  281C               	goto	l58
   579  003E                     l847:
   580                           
   581                           ;main_S3.c: 84:             PORTD = 0x04;
   582  003E  3004               	movlw	4
   583  003F  1283               	bcf	3,5	;RP0=0, select bank0
   584  0040  1303               	bcf	3,6	;RP1=0, select bank0
   585  0041  0088               	movwf	8	;volatile
   586  0042  281C               	goto	l58
   587  0043  120A  118A  280C   	ljmp	start
   588  0046                     __end_of_main:
   589                           
   590                           	psect	text1
   591  0046                     __ptext1:	
   592 ;; *************** function _Setup *****************
   593 ;; Defined at:
   594 ;;		line 33 in file "main_S3.c"
   595 ;; Parameters:    Size  Location     Type
   596 ;;		None
   597 ;; Auto vars:     Size  Location     Type
   598 ;;		None
   599 ;; Return value:  Size  Location     Type
   600 ;;                  1    wreg      void 
   601 ;; Registers used:
   602 ;;		wreg, status,2, status,0, pclath, cstack
   603 ;; Tracked objects:
   604 ;;		On entry : 0/0
   605 ;;		On exit  : 0/0
   606 ;;		Unchanged: 0/0
   607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   608 ;;      Params:         0       0       0       0       0
   609 ;;      Locals:         0       0       0       0       0
   610 ;;      Temps:          0       0       0       0       0
   611 ;;      Totals:         0       0       0       0       0
   612 ;;Total ram usage:        0 bytes
   613 ;; Hardware stack levels used:    1
   614 ;; Hardware stack levels required when called:    3
   615 ;; This function calls:
   616 ;;		_spiInit
   617 ;; This function is called by:
   618 ;;		_main
   619 ;; This function uses a non-reentrant model
   620 ;;
   621                           
   622                           
   623                           ;psect for function _Setup
   624  0046                     _Setup:
   625  0046                     l809:	
   626                           ;incstack = 0
   627                           ; Regs used in _Setup: [wreg+status,2+status,0+pclath+cstack]
   628                           
   629                           
   630                           ;main_S3.c: 35:     ANSEL = 0b00000001;
   631  0046  3001               	movlw	1
   632  0047  1683               	bsf	3,5	;RP0=1, select bank3
   633  0048  1703               	bsf	3,6	;RP1=1, select bank3
   634  0049  0088               	movwf	8	;volatile
   635  004A                     l811:
   636                           
   637                           ;main_S3.c: 36:     ANSELH = 0x00;
   638  004A  0189               	clrf	9	;volatile
   639  004B                     l813:
   640                           
   641                           ;main_S3.c: 38:     TRISA = 0x01;
   642  004B  3001               	movlw	1
   643  004C  1683               	bsf	3,5	;RP0=1, select bank1
   644  004D  1303               	bcf	3,6	;RP1=0, select bank1
   645  004E  0085               	movwf	5	;volatile
   646                           
   647                           ;main_S3.c: 39:     TRISD = 0x00;
   648  004F  0188               	clrf	8	;volatile
   649                           
   650                           ;main_S3.c: 41:     PORTA = 0x00;
   651  0050  1283               	bcf	3,5	;RP0=0, select bank0
   652  0051  1303               	bcf	3,6	;RP1=0, select bank0
   653  0052  0185               	clrf	5	;volatile
   654                           
   655                           ;main_S3.c: 42:     PORTD = 0x00;
   656  0053  0188               	clrf	8	;volatile
   657  0054                     l815:
   658                           
   659                           ;main_S3.c: 44:     ADCON0 = 0b01000001;
   660  0054  3041               	movlw	65
   661  0055  009F               	movwf	31	;volatile
   662  0056                     l817:
   663                           
   664                           ;main_S3.c: 45:     OPTION_REG = 0x87;
   665  0056  3087               	movlw	135
   666  0057  1683               	bsf	3,5	;RP0=1, select bank1
   667  0058  1303               	bcf	3,6	;RP1=0, select bank1
   668  0059  0081               	movwf	1	;volatile
   669  005A                     l819:
   670                           
   671                           ;main_S3.c: 46:     INTCON = 0xE8;
   672  005A  30E8               	movlw	232
   673  005B  008B               	movwf	11	;volatile
   674  005C                     l821:
   675                           
   676                           ;main_S3.c: 47:     TMR0 = 15;
   677  005C  300F               	movlw	15
   678  005D  1283               	bcf	3,5	;RP0=0, select bank0
   679  005E  1303               	bcf	3,6	;RP1=0, select bank0
   680  005F  0081               	movwf	1	;volatile
   681  0060                     l823:
   682                           
   683                           ;main_S3.c: 49:     IOCBbits.IOCB0 = 1;
   684  0060  1683               	bsf	3,5	;RP0=1, select bank1
   685  0061  1303               	bcf	3,6	;RP1=0, select bank1
   686  0062  1416               	bsf	22,0	;volatile
   687  0063                     l825:
   688                           
   689                           ;main_S3.c: 50:     IOCBbits.IOCB1 = 1;
   690  0063  1496               	bsf	22,1	;volatile
   691  0064                     l827:
   692                           
   693                           ;main_S3.c: 51:     PIR1bits.SSPIF = 0;
   694  0064  1283               	bcf	3,5	;RP0=0, select bank0
   695  0065  1303               	bcf	3,6	;RP1=0, select bank0
   696  0066  118C               	bcf	12,3	;volatile
   697  0067                     l829:
   698                           
   699                           ;main_S3.c: 52:     PIE1bits.SSPIE = 1;
   700  0067  1683               	bsf	3,5	;RP0=1, select bank1
   701  0068  1303               	bcf	3,6	;RP1=0, select bank1
   702  0069  158C               	bsf	12,3	;volatile
   703  006A                     l831:
   704                           
   705                           ;main_S3.c: 53:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW,
   706  006A  01F4               	clrf	spiInit@sDataSample
   707  006B  01F5               	clrf	spiInit@sClockIdle
   708  006C  01F6               	clrf	spiInit@sTransmitEdge
   709  006D  3024               	movlw	36
   710  006E  120A  118A  209C  120A  118A  	fcall	_spiInit
   711  0073                     l45:
   712  0073  0008               	return
   713  0074                     __end_of_Setup:
   714                           
   715                           	psect	text2
   716  009C                     __ptext2:	
   717 ;; *************** function _spiInit *****************
   718 ;; Defined at:
   719 ;;		line 8 in file "SPI.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;  sType           1    wreg     enum E1292
   722 ;;  sDataSample     1    4[COMMON] enum E1300
   723 ;;  sClockIdle      1    5[COMMON] enum E1304
   724 ;;  sTransmitEdg    1    6[COMMON] enum E1308
   725 ;; Auto vars:     Size  Location     Type
   726 ;;  sType           1    7[COMMON] enum E1292
   727 ;; Return value:  Size  Location     Type
   728 ;;                  1    wreg      void 
   729 ;; Registers used:
   730 ;;		wreg, status,2, status,0
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   736 ;;      Params:         3       0       0       0       0
   737 ;;      Locals:         1       0       0       0       0
   738 ;;      Temps:          0       0       0       0       0
   739 ;;      Totals:         4       0       0       0       0
   740 ;;Total ram usage:        4 bytes
   741 ;; Hardware stack levels used:    1
   742 ;; Hardware stack levels required when called:    2
   743 ;; This function calls:
   744 ;;		Nothing
   745 ;; This function is called by:
   746 ;;		_Setup
   747 ;; This function uses a non-reentrant model
   748 ;;
   749                           
   750                           
   751                           ;psect for function _spiInit
   752  009C                     _spiInit:
   753                           
   754                           ;incstack = 0
   755                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   756                           ;spiInit@sType stored from wreg
   757  009C  00F7               	movwf	spiInit@sType
   758  009D                     l799:
   759                           
   760                           ;SPI.c: 8: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sClo
      +                          ckIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 9: {;SPI.c: 10:   TRISC5 = 0;
   761  009D  1683               	bsf	3,5	;RP0=1, select bank1
   762  009E  1303               	bcf	3,6	;RP1=0, select bank1
   763  009F  1287               	bcf	7,5	;volatile
   764                           
   765                           ;SPI.c: 11:   if(sType & 0b00000100)
   766  00A0  1D77               	btfss	spiInit@sType,2
   767  00A1  28A3               	goto	u101
   768  00A2  28A4               	goto	u100
   769  00A3                     u101:
   770  00A3  28A8               	goto	l805
   771  00A4                     u100:
   772  00A4                     l801:
   773                           
   774                           ;SPI.c: 12:   {;SPI.c: 13:     SSPSTAT = sTransmitEdge;
   775  00A4  0876               	movf	spiInit@sTransmitEdge,w
   776  00A5  0094               	movwf	20	;volatile
   777  00A6                     l803:
   778                           
   779                           ;SPI.c: 14:     TRISC3 = 1;
   780  00A6  1587               	bsf	7,3	;volatile
   781                           
   782                           ;SPI.c: 15:   }
   783  00A7  28AC               	goto	l95
   784  00A8                     l805:
   785                           
   786                           ;SPI.c: 17:   {;SPI.c: 18:     SSPSTAT = sDataSample | sTransmitEdge;
   787  00A8  0874               	movf	spiInit@sDataSample,w
   788  00A9  0476               	iorwf	spiInit@sTransmitEdge,w
   789  00AA  0094               	movwf	20	;volatile
   790  00AB                     l807:
   791                           
   792                           ;SPI.c: 19:     TRISC3 = 0;
   793  00AB  1187               	bcf	7,3	;volatile
   794  00AC                     l95:	
   795                           ;SPI.c: 20:   }
   796                           
   797                           
   798                           ;SPI.c: 21:   SSPCON = sType | sClockIdle;
   799  00AC  0877               	movf	spiInit@sType,w
   800  00AD  0475               	iorwf	spiInit@sClockIdle,w
   801  00AE  1283               	bcf	3,5	;RP0=0, select bank0
   802  00AF  1303               	bcf	3,6	;RP1=0, select bank0
   803  00B0  0094               	movwf	20	;volatile
   804  00B1                     l96:
   805  00B1  0008               	return
   806  00B2                     __end_of_spiInit:
   807                           
   808                           	psect	text3
   809  00B2                     __ptext3:	
   810 ;; *************** function _ADC *****************
   811 ;; Defined at:
   812 ;;		line 4 in file "ADC.c"
   813 ;; Parameters:    Size  Location     Type
   814 ;;  FLG0            1    wreg     unsigned char 
   815 ;; Auto vars:     Size  Location     Type
   816 ;;  FLG0            1    5[COMMON] unsigned char 
   817 ;; Return value:  Size  Location     Type
   818 ;;                  1    wreg      void 
   819 ;; Registers used:
   820 ;;		wreg, status,2, status,0
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   826 ;;      Params:         0       0       0       0       0
   827 ;;      Locals:         1       0       0       0       0
   828 ;;      Temps:          1       0       0       0       0
   829 ;;      Totals:         2       0       0       0       0
   830 ;;Total ram usage:        2 bytes
   831 ;; Hardware stack levels used:    1
   832 ;; Hardware stack levels required when called:    2
   833 ;; This function calls:
   834 ;;		Nothing
   835 ;; This function is called by:
   836 ;;		_main
   837 ;; This function uses a non-reentrant model
   838 ;;
   839                           
   840                           
   841                           ;psect for function _ADC
   842  00B2                     _ADC:
   843                           
   844                           ;incstack = 0
   845                           ; Regs used in _ADC: [wreg+status,2+status,0]
   846                           ;ADC@FLG0 stored from wreg
   847  00B2  00F5               	movwf	ADC@FLG0
   848  00B3                     l741:
   849                           
   850                           ;ADC.c: 6:     PIR1bits.ADIF = 0;
   851  00B3  1283               	bcf	3,5	;RP0=0, select bank0
   852  00B4  1303               	bcf	3,6	;RP1=0, select bank0
   853  00B5  130C               	bcf	12,6	;volatile
   854                           
   855                           ;ADC.c: 7:     PIE1bits.ADIE = 1;
   856  00B6  1683               	bsf	3,5	;RP0=1, select bank1
   857  00B7  1303               	bcf	3,6	;RP1=0, select bank1
   858  00B8  170C               	bsf	12,6	;volatile
   859                           
   860                           ;ADC.c: 8:     ADCON1bits.ADFM = 0;
   861  00B9  139F               	bcf	31,7	;volatile
   862  00BA                     l743:
   863                           
   864                           ;ADC.c: 11:     if(FLG0 == 1){
   865  00BA  0375               	decf	ADC@FLG0,w
   866  00BB  1D03               	btfss	3,2
   867  00BC  28BE               	goto	u21
   868  00BD  28BF               	goto	u20
   869  00BE                     u21:
   870  00BE  28C6               	goto	l79
   871  00BF                     u20:
   872  00BF                     l745:
   873                           
   874                           ;ADC.c: 12:         _delay((unsigned long)((20)*(8000000/4000000.0)));
   875  00BF  300D               	movlw	13
   876  00C0  00F4               	movwf	??_ADC
   877  00C1                     u147:
   878  00C1  0BF4               	decfsz	??_ADC,f
   879  00C2  28C1               	goto	u147
   880  00C3                     l747:
   881                           
   882                           ;ADC.c: 13:         ADCON0bits.GO = 1;
   883  00C3  1283               	bcf	3,5	;RP0=0, select bank0
   884  00C4  1303               	bcf	3,6	;RP1=0, select bank0
   885  00C5  149F               	bsf	31,1	;volatile
   886  00C6                     l749:
   887  00C6                     l79:
   888  00C6  0008               	return
   889  00C7                     __end_of_ADC:
   890                           
   891                           	psect	text4
   892  0074                     __ptext4:	
   893 ;; *************** function _ISR *****************
   894 ;; Defined at:
   895 ;;		line 57 in file "main_S3.c"
   896 ;; Parameters:    Size  Location     Type
   897 ;;		None
   898 ;; Auto vars:     Size  Location     Type
   899 ;;		None
   900 ;; Return value:  Size  Location     Type
   901 ;;                  1    wreg      void 
   902 ;; Registers used:
   903 ;;		wreg, status,2, status,0, pclath, cstack
   904 ;; Tracked objects:
   905 ;;		On entry : 0/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   909 ;;      Params:         0       0       0       0       0
   910 ;;      Locals:         0       0       0       0       0
   911 ;;      Temps:          3       0       0       0       0
   912 ;;      Totals:         3       0       0       0       0
   913 ;;Total ram usage:        3 bytes
   914 ;; Hardware stack levels used:    1
   915 ;; Hardware stack levels required when called:    1
   916 ;; This function calls:
   917 ;;		_spiWrite
   918 ;; This function is called by:
   919 ;;		Interrupt level 1
   920 ;; This function uses a non-reentrant model
   921 ;;
   922                           
   923                           
   924                           ;psect for function _ISR
   925  0074                     _ISR:
   926  0074                     i1l753:
   927                           
   928                           ;main_S3.c: 58:         if (INTCONbits.T0IF == 1) {
   929  0074  1D0B               	btfss	11,2	;volatile
   930  0075  2877               	goto	u4_21
   931  0076  2878               	goto	u4_20
   932  0077                     u4_21:
   933  0077  287D               	goto	i1l759
   934  0078                     u4_20:
   935  0078                     i1l755:
   936                           
   937                           ;main_S3.c: 59:         TMR0 = 15;
   938  0078  300F               	movlw	15
   939  0079  1283               	bcf	3,5	;RP0=0, select bank0
   940  007A  1303               	bcf	3,6	;RP1=0, select bank0
   941  007B  0081               	movwf	1	;volatile
   942  007C                     i1l757:
   943                           
   944                           ;main_S3.c: 61:         INTCONbits.T0IF = 0;
   945  007C  110B               	bcf	11,2	;volatile
   946  007D                     i1l759:
   947                           
   948                           ;main_S3.c: 64:     if (PIR1bits.ADIF == 1) {
   949  007D  1283               	bcf	3,5	;RP0=0, select bank0
   950  007E  1303               	bcf	3,6	;RP1=0, select bank0
   951  007F  1F0C               	btfss	12,6	;volatile
   952  0080  2882               	goto	u5_21
   953  0081  2883               	goto	u5_20
   954  0082                     u5_21:
   955  0082  2888               	goto	i1l765
   956  0083                     u5_20:
   957  0083                     i1l761:
   958                           
   959                           ;main_S3.c: 65:         TEMP = ADRESH;
   960  0083  081E               	movf	30,w	;volatile
   961  0084  00F1               	movwf	??_ISR
   962  0085  0871               	movf	??_ISR,w
   963  0086  00F9               	movwf	_TEMP
   964  0087                     i1l763:
   965                           
   966                           ;main_S3.c: 66:         PIR1bits.ADIF = 0;
   967  0087  130C               	bcf	12,6	;volatile
   968  0088                     i1l765:
   969                           
   970                           ;main_S3.c: 68:     if(SSPIF==1){
   971  0088  1D8C               	btfss	12,3	;volatile
   972  0089  288B               	goto	u6_21
   973  008A  288C               	goto	u6_20
   974  008B                     u6_21:
   975  008B  2895               	goto	i1l53
   976  008C                     u6_20:
   977  008C                     i1l767:
   978                           
   979                           ;main_S3.c: 69:         spiWrite(TEMP);
   980  008C  0879               	movf	_TEMP,w
   981  008D  120A  118A  20C7  120A  118A  	fcall	_spiWrite
   982  0092                     i1l769:
   983                           
   984                           ;main_S3.c: 70:         SSPIF = 0;
   985  0092  1283               	bcf	3,5	;RP0=0, select bank0
   986  0093  1303               	bcf	3,6	;RP1=0, select bank0
   987  0094  118C               	bcf	12,3	;volatile
   988  0095                     i1l53:
   989  0095  0873               	movf	??_ISR+2,w
   990  0096  008A               	movwf	10
   991  0097  0E72               	swapf	??_ISR+1,w
   992  0098  0083               	movwf	3
   993  0099  0EFE               	swapf	btemp,f
   994  009A  0E7E               	swapf	btemp,w
   995  009B  0009               	retfie
   996  009C                     __end_of_ISR:
   997                           
   998                           	psect	intentry
   999  0004                     __pintentry:	
  1000                           ;incstack = 0
  1001                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  1002                           
  1003  0004                     interrupt_function:
  1004  007E                     saved_w	set	btemp
  1005  0004  00FE               	movwf	btemp
  1006  0005  0E03               	swapf	3,w
  1007  0006  00F2               	movwf	??_ISR+1
  1008  0007  080A               	movf	10,w
  1009  0008  00F3               	movwf	??_ISR+2
  1010  0009  120A  118A  2874   	ljmp	_ISR
  1011                           
  1012                           	psect	text5
  1013  00C7                     __ptext5:	
  1014 ;; *************** function _spiWrite *****************
  1015 ;; Defined at:
  1016 ;;		line 31 in file "SPI.c"
  1017 ;; Parameters:    Size  Location     Type
  1018 ;;  dat             1    wreg     unsigned char 
  1019 ;; Auto vars:     Size  Location     Type
  1020 ;;  dat             1    0[COMMON] unsigned char 
  1021 ;; Return value:  Size  Location     Type
  1022 ;;                  1    wreg      void 
  1023 ;; Registers used:
  1024 ;;		wreg
  1025 ;; Tracked objects:
  1026 ;;		On entry : 0/0
  1027 ;;		On exit  : 0/0
  1028 ;;		Unchanged: 0/0
  1029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1030 ;;      Params:         0       0       0       0       0
  1031 ;;      Locals:         1       0       0       0       0
  1032 ;;      Temps:          0       0       0       0       0
  1033 ;;      Totals:         1       0       0       0       0
  1034 ;;Total ram usage:        1 bytes
  1035 ;; Hardware stack levels used:    1
  1036 ;; This function calls:
  1037 ;;		Nothing
  1038 ;; This function is called by:
  1039 ;;		_ISR
  1040 ;; This function uses a non-reentrant model
  1041 ;;
  1042                           
  1043                           
  1044                           ;psect for function _spiWrite
  1045  00C7                     _spiWrite:
  1046                           
  1047                           ;incstack = 0
  1048                           ; Regs used in _spiWrite: [wreg]
  1049                           ;spiWrite@dat stored from wreg
  1050  00C7  00F0               	movwf	spiWrite@dat
  1051  00C8                     i1l739:
  1052                           
  1053                           ;SPI.c: 31: void spiWrite(char dat);SPI.c: 32: {;SPI.c: 33:   SSPBUF = dat;
  1054  00C8  0870               	movf	spiWrite@dat,w
  1055  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  1056  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  1057  00CB  0093               	movwf	19	;volatile
  1058  00CC                     i1l105:
  1059  00CC  0008               	return
  1060  00CD                     __end_of_spiWrite:
  1061  007E                     btemp	set	126	;btemp
  1062  007E                     wtemp0	set	126
  1063                           
  1064                           	psect	config
  1065                           
  1066                           ;Config register CONFIG1 @ 0x2007
  1067                           ;	Oscillator Selection bits
  1068                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  1069                           ;	Watchdog Timer Enable bit
  1070                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1071                           ;	Power-up Timer Enable bit
  1072                           ;	PWRTE = OFF, PWRT disabled
  1073                           ;	RE3/MCLR pin function select bit
  1074                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1075                           ;	Code Protection bit
  1076                           ;	CP = OFF, Program memory code protection is disabled
  1077                           ;	Data Code Protection bit
  1078                           ;	CPD = OFF, Data memory code protection is disabled
  1079                           ;	Brown Out Reset Selection bits
  1080                           ;	BOREN = OFF, BOR disabled
  1081                           ;	Internal External Switchover bit
  1082                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1083                           ;	Fail-Safe Clock Monitor Enabled bit
  1084                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1085                           ;	Low Voltage Programming Enable bit
  1086                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1087                           ;	In-Circuit Debugger Mode bit
  1088                           ;	DEBUG = 0x1, unprogrammed default
  1089  2007                     	org	8199
  1090  2007  20D5               	dw	8405
  1091                           
  1092                           ;Config register CONFIG2 @ 0x2008
  1093                           ;	Brown-out Reset Selection bit
  1094                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1095                           ;	Flash Program Memory Self Write Enable bits
  1096                           ;	WRT = OFF, Write protection off
  1097  2008                     	org	8200
  1098  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _Setup->_spiInit

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     375
                                _ADC
                              _Setup
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              4 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _ADC                                                  2     2      0      15
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0      15
                                              1 COMMON     3     3      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC
   _Setup
     _spiInit

 _ISR (ROOT)
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 20:06:10 2021

            _SSPSTATbits 0094                       l45 0073                       l58 001C  
                     l79 00C6                       l95 00AC                       l96 00B1  
                     u20 00BF                       u21 00BE                      _ADC 00B2  
                    l801 00A4                      l803 00A6                      l811 004A  
                    l741 00B3                      l805 00A8                      l821 005C  
                    l813 004B                      l743 00BA                      l807 00AB  
                    l831 006A                      l823 0060                      l815 0054  
                    l745 00BF                      l825 0063                      l817 0056  
                    l809 0046                      l841 002D                      l833 0015  
                    l747 00C3                      l827 0064                      l819 005A  
                    l843 0033                      l835 001A                      l749 00C6  
                    l829 0067                      l845 0039                      l837 0022  
                    l847 003E                      l839 0028                      l799 009D  
                    u100 00A4                      u101 00A3                      u110 0028  
                    u111 0027                      u120 0033                      u121 0032  
                    u130 0039                      u131 0038                      u147 00C1  
                    _ISR 0074                     ?_ADC 0070                     ?_ISR 0070  
                   _FLG0 0078                     i1l53 0095                     _TEMP 0079  
                   _TMR0 0001                     u4_20 0078                     u4_21 0077  
                   u5_20 0083                     u5_21 0082                     u6_20 008C  
                   u6_21 008B                     _main 0015                     btemp 007E  
                   start 000C                    ??_ADC 0074                    ??_ISR 0071  
                  ?_main 0070                    _ANSEL 0188                    i1l105 00CC  
                  i1l761 0083                    i1l753 0074                    i1l739 00C8  
                  i1l763 0087                    i1l755 0078                    i1l765 0088  
                  i1l757 007C                    i1l767 008C                    i1l759 007D  
                  i1l769 0092                    _PORTA 0005                    _PORTD 0008  
                  _TRISA 0085                    _TRISD 0088                    _SSPIF 0063  
                  _Setup 0046                    pclath 000A          __end_of_spiInit 00B2  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0046                   ??_main 0078                   ?_Setup 0070  
                 _ADCON0 001F                   _ADRESH 001E                   _ANSELH 0189  
                 _INTCON 000B                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013                   saved_w 007E  
       __end_of_spiWrite 00CD                ??_spiInit 0077  __end_of__initialization 0011  
         __pcstackCOMMON 0070            __end_of_Setup 0074                  ADC@FLG0 0075  
                ??_Setup 0078               __pmaintext 0015               __pintentry 0004  
                _SSPSTAT 0094                ?_spiWrite 0070                  __ptext1 0046  
                __ptext2 009C                  __ptext3 00B2                  __ptext4 0074  
                __ptext5 00C7             __size_of_ADC 0015             __size_of_ISR 0028  
                _spiInit 009C     end_of_initialization 0011               ??_spiWrite 0070  
            spiWrite@dat 0070      start_initialization 000F              __end_of_ADC 00C7  
            __end_of_ISR 009C              __pbssCOMMON 0078                ___latbits 0002  
      __size_of_spiWrite 0006                 ?_spiInit 0074           __size_of_Setup 002E  
   spiInit@sTransmitEdge 0076        interrupt_function 0004                 _IOCBbits 0096  
               _PIE1bits 008C       spiInit@sDataSample 0074                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F         __size_of_spiInit 0016  
          __size_of_main 0031                 _spiWrite 00C7             spiInit@sType 0077  
      spiInit@sClockIdle 0075               _INTCONbits 000B                 intlevel1 0000  
             _OPTION_REG 0081  
